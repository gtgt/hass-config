{
  "version": 1,
  "minor_version": 1,
  "key": "trace.saved_traces",
  "data": {
    "automation.ac_thermostat_relay_init": [
      {
        "extended_dict": {
          "last_step": "action/5",
          "run_id": "54ddbc50715d45d264cabbfa95cc3f4d",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:29:00.151822+00:00",
            "finish": "2025-01-08T22:29:00.168954+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2025-01-08T22:29:00.152020+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay_init",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay_init",
                      "last_triggered": "2025-01-08T22:28:55.151639+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (peri\u00f3dikus)",
                      "icon": "mdi:thermostat-auto"
                    },
                    "last_changed": "2025-01-07T22:59:11.827286+00:00",
                    "last_reported": "2025-01-08T22:28:55.168608+00:00",
                    "last_updated": "2025-01-08T22:28:55.168608+00:00",
                    "context": {
                      "id": "01JH40HY7FTGYJPVMHYVJVAAFD",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-08T23:29:00.151509+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:29:00.152668+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "d39226103cdea24410d4ef6eb61e332d"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH40J33QH8P8CA172HM3PQ7N",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_study",
                      "switch_entity_id": "switch.ac_relay_study"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-08T22:29:00.155020+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "481a8cc2b1e68a660fc40392911efcb5"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_bedroom",
                      "switch_entity_id": "switch.ac_relay_bedroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-08T22:29:00.157319+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "cefa457611b3fd14dc631e1b424c62df"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childa",
                      "switch_entity_id": "switch.ac_relay_childa"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2025-01-08T22:29:00.160948+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "cd80bb7f125013fa6a212cfafe9c8341"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childb",
                      "switch_entity_id": "switch.ac_relay_childb"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2025-01-08T22:29:00.163246+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "ec4e1d0a297475c763d8a08d464975a1"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_kitchen",
                      "switch_entity_id": "switch.ac_relay_kitchen"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2025-01-08T22:29:00.166444+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "7c3a7a36ea2f550848a5d4e4aacf7ba7"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_livingroom",
                      "switch_entity_id": "switch.ac_relay_livingroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay_init",
            "alias": "ac_thermostat_relay_init",
            "initial_state": true,
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "time_pattern",
                "seconds": "/5"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "climate.t_study",
                  "switch_entity_id": "switch.ac_relay_study"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_bedroom",
                  "switch_entity_id": "switch.ac_relay_bedroom"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childa",
                  "switch_entity_id": "switch.ac_relay_childa"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childb",
                  "switch_entity_id": "switch.ac_relay_childb"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_kitchen",
                  "switch_entity_id": "switch.ac_relay_kitchen"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_livingroom",
                  "switch_entity_id": "switch.ac_relay_livingroom"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40J33QH8P8CA172HM3PQ7N",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/5",
          "run_id": "54ddbc50715d45d264cabbfa95cc3f4d",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:29:00.151822+00:00",
            "finish": "2025-01-08T22:29:00.168954+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/5",
          "run_id": "fb8635411f305758de4e1b4193c9410c",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:29:05.151277+00:00",
            "finish": "2025-01-08T22:29:05.164849+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2025-01-08T22:29:05.151431+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay_init",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay_init",
                      "last_triggered": "2025-01-08T22:29:00.152239+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (peri\u00f3dikus)",
                      "icon": "mdi:thermostat-auto"
                    },
                    "last_changed": "2025-01-07T22:59:11.827286+00:00",
                    "last_reported": "2025-01-08T22:29:00.168779+00:00",
                    "last_updated": "2025-01-08T22:29:00.168779+00:00",
                    "context": {
                      "id": "01JH40J33QH8P8CA172HM3PQ7N",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-08T23:29:05.151065+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:29:05.151886+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "1b01938e50b341483237abcb675e0c55"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH40J7ZZYRRENYQHJA2MJBKV",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_study",
                      "switch_entity_id": "switch.ac_relay_study"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-08T22:29:05.154103+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "6457ad15b4f917546b3dcf175bf32fc4"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_bedroom",
                      "switch_entity_id": "switch.ac_relay_bedroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-08T22:29:05.156118+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "31e7deb80a1149a05ba41910d9e64826"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childa",
                      "switch_entity_id": "switch.ac_relay_childa"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2025-01-08T22:29:05.158833+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "11f9d47c97326ad4323fc1999a7d3afc"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childb",
                      "switch_entity_id": "switch.ac_relay_childb"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2025-01-08T22:29:05.161003+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "ced2fe72c06f89205bd7d75d46b4690e"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_kitchen",
                      "switch_entity_id": "switch.ac_relay_kitchen"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2025-01-08T22:29:05.162619+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "709dd36b3f1cd086e6221d9a5c9280d9"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_livingroom",
                      "switch_entity_id": "switch.ac_relay_livingroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay_init",
            "alias": "ac_thermostat_relay_init",
            "initial_state": true,
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "time_pattern",
                "seconds": "/5"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "climate.t_study",
                  "switch_entity_id": "switch.ac_relay_study"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_bedroom",
                  "switch_entity_id": "switch.ac_relay_bedroom"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childa",
                  "switch_entity_id": "switch.ac_relay_childa"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childb",
                  "switch_entity_id": "switch.ac_relay_childb"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_kitchen",
                  "switch_entity_id": "switch.ac_relay_kitchen"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_livingroom",
                  "switch_entity_id": "switch.ac_relay_livingroom"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40J7ZZYRRENYQHJA2MJBKV",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/5",
          "run_id": "fb8635411f305758de4e1b4193c9410c",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:29:05.151277+00:00",
            "finish": "2025-01-08T22:29:05.164849+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/5",
          "run_id": "c3fcb82be14ecc59ccf9462dd0c21cb1",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:29:10.151019+00:00",
            "finish": "2025-01-08T22:29:10.168071+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2025-01-08T22:29:10.151263+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay_init",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay_init",
                      "last_triggered": "2025-01-08T22:29:05.151592+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (peri\u00f3dikus)",
                      "icon": "mdi:thermostat-auto"
                    },
                    "last_changed": "2025-01-07T22:59:11.827286+00:00",
                    "last_reported": "2025-01-08T22:29:05.164752+00:00",
                    "last_updated": "2025-01-08T22:29:05.164752+00:00",
                    "context": {
                      "id": "01JH40J7ZZYRRENYQHJA2MJBKV",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-08T23:29:10.150687+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:29:10.151750+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "576e4d5032da62a45370d94a9e4edc73"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH40JCW6Z295QFCT8CTSV1YS",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_study",
                      "switch_entity_id": "switch.ac_relay_study"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-08T22:29:10.154139+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "ba102a95afae72fd359d3d46d7c2ad77"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_bedroom",
                      "switch_entity_id": "switch.ac_relay_bedroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-08T22:29:10.156327+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "ea9a2795fea59a3d81df6c828d701b3a"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childa",
                      "switch_entity_id": "switch.ac_relay_childa"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2025-01-08T22:29:10.160000+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "60323f70fc5e7f5ef2fe7a8f67a03ea0"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childb",
                      "switch_entity_id": "switch.ac_relay_childb"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2025-01-08T22:29:10.162365+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "b3d495507358526359e188b49bb7af49"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_kitchen",
                      "switch_entity_id": "switch.ac_relay_kitchen"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2025-01-08T22:29:10.165579+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "3f588bf4d18180c2204edd41472145dd"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_livingroom",
                      "switch_entity_id": "switch.ac_relay_livingroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay_init",
            "alias": "ac_thermostat_relay_init",
            "initial_state": true,
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "time_pattern",
                "seconds": "/5"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "climate.t_study",
                  "switch_entity_id": "switch.ac_relay_study"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_bedroom",
                  "switch_entity_id": "switch.ac_relay_bedroom"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childa",
                  "switch_entity_id": "switch.ac_relay_childa"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childb",
                  "switch_entity_id": "switch.ac_relay_childb"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_kitchen",
                  "switch_entity_id": "switch.ac_relay_kitchen"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_livingroom",
                  "switch_entity_id": "switch.ac_relay_livingroom"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40JCW6Z295QFCT8CTSV1YS",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/5",
          "run_id": "c3fcb82be14ecc59ccf9462dd0c21cb1",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:29:10.151019+00:00",
            "finish": "2025-01-08T22:29:10.168071+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/5",
          "run_id": "7b02799ca716c30f4bc2ff3b06daeec7",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:29:15.151414+00:00",
            "finish": "2025-01-08T22:29:15.168078+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2025-01-08T22:29:15.151540+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay_init",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay_init",
                      "last_triggered": "2025-01-08T22:29:10.151383+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (peri\u00f3dikus)",
                      "icon": "mdi:thermostat-auto"
                    },
                    "last_changed": "2025-01-07T22:59:11.827286+00:00",
                    "last_reported": "2025-01-08T22:29:10.167833+00:00",
                    "last_updated": "2025-01-08T22:29:10.167833+00:00",
                    "context": {
                      "id": "01JH40JCW6Z295QFCT8CTSV1YS",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-08T23:29:15.151046+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:29:15.152019+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "6c4436af436f638c1ff1b332406ce2b5"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH40JHRFYF13KF9C37S0AR13",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_study",
                      "switch_entity_id": "switch.ac_relay_study"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-08T22:29:15.158661+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "4a1538bfed4265dc94a1fca708fd471e"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_bedroom",
                      "switch_entity_id": "switch.ac_relay_bedroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-08T22:29:15.161424+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "80fe59cfc0ea0d9968082ddea64bda24"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childa",
                      "switch_entity_id": "switch.ac_relay_childa"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2025-01-08T22:29:15.162898+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "588efdc71317506d8b82a5bcef990ed1"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childb",
                      "switch_entity_id": "switch.ac_relay_childb"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2025-01-08T22:29:15.164359+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "8e3c60263c4ed3cf971e187c7e99df56"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_kitchen",
                      "switch_entity_id": "switch.ac_relay_kitchen"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2025-01-08T22:29:15.166671+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "1c0392f034f27da66bb94e71f4ae3740"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_livingroom",
                      "switch_entity_id": "switch.ac_relay_livingroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay_init",
            "alias": "ac_thermostat_relay_init",
            "initial_state": true,
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "time_pattern",
                "seconds": "/5"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "climate.t_study",
                  "switch_entity_id": "switch.ac_relay_study"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_bedroom",
                  "switch_entity_id": "switch.ac_relay_bedroom"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childa",
                  "switch_entity_id": "switch.ac_relay_childa"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childb",
                  "switch_entity_id": "switch.ac_relay_childb"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_kitchen",
                  "switch_entity_id": "switch.ac_relay_kitchen"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_livingroom",
                  "switch_entity_id": "switch.ac_relay_livingroom"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40JHRFYF13KF9C37S0AR13",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/5",
          "run_id": "7b02799ca716c30f4bc2ff3b06daeec7",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:29:15.151414+00:00",
            "finish": "2025-01-08T22:29:15.168078+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/5",
          "run_id": "b43fcaaf922fe053b84f6eafee89f804",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:29:20.152016+00:00",
            "finish": "2025-01-08T22:29:20.173031+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2025-01-08T22:29:20.152167+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay_init",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay_init",
                      "last_triggered": "2025-01-08T22:29:15.151636+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (peri\u00f3dikus)",
                      "icon": "mdi:thermostat-auto"
                    },
                    "last_changed": "2025-01-07T22:59:11.827286+00:00",
                    "last_reported": "2025-01-08T22:29:15.167979+00:00",
                    "last_updated": "2025-01-08T22:29:15.167979+00:00",
                    "context": {
                      "id": "01JH40JHRFYF13KF9C37S0AR13",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-08T23:29:20.151616+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:29:20.152739+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "93643228759c18b084f773667cd3db06"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_study",
                      "switch_entity_id": "switch.ac_relay_study"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-08T22:29:20.159330+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "4b2ecedbb8b79bfb2eac32095d9e7d4d"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_bedroom",
                      "switch_entity_id": "switch.ac_relay_bedroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-08T22:29:20.161624+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "ba33c64765768c22ad1769db2e96c820"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childa",
                      "switch_entity_id": "switch.ac_relay_childa"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2025-01-08T22:29:20.163807+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "80efc28128e39118be95f4c7dce8cf8d"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childb",
                      "switch_entity_id": "switch.ac_relay_childb"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2025-01-08T22:29:20.167323+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "5c0d34856be8380761ab6232ad458d4e"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_kitchen",
                      "switch_entity_id": "switch.ac_relay_kitchen"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2025-01-08T22:29:20.169629+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "f42dbd9355f776f62aa59db1067ea694"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_livingroom",
                      "switch_entity_id": "switch.ac_relay_livingroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay_init",
            "alias": "ac_thermostat_relay_init",
            "initial_state": true,
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "time_pattern",
                "seconds": "/5"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "climate.t_study",
                  "switch_entity_id": "switch.ac_relay_study"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_bedroom",
                  "switch_entity_id": "switch.ac_relay_bedroom"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childa",
                  "switch_entity_id": "switch.ac_relay_childa"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childb",
                  "switch_entity_id": "switch.ac_relay_childb"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_kitchen",
                  "switch_entity_id": "switch.ac_relay_kitchen"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_livingroom",
                  "switch_entity_id": "switch.ac_relay_livingroom"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/5",
          "run_id": "b43fcaaf922fe053b84f6eafee89f804",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:29:20.152016+00:00",
            "finish": "2025-01-08T22:29:20.173031+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern"
        }
      }
    ],
    "script.turn_switch_by_climate": [
      {
        "extended_dict": {
          "last_step": "sequence/0",
          "run_id": "4b2ecedbb8b79bfb2eac32095d9e7d4d",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-08T22:29:20.159629+00:00",
            "finish": "2025-01-08T22:29:20.161491+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate",
          "trace": {
            "sequence/0": [
              {
                "path": "sequence/0",
                "timestamp": "2025-01-08T22:29:20.160672+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "script.turn_switch_by_climate",
                    "state": "off",
                    "attributes": {
                      "last_triggered": "2025-01-08T22:29:20.153750+00:00",
                      "mode": "single",
                      "current": 0,
                      "icon": "mdi:switch",
                      "friendly_name": "turn_switch_by_climate"
                    },
                    "last_changed": "2025-01-08T22:29:20.158894+00:00",
                    "last_reported": "2025-01-08T22:29:20.158894+00:00",
                    "last_updated": "2025-01-08T22:29:20.158894+00:00",
                    "context": {
                      "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "climate_entity_id": "climate.t_bedroom",
                  "switch_entity_id": "switch.ac_relay_bedroom",
                  "hvac_mode": "heating",
                  "preferred_switch_state": "on",
                  "context": {
                    "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "result": false,
                  "entities": [
                    "switch.ac_relay_bedroom"
                  ]
                }
              }
            ]
          },
          "config": {
            "alias": "turn_switch_by_climate",
            "icon": "mdi:switch",
            "description": "Turn valves on/off depending of a climate's hvac_action.",
            "fields": {
              "climate_entity_id": {
                "description": "Entity ID of climate to read hvac_action.",
                "example": "climate.t_livingroom"
              },
              "switch_entity_id": {
                "description": "Entity ID of switch to turn on/off.",
                "example": "switch.ac_relay_livingroom"
              }
            },
            "variables": {
              "hvac_mode": "{{ state_attr(climate_entity_id, 'hvac_action') if states(climate_entity_id) in ['heat', 'cool', 'heat_cool'] else states(climate_entity_id) }}",
              "preferred_switch_state": "{{ 'off' if hvac_mode in ['idle', 'off', 'unavailable'] else 'on' }}"
            },
            "sequence": [
              {
                "condition": "template",
                "value_template": "{{ states(switch_entity_id) !=  preferred_switch_state }}"
              },
              {
                "condition": "template",
                "value_template": "{{ ( as_timestamp(now()) - as_timestamp(state_attr('saver.saver', 'variables')[switch_entity_id + '_last_switch']|default('0')) | default(0, 'None') ) | int >= 20 }}"
              },
              {
                "data": {
                  "level": "info",
                  "message": "[{{ climate_entity_id }} / {{ switch_entity_id }}]: {{ states(switch_entity_id) }} -> {{ preferred_switch_state }} ({{ hvac_mode }})"
                },
                "action": "system_log.write"
              },
              {
                "service_template": "switch.turn_{{ preferred_switch_state }}",
                "data": {
                  "entity_id": "{{ switch_entity_id }}"
                }
              },
              {
                "data": {
                  "name": "{{ switch_entity_id }}_last_switch",
                  "value": "{{ now() }}"
                },
                "action": "saver.set_variable"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "sequence/0",
          "run_id": "4b2ecedbb8b79bfb2eac32095d9e7d4d",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-08T22:29:20.159629+00:00",
            "finish": "2025-01-08T22:29:20.161491+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate"
        }
      },
      {
        "extended_dict": {
          "last_step": "sequence/0",
          "run_id": "ba33c64765768c22ad1769db2e96c820",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-08T22:29:20.161940+00:00",
            "finish": "2025-01-08T22:29:20.163611+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate",
          "trace": {
            "sequence/0": [
              {
                "path": "sequence/0",
                "timestamp": "2025-01-08T22:29:20.162898+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "script.turn_switch_by_climate",
                    "state": "off",
                    "attributes": {
                      "last_triggered": "2025-01-08T22:29:20.160359+00:00",
                      "mode": "single",
                      "current": 0,
                      "icon": "mdi:switch",
                      "friendly_name": "turn_switch_by_climate"
                    },
                    "last_changed": "2025-01-08T22:29:20.161293+00:00",
                    "last_reported": "2025-01-08T22:29:20.161293+00:00",
                    "last_updated": "2025-01-08T22:29:20.161293+00:00",
                    "context": {
                      "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "climate_entity_id": "climate.t_childa",
                  "switch_entity_id": "switch.ac_relay_childa",
                  "hvac_mode": "idle",
                  "preferred_switch_state": "off",
                  "context": {
                    "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "result": false,
                  "entities": [
                    "switch.ac_relay_childa"
                  ]
                }
              }
            ]
          },
          "config": {
            "alias": "turn_switch_by_climate",
            "icon": "mdi:switch",
            "description": "Turn valves on/off depending of a climate's hvac_action.",
            "fields": {
              "climate_entity_id": {
                "description": "Entity ID of climate to read hvac_action.",
                "example": "climate.t_livingroom"
              },
              "switch_entity_id": {
                "description": "Entity ID of switch to turn on/off.",
                "example": "switch.ac_relay_livingroom"
              }
            },
            "variables": {
              "hvac_mode": "{{ state_attr(climate_entity_id, 'hvac_action') if states(climate_entity_id) in ['heat', 'cool', 'heat_cool'] else states(climate_entity_id) }}",
              "preferred_switch_state": "{{ 'off' if hvac_mode in ['idle', 'off', 'unavailable'] else 'on' }}"
            },
            "sequence": [
              {
                "condition": "template",
                "value_template": "{{ states(switch_entity_id) !=  preferred_switch_state }}"
              },
              {
                "condition": "template",
                "value_template": "{{ ( as_timestamp(now()) - as_timestamp(state_attr('saver.saver', 'variables')[switch_entity_id + '_last_switch']|default('0')) | default(0, 'None') ) | int >= 20 }}"
              },
              {
                "data": {
                  "level": "info",
                  "message": "[{{ climate_entity_id }} / {{ switch_entity_id }}]: {{ states(switch_entity_id) }} -> {{ preferred_switch_state }} ({{ hvac_mode }})"
                },
                "action": "system_log.write"
              },
              {
                "service_template": "switch.turn_{{ preferred_switch_state }}",
                "data": {
                  "entity_id": "{{ switch_entity_id }}"
                }
              },
              {
                "data": {
                  "name": "{{ switch_entity_id }}_last_switch",
                  "value": "{{ now() }}"
                },
                "action": "saver.set_variable"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "sequence/0",
          "run_id": "ba33c64765768c22ad1769db2e96c820",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-08T22:29:20.161940+00:00",
            "finish": "2025-01-08T22:29:20.163611+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate"
        }
      },
      {
        "extended_dict": {
          "last_step": "sequence/0",
          "run_id": "80efc28128e39118be95f4c7dce8cf8d",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-08T22:29:20.164051+00:00",
            "finish": "2025-01-08T22:29:20.167162+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate",
          "trace": {
            "sequence/0": [
              {
                "path": "sequence/0",
                "timestamp": "2025-01-08T22:29:20.166340+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "script.turn_switch_by_climate",
                    "state": "off",
                    "attributes": {
                      "last_triggered": "2025-01-08T22:29:20.162543+00:00",
                      "mode": "single",
                      "current": 0,
                      "icon": "mdi:switch",
                      "friendly_name": "turn_switch_by_climate"
                    },
                    "last_changed": "2025-01-08T22:29:20.163422+00:00",
                    "last_reported": "2025-01-08T22:29:20.163422+00:00",
                    "last_updated": "2025-01-08T22:29:20.163422+00:00",
                    "context": {
                      "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "climate_entity_id": "climate.t_childb",
                  "switch_entity_id": "switch.ac_relay_childb",
                  "hvac_mode": "idle",
                  "preferred_switch_state": "off",
                  "context": {
                    "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "result": false,
                  "entities": [
                    "switch.ac_relay_childb"
                  ]
                }
              }
            ]
          },
          "config": {
            "alias": "turn_switch_by_climate",
            "icon": "mdi:switch",
            "description": "Turn valves on/off depending of a climate's hvac_action.",
            "fields": {
              "climate_entity_id": {
                "description": "Entity ID of climate to read hvac_action.",
                "example": "climate.t_livingroom"
              },
              "switch_entity_id": {
                "description": "Entity ID of switch to turn on/off.",
                "example": "switch.ac_relay_livingroom"
              }
            },
            "variables": {
              "hvac_mode": "{{ state_attr(climate_entity_id, 'hvac_action') if states(climate_entity_id) in ['heat', 'cool', 'heat_cool'] else states(climate_entity_id) }}",
              "preferred_switch_state": "{{ 'off' if hvac_mode in ['idle', 'off', 'unavailable'] else 'on' }}"
            },
            "sequence": [
              {
                "condition": "template",
                "value_template": "{{ states(switch_entity_id) !=  preferred_switch_state }}"
              },
              {
                "condition": "template",
                "value_template": "{{ ( as_timestamp(now()) - as_timestamp(state_attr('saver.saver', 'variables')[switch_entity_id + '_last_switch']|default('0')) | default(0, 'None') ) | int >= 20 }}"
              },
              {
                "data": {
                  "level": "info",
                  "message": "[{{ climate_entity_id }} / {{ switch_entity_id }}]: {{ states(switch_entity_id) }} -> {{ preferred_switch_state }} ({{ hvac_mode }})"
                },
                "action": "system_log.write"
              },
              {
                "service_template": "switch.turn_{{ preferred_switch_state }}",
                "data": {
                  "entity_id": "{{ switch_entity_id }}"
                }
              },
              {
                "data": {
                  "name": "{{ switch_entity_id }}_last_switch",
                  "value": "{{ now() }}"
                },
                "action": "saver.set_variable"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "sequence/0",
          "run_id": "80efc28128e39118be95f4c7dce8cf8d",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-08T22:29:20.164051+00:00",
            "finish": "2025-01-08T22:29:20.167162+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate"
        }
      },
      {
        "extended_dict": {
          "last_step": "sequence/0",
          "run_id": "5c0d34856be8380761ab6232ad458d4e",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-08T22:29:20.167602+00:00",
            "finish": "2025-01-08T22:29:20.169493+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate",
          "trace": {
            "sequence/0": [
              {
                "path": "sequence/0",
                "timestamp": "2025-01-08T22:29:20.168653+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "script.turn_switch_by_climate",
                    "state": "off",
                    "attributes": {
                      "last_triggered": "2025-01-08T22:29:20.165966+00:00",
                      "mode": "single",
                      "current": 0,
                      "icon": "mdi:switch",
                      "friendly_name": "turn_switch_by_climate"
                    },
                    "last_changed": "2025-01-08T22:29:20.166958+00:00",
                    "last_reported": "2025-01-08T22:29:20.166958+00:00",
                    "last_updated": "2025-01-08T22:29:20.166958+00:00",
                    "context": {
                      "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "climate_entity_id": "climate.t_kitchen",
                  "switch_entity_id": "switch.ac_relay_kitchen",
                  "hvac_mode": "unavailable",
                  "preferred_switch_state": "off",
                  "context": {
                    "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "result": false,
                  "entities": [
                    "switch.ac_relay_kitchen"
                  ]
                }
              }
            ]
          },
          "config": {
            "alias": "turn_switch_by_climate",
            "icon": "mdi:switch",
            "description": "Turn valves on/off depending of a climate's hvac_action.",
            "fields": {
              "climate_entity_id": {
                "description": "Entity ID of climate to read hvac_action.",
                "example": "climate.t_livingroom"
              },
              "switch_entity_id": {
                "description": "Entity ID of switch to turn on/off.",
                "example": "switch.ac_relay_livingroom"
              }
            },
            "variables": {
              "hvac_mode": "{{ state_attr(climate_entity_id, 'hvac_action') if states(climate_entity_id) in ['heat', 'cool', 'heat_cool'] else states(climate_entity_id) }}",
              "preferred_switch_state": "{{ 'off' if hvac_mode in ['idle', 'off', 'unavailable'] else 'on' }}"
            },
            "sequence": [
              {
                "condition": "template",
                "value_template": "{{ states(switch_entity_id) !=  preferred_switch_state }}"
              },
              {
                "condition": "template",
                "value_template": "{{ ( as_timestamp(now()) - as_timestamp(state_attr('saver.saver', 'variables')[switch_entity_id + '_last_switch']|default('0')) | default(0, 'None') ) | int >= 20 }}"
              },
              {
                "data": {
                  "level": "info",
                  "message": "[{{ climate_entity_id }} / {{ switch_entity_id }}]: {{ states(switch_entity_id) }} -> {{ preferred_switch_state }} ({{ hvac_mode }})"
                },
                "action": "system_log.write"
              },
              {
                "service_template": "switch.turn_{{ preferred_switch_state }}",
                "data": {
                  "entity_id": "{{ switch_entity_id }}"
                }
              },
              {
                "data": {
                  "name": "{{ switch_entity_id }}_last_switch",
                  "value": "{{ now() }}"
                },
                "action": "saver.set_variable"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "sequence/0",
          "run_id": "5c0d34856be8380761ab6232ad458d4e",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-08T22:29:20.167602+00:00",
            "finish": "2025-01-08T22:29:20.169493+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate"
        }
      },
      {
        "extended_dict": {
          "last_step": "sequence/0",
          "run_id": "f42dbd9355f776f62aa59db1067ea694",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-08T22:29:20.169948+00:00",
            "finish": "2025-01-08T22:29:20.172639+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate",
          "trace": {
            "sequence/0": [
              {
                "path": "sequence/0",
                "timestamp": "2025-01-08T22:29:20.170904+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "script.turn_switch_by_climate",
                    "state": "off",
                    "attributes": {
                      "last_triggered": "2025-01-08T22:29:20.168328+00:00",
                      "mode": "single",
                      "current": 0,
                      "icon": "mdi:switch",
                      "friendly_name": "turn_switch_by_climate"
                    },
                    "last_changed": "2025-01-08T22:29:20.169293+00:00",
                    "last_reported": "2025-01-08T22:29:20.169293+00:00",
                    "last_updated": "2025-01-08T22:29:20.169293+00:00",
                    "context": {
                      "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "climate_entity_id": "climate.t_livingroom",
                  "switch_entity_id": "switch.ac_relay_livingroom",
                  "hvac_mode": "idle",
                  "preferred_switch_state": "off",
                  "context": {
                    "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "result": false,
                  "entities": [
                    "switch.ac_relay_livingroom"
                  ]
                }
              }
            ]
          },
          "config": {
            "alias": "turn_switch_by_climate",
            "icon": "mdi:switch",
            "description": "Turn valves on/off depending of a climate's hvac_action.",
            "fields": {
              "climate_entity_id": {
                "description": "Entity ID of climate to read hvac_action.",
                "example": "climate.t_livingroom"
              },
              "switch_entity_id": {
                "description": "Entity ID of switch to turn on/off.",
                "example": "switch.ac_relay_livingroom"
              }
            },
            "variables": {
              "hvac_mode": "{{ state_attr(climate_entity_id, 'hvac_action') if states(climate_entity_id) in ['heat', 'cool', 'heat_cool'] else states(climate_entity_id) }}",
              "preferred_switch_state": "{{ 'off' if hvac_mode in ['idle', 'off', 'unavailable'] else 'on' }}"
            },
            "sequence": [
              {
                "condition": "template",
                "value_template": "{{ states(switch_entity_id) !=  preferred_switch_state }}"
              },
              {
                "condition": "template",
                "value_template": "{{ ( as_timestamp(now()) - as_timestamp(state_attr('saver.saver', 'variables')[switch_entity_id + '_last_switch']|default('0')) | default(0, 'None') ) | int >= 20 }}"
              },
              {
                "data": {
                  "level": "info",
                  "message": "[{{ climate_entity_id }} / {{ switch_entity_id }}]: {{ states(switch_entity_id) }} -> {{ preferred_switch_state }} ({{ hvac_mode }})"
                },
                "action": "system_log.write"
              },
              {
                "service_template": "switch.turn_{{ preferred_switch_state }}",
                "data": {
                  "entity_id": "{{ switch_entity_id }}"
                }
              },
              {
                "data": {
                  "name": "{{ switch_entity_id }}_last_switch",
                  "value": "{{ now() }}"
                },
                "action": "saver.set_variable"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40JPMQ6Q953G4Z85M7KBB6",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "sequence/0",
          "run_id": "f42dbd9355f776f62aa59db1067ea694",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-08T22:29:20.169948+00:00",
            "finish": "2025-01-08T22:29:20.172639+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate"
        }
      }
    ],
    "automation.humi1_operation_mode_update": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "f633e0b2f562d3af481cd1f2c3a44fb1",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-07T22:59:25.171751+00:00",
            "finish": "2025-01-07T22:59:25.173956+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_operation_mode_update",
          "error": "Error rendering data template: UndefinedError: 'homeassistant.util.read_only_dict.ReadOnlyDict object' has no attribute 'mode'",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-07T22:59:25.171811+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.humi1_operation_mode_update",
                    "state": "on",
                    "attributes": {
                      "id": "humi1_operation_mode_update",
                      "last_triggered": "2025-01-07T17:42:06.243196+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Humi1 operation mode update"
                    },
                    "last_changed": "2025-01-07T22:59:11.831548+00:00",
                    "last_reported": "2025-01-07T22:59:11.831548+00:00",
                    "last_updated": "2025-01-07T22:59:11.831548+00:00",
                    "context": {
                      "id": "01JH1FWNAQFBXEHRCHVPTB32GK",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-07T22:59:25.172148+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH1FX2BKW91RDJB9XATS6SGK",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "error": "Error rendering data template: UndefinedError: 'homeassistant.util.read_only_dict.ReadOnlyDict object' has no attribute 'mode'"
              }
            ]
          },
          "config": {
            "id": "humi1_operation_mode_update",
            "alias": "Humi1 operation mode update",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "state",
                "entity_id": "fan.humi1"
              }
            ],
            "action": {
              "entity_id": "input_select.humi1_mode",
              "data_template": {
                "option": "{{ states.fan.humi1.attributes.preset_modes[states.fan.humi1.attributes.mode-1] }}"
              },
              "action": "input_select.select_option"
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH1FX2BKW91RDJB9XATS6SGK",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "f633e0b2f562d3af481cd1f2c3a44fb1",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-07T22:59:25.171751+00:00",
            "finish": "2025-01-07T22:59:25.173956+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_operation_mode_update",
          "error": "Error rendering data template: UndefinedError: 'homeassistant.util.read_only_dict.ReadOnlyDict object' has no attribute 'mode'",
          "trigger": "Home Assistant starting"
        }
      }
    ],
    "automation.humi1_target_humidity_update": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "340772bac17e121bbf47ad0406ad2196",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-07T22:59:25.174792+00:00",
            "finish": "2025-01-07T22:59:25.176775+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_target_humidity_update",
          "error": "expected float for dictionary value @ data['value']",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-07T22:59:25.174842+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.humi1_target_humidity_update",
                    "state": "on",
                    "attributes": {
                      "id": "humi1_target_humidity_update",
                      "last_triggered": "2025-01-07T17:42:06.250410+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Humi1 target humidity update"
                    },
                    "last_changed": "2025-01-07T22:59:11.832200+00:00",
                    "last_reported": "2025-01-07T22:59:11.832200+00:00",
                    "last_updated": "2025-01-07T22:59:11.832200+00:00",
                    "context": {
                      "id": "01JH1FWNAR7MWG3JQW3PBFEF4E",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-07T22:59:25.175164+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH1FX2BPBAA2MVAWPB2E38JP",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "error": "expected float for dictionary value @ data['value']",
                "result": {
                  "params": {
                    "domain": "input_number",
                    "service": "set_value",
                    "service_data": {
                      "value": "",
                      "entity_id": [
                        "input_number.humi1_target_humidity"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "input_number.humi1_target_humidity"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "humi1_target_humidity_update",
            "alias": "Humi1 target humidity update",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "state",
                "entity_id": "sensor.humi1_target_humidity"
              }
            ],
            "action": {
              "entity_id": "input_number.humi1_target_humidity",
              "data_template": {
                "value": "{{ states.fan.humi1.attributes.target_humidity }}"
              },
              "action": "input_number.set_value"
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH1FX2BPBAA2MVAWPB2E38JP",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "340772bac17e121bbf47ad0406ad2196",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-07T22:59:25.174792+00:00",
            "finish": "2025-01-07T22:59:25.176775+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_target_humidity_update",
          "error": "expected float for dictionary value @ data['value']",
          "trigger": "Home Assistant starting"
        }
      }
    ],
    "automation.set_theme_at_startup": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "df2453e958279a54477acd9dc618ca54",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-07T22:59:25.180681+00:00",
            "finish": "2025-01-07T22:59:25.183147+00:00"
          },
          "domain": "automation",
          "item_id": "set_theme_at_startup",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-07T22:59:25.180735+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.set_theme_at_startup",
                    "state": "on",
                    "attributes": {
                      "id": "set_theme_at_startup",
                      "last_triggered": "2025-01-07T17:42:06.259739+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Set theme at startup"
                    },
                    "last_changed": "2025-01-07T22:59:11.835226+00:00",
                    "last_reported": "2025-01-07T22:59:11.835226+00:00",
                    "last_updated": "2025-01-07T22:59:11.835226+00:00",
                    "context": {
                      "id": "01JH1FWNAVDF3K742SHR7Y31HS",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-07T22:59:25.182310+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH1FX2BW8ZF4E18KNQP5XG5H",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "frontend",
                    "service": "set_theme",
                    "service_data": {
                      "name": "Google Dark Theme"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "set_theme_at_startup",
            "alias": "Set theme at startup",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              }
            ],
            "action": {
              "data": {
                "name": "Google Dark Theme"
              },
              "action": "frontend.set_theme"
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH1FX2BW8ZF4E18KNQP5XG5H",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "df2453e958279a54477acd9dc618ca54",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-07T22:59:25.180681+00:00",
            "finish": "2025-01-07T22:59:25.183147+00:00"
          },
          "domain": "automation",
          "item_id": "set_theme_at_startup",
          "trigger": "Home Assistant starting"
        }
      }
    ],
    "automation.ac_auto_on": [
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "87a71c3ae59a79b3bf3dc327e22ad039",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:00.194354+00:00",
            "finish": "2025-01-08T22:29:00.195434+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:29:00.194559+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_on",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_on",
                      "last_triggered": "2025-01-08T21:48:32.700705+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma bekapcsol\u00e1s, ha legal\u00e1bb egy szelep nyitva",
                      "icon": "mdi:hvac"
                    },
                    "last_changed": "2025-01-07T22:59:11.825737+00:00",
                    "last_reported": "2025-01-08T21:48:33.840995+00:00",
                    "last_updated": "2025-01-08T21:48:33.840995+00:00",
                    "context": {
                      "id": "01JH3Y80HV5BG59B0VT0QEPFNB",
                      "parent_id": "01JH3Y80GZ948G5AQ5PX178PMJ",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-08T23:29:00.193985+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:29:00.194626+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-08T22:29:00.194681+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-08T22:29:00.194727+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2025-01-08T22:29:00.194839+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/entity_id/0": [
              {
                "path": "condition/0/conditions/1/entity_id/0",
                "timestamp": "2025-01-08T22:29:00.194882+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2025-01-08T22:29:00.194971+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/entity_id/0": [
              {
                "path": "condition/0/conditions/2/entity_id/0",
                "timestamp": "2025-01-08T22:29:00.195012+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/3": [
              {
                "path": "condition/0/conditions/3",
                "timestamp": "2025-01-08T22:29:00.195097+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/3/entity_id/0": [
              {
                "path": "condition/0/conditions/3/entity_id/0",
                "timestamp": "2025-01-08T22:29:00.195137+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-08T22:29:00.195324+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2025-01-08T22:29:00.195365+00:00",
                "result": {
                  "result": false,
                  "state": "heat",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_on",
            "alias": "ac_auto_on",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_study",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childa",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childb",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_bedroom",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_kitchen",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_livingroom",
                    "state": "on"
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "climate.ac",
                "state": "off"
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_on"
              },
              {
                "data": {
                  "entity_id": "climate.ac",
                  "hvac_mode": "{{ states('climate.t_' + trigger.entity_id|regex_findall_index(find='\\.ac_relay_(.*)', index=0, ignorecase=False) ) }}"
                },
                "action": "climate.set_hvac_mode"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40J352R1BFKKGMRWTAN40D",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "87a71c3ae59a79b3bf3dc327e22ad039",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:00.194354+00:00",
            "finish": "2025-01-08T22:29:00.195434+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "1a8408452740cfab4e5457e57d0cc3e5",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:05.194789+00:00",
            "finish": "2025-01-08T22:29:05.195578+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:29:05.194907+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_on",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_on",
                      "last_triggered": "2025-01-08T21:48:32.700705+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma bekapcsol\u00e1s, ha legal\u00e1bb egy szelep nyitva",
                      "icon": "mdi:hvac"
                    },
                    "last_changed": "2025-01-07T22:59:11.825737+00:00",
                    "last_reported": "2025-01-08T21:48:33.840995+00:00",
                    "last_updated": "2025-01-08T21:48:33.840995+00:00",
                    "context": {
                      "id": "01JH3Y80HV5BG59B0VT0QEPFNB",
                      "parent_id": "01JH3Y80GZ948G5AQ5PX178PMJ",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-08T23:29:05.194427+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:29:05.194965+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-08T22:29:05.195009+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-08T22:29:05.195045+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2025-01-08T22:29:05.195139+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/entity_id/0": [
              {
                "path": "condition/0/conditions/1/entity_id/0",
                "timestamp": "2025-01-08T22:29:05.195196+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2025-01-08T22:29:05.195271+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/entity_id/0": [
              {
                "path": "condition/0/conditions/2/entity_id/0",
                "timestamp": "2025-01-08T22:29:05.195305+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/3": [
              {
                "path": "condition/0/conditions/3",
                "timestamp": "2025-01-08T22:29:05.195373+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/3/entity_id/0": [
              {
                "path": "condition/0/conditions/3/entity_id/0",
                "timestamp": "2025-01-08T22:29:05.195405+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-08T22:29:05.195486+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2025-01-08T22:29:05.195520+00:00",
                "result": {
                  "result": false,
                  "state": "heat",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_on",
            "alias": "ac_auto_on",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_study",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childa",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childb",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_bedroom",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_kitchen",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_livingroom",
                    "state": "on"
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "climate.ac",
                "state": "off"
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_on"
              },
              {
                "data": {
                  "entity_id": "climate.ac",
                  "hvac_mode": "{{ states('climate.t_' + trigger.entity_id|regex_findall_index(find='\\.ac_relay_(.*)', index=0, ignorecase=False) ) }}"
                },
                "action": "climate.set_hvac_mode"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40J81A15W0Q34BXDQKXBFW",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "1a8408452740cfab4e5457e57d0cc3e5",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:05.194789+00:00",
            "finish": "2025-01-08T22:29:05.195578+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "2e33ac94e6a56c4422d438084d4a8ee1",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:10.194624+00:00",
            "finish": "2025-01-08T22:29:10.195325+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:29:10.194725+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_on",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_on",
                      "last_triggered": "2025-01-08T21:48:32.700705+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma bekapcsol\u00e1s, ha legal\u00e1bb egy szelep nyitva",
                      "icon": "mdi:hvac"
                    },
                    "last_changed": "2025-01-07T22:59:11.825737+00:00",
                    "last_reported": "2025-01-08T21:48:33.840995+00:00",
                    "last_updated": "2025-01-08T21:48:33.840995+00:00",
                    "context": {
                      "id": "01JH3Y80HV5BG59B0VT0QEPFNB",
                      "parent_id": "01JH3Y80GZ948G5AQ5PX178PMJ",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-08T23:29:10.194367+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:29:10.194774+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-08T22:29:10.194810+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-08T22:29:10.194839+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2025-01-08T22:29:10.194913+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/entity_id/0": [
              {
                "path": "condition/0/conditions/1/entity_id/0",
                "timestamp": "2025-01-08T22:29:10.194939+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2025-01-08T22:29:10.195031+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/entity_id/0": [
              {
                "path": "condition/0/conditions/2/entity_id/0",
                "timestamp": "2025-01-08T22:29:10.195090+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/3": [
              {
                "path": "condition/0/conditions/3",
                "timestamp": "2025-01-08T22:29:10.195142+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/3/entity_id/0": [
              {
                "path": "condition/0/conditions/3/entity_id/0",
                "timestamp": "2025-01-08T22:29:10.195166+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-08T22:29:10.195252+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2025-01-08T22:29:10.195279+00:00",
                "result": {
                  "result": false,
                  "state": "heat",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_on",
            "alias": "ac_auto_on",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_study",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childa",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childb",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_bedroom",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_kitchen",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_livingroom",
                    "state": "on"
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "climate.ac",
                "state": "off"
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_on"
              },
              {
                "data": {
                  "entity_id": "climate.ac",
                  "hvac_mode": "{{ states('climate.t_' + trigger.entity_id|regex_findall_index(find='\\.ac_relay_(.*)', index=0, ignorecase=False) ) }}"
                },
                "action": "climate.set_hvac_mode"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40JCXJHDB2SP2VFJCCSVH9",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "2e33ac94e6a56c4422d438084d4a8ee1",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:10.194624+00:00",
            "finish": "2025-01-08T22:29:10.195325+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "275b8d5ae430d1b6268425eac9ed5a7e",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:15.194504+00:00",
            "finish": "2025-01-08T22:29:15.195050+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:29:15.194587+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_on",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_on",
                      "last_triggered": "2025-01-08T21:48:32.700705+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma bekapcsol\u00e1s, ha legal\u00e1bb egy szelep nyitva",
                      "icon": "mdi:hvac"
                    },
                    "last_changed": "2025-01-07T22:59:11.825737+00:00",
                    "last_reported": "2025-01-08T21:48:33.840995+00:00",
                    "last_updated": "2025-01-08T21:48:33.840995+00:00",
                    "context": {
                      "id": "01JH3Y80HV5BG59B0VT0QEPFNB",
                      "parent_id": "01JH3Y80GZ948G5AQ5PX178PMJ",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-08T23:29:15.194209+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:29:15.194628+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-08T22:29:15.194659+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-08T22:29:15.194685+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2025-01-08T22:29:15.194750+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/entity_id/0": [
              {
                "path": "condition/0/conditions/1/entity_id/0",
                "timestamp": "2025-01-08T22:29:15.194774+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2025-01-08T22:29:15.194821+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/entity_id/0": [
              {
                "path": "condition/0/conditions/2/entity_id/0",
                "timestamp": "2025-01-08T22:29:15.194846+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/3": [
              {
                "path": "condition/0/conditions/3",
                "timestamp": "2025-01-08T22:29:15.194901+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/3/entity_id/0": [
              {
                "path": "condition/0/conditions/3/entity_id/0",
                "timestamp": "2025-01-08T22:29:15.194926+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-08T22:29:15.194986+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2025-01-08T22:29:15.195010+00:00",
                "result": {
                  "result": false,
                  "state": "heat",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_on",
            "alias": "ac_auto_on",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_study",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childa",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childb",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_bedroom",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_kitchen",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_livingroom",
                    "state": "on"
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "climate.ac",
                "state": "off"
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_on"
              },
              {
                "data": {
                  "entity_id": "climate.ac",
                  "hvac_mode": "{{ states('climate.t_' + trigger.entity_id|regex_findall_index(find='\\.ac_relay_(.*)', index=0, ignorecase=False) ) }}"
                },
                "action": "climate.set_hvac_mode"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40JHSTB1MZDYF9KE495DZR",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "275b8d5ae430d1b6268425eac9ed5a7e",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:15.194504+00:00",
            "finish": "2025-01-08T22:29:15.195050+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "74226e4506e0bb403a224f7883051b48",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:20.195363+00:00",
            "finish": "2025-01-08T22:29:20.196325+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:29:20.195486+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_on",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_on",
                      "last_triggered": "2025-01-08T21:48:32.700705+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma bekapcsol\u00e1s, ha legal\u00e1bb egy szelep nyitva",
                      "icon": "mdi:hvac"
                    },
                    "last_changed": "2025-01-07T22:59:11.825737+00:00",
                    "last_reported": "2025-01-08T21:48:33.840995+00:00",
                    "last_updated": "2025-01-08T21:48:33.840995+00:00",
                    "context": {
                      "id": "01JH3Y80HV5BG59B0VT0QEPFNB",
                      "parent_id": "01JH3Y80GZ948G5AQ5PX178PMJ",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-08T23:29:20.195015+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:29:20.195547+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-08T22:29:20.195596+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-08T22:29:20.195640+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2025-01-08T22:29:20.195746+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/entity_id/0": [
              {
                "path": "condition/0/conditions/1/entity_id/0",
                "timestamp": "2025-01-08T22:29:20.195825+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2025-01-08T22:29:20.195941+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/entity_id/0": [
              {
                "path": "condition/0/conditions/2/entity_id/0",
                "timestamp": "2025-01-08T22:29:20.195980+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/3": [
              {
                "path": "condition/0/conditions/3",
                "timestamp": "2025-01-08T22:29:20.196058+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/3/entity_id/0": [
              {
                "path": "condition/0/conditions/3/entity_id/0",
                "timestamp": "2025-01-08T22:29:20.196095+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-08T22:29:20.196215+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2025-01-08T22:29:20.196255+00:00",
                "result": {
                  "result": false,
                  "state": "heat",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_on",
            "alias": "ac_auto_on",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_study",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childa",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childb",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_bedroom",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_kitchen",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_livingroom",
                    "state": "on"
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "climate.ac",
                "state": "off"
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_on"
              },
              {
                "data": {
                  "entity_id": "climate.ac",
                  "hvac_mode": "{{ states('climate.t_' + trigger.entity_id|regex_findall_index(find='\\.ac_relay_(.*)', index=0, ignorecase=False) ) }}"
                },
                "action": "climate.set_hvac_mode"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40JPP35BAH55PWBZKPC653",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "74226e4506e0bb403a224f7883051b48",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:20.195363+00:00",
            "finish": "2025-01-08T22:29:20.196325+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern"
        }
      }
    ],
    "automation.ac_auto_off": [
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/3",
          "run_id": "e56fe81ba7c7374d4f53c0e31e7edc4c",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:00.313095+00:00",
            "finish": "2025-01-08T22:29:00.313782+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:29:00.313253+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_off",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_off",
                      "last_triggered": "2025-01-08T21:48:30.313026+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma kikapcsol\u00e1s, ha minden szelep z\u00e1rva",
                      "icon": "mdi:hvac-off"
                    },
                    "last_changed": "2025-01-07T22:59:11.825148+00:00",
                    "last_reported": "2025-01-08T21:48:30.362343+00:00",
                    "last_updated": "2025-01-08T21:48:30.362343+00:00",
                    "context": {
                      "id": "01JH3Y7Y78TE8NDB7P2RPV34C7",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-08T23:29:00.312773+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:29:00.313318+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-08T22:29:00.313370+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-08T22:29:00.313484+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "condition/0/conditions/0/entity_id/1": [
              {
                "path": "condition/0/conditions/0/entity_id/1",
                "timestamp": "2025-01-08T22:29:00.313569+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "condition/0/conditions/0/entity_id/2": [
              {
                "path": "condition/0/conditions/0/entity_id/2",
                "timestamp": "2025-01-08T22:29:00.313634+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "condition/0/conditions/0/entity_id/3": [
              {
                "path": "condition/0/conditions/0/entity_id/3",
                "timestamp": "2025-01-08T22:29:00.313697+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_off",
            "alias": "ac_auto_off",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom",
                  "climate.ac"
                ]
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": [
                      "switch.ac_relay_study",
                      "switch.ac_relay_childa",
                      "switch.ac_relay_childb",
                      "switch.ac_relay_bedroom",
                      "switch.ac_relay_kitchen",
                      "switch.ac_relay_livingroom"
                    ],
                    "state": "off"
                  },
                  {
                    "condition": "numeric_state",
                    "entity_id": "automation.ac_mode",
                    "attribute": "current",
                    "below": 1
                  }
                ]
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_off"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40J38SNSVW72V7MYCBCY1B",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/3",
          "run_id": "e56fe81ba7c7374d4f53c0e31e7edc4c",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:00.313095+00:00",
            "finish": "2025-01-08T22:29:00.313782+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/3",
          "run_id": "84924b7f7122d31a9e45be290cc76887",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:05.312380+00:00",
            "finish": "2025-01-08T22:29:05.312993+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:29:05.312477+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_off",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_off",
                      "last_triggered": "2025-01-08T21:48:30.313026+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma kikapcsol\u00e1s, ha minden szelep z\u00e1rva",
                      "icon": "mdi:hvac-off"
                    },
                    "last_changed": "2025-01-07T22:59:11.825148+00:00",
                    "last_reported": "2025-01-08T21:48:30.362343+00:00",
                    "last_updated": "2025-01-08T21:48:30.362343+00:00",
                    "context": {
                      "id": "01JH3Y7Y78TE8NDB7P2RPV34C7",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-08T23:29:05.312053+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:29:05.312537+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-08T22:29:05.312587+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-08T22:29:05.312628+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "condition/0/conditions/0/entity_id/1": [
              {
                "path": "condition/0/conditions/0/entity_id/1",
                "timestamp": "2025-01-08T22:29:05.312710+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "condition/0/conditions/0/entity_id/2": [
              {
                "path": "condition/0/conditions/0/entity_id/2",
                "timestamp": "2025-01-08T22:29:05.312845+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "condition/0/conditions/0/entity_id/3": [
              {
                "path": "condition/0/conditions/0/entity_id/3",
                "timestamp": "2025-01-08T22:29:05.312908+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_off",
            "alias": "ac_auto_off",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom",
                  "climate.ac"
                ]
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": [
                      "switch.ac_relay_study",
                      "switch.ac_relay_childa",
                      "switch.ac_relay_childb",
                      "switch.ac_relay_bedroom",
                      "switch.ac_relay_kitchen",
                      "switch.ac_relay_livingroom"
                    ],
                    "state": "off"
                  },
                  {
                    "condition": "numeric_state",
                    "entity_id": "automation.ac_mode",
                    "attribute": "current",
                    "below": 1
                  }
                ]
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_off"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40J850XTS4V9TZZHDGY7ZN",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/3",
          "run_id": "84924b7f7122d31a9e45be290cc76887",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:05.312380+00:00",
            "finish": "2025-01-08T22:29:05.312993+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/3",
          "run_id": "88a73b907403d405c282e688d4af9014",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:10.312568+00:00",
            "finish": "2025-01-08T22:29:10.313146+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:29:10.312681+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_off",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_off",
                      "last_triggered": "2025-01-08T21:48:30.313026+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma kikapcsol\u00e1s, ha minden szelep z\u00e1rva",
                      "icon": "mdi:hvac-off"
                    },
                    "last_changed": "2025-01-07T22:59:11.825148+00:00",
                    "last_reported": "2025-01-08T21:48:30.362343+00:00",
                    "last_updated": "2025-01-08T21:48:30.362343+00:00",
                    "context": {
                      "id": "01JH3Y7Y78TE8NDB7P2RPV34C7",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-08T23:29:10.312137+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:29:10.312745+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-08T22:29:10.312797+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-08T22:29:10.312841+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "condition/0/conditions/0/entity_id/1": [
              {
                "path": "condition/0/conditions/0/entity_id/1",
                "timestamp": "2025-01-08T22:29:10.312929+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "condition/0/conditions/0/entity_id/2": [
              {
                "path": "condition/0/conditions/0/entity_id/2",
                "timestamp": "2025-01-08T22:29:10.312994+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "condition/0/conditions/0/entity_id/3": [
              {
                "path": "condition/0/conditions/0/entity_id/3",
                "timestamp": "2025-01-08T22:29:10.313058+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_off",
            "alias": "ac_auto_off",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom",
                  "climate.ac"
                ]
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": [
                      "switch.ac_relay_study",
                      "switch.ac_relay_childa",
                      "switch.ac_relay_childb",
                      "switch.ac_relay_bedroom",
                      "switch.ac_relay_kitchen",
                      "switch.ac_relay_livingroom"
                    ],
                    "state": "off"
                  },
                  {
                    "condition": "numeric_state",
                    "entity_id": "automation.ac_mode",
                    "attribute": "current",
                    "below": 1
                  }
                ]
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_off"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40JD18QAFX2K9JTAGWBYYR",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/3",
          "run_id": "88a73b907403d405c282e688d4af9014",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:10.312568+00:00",
            "finish": "2025-01-08T22:29:10.313146+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/3",
          "run_id": "1167a8680ddccb3ff5621c37e0ee4200",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:15.313397+00:00",
            "finish": "2025-01-08T22:29:15.314162+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:29:15.313532+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_off",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_off",
                      "last_triggered": "2025-01-08T21:48:30.313026+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma kikapcsol\u00e1s, ha minden szelep z\u00e1rva",
                      "icon": "mdi:hvac-off"
                    },
                    "last_changed": "2025-01-07T22:59:11.825148+00:00",
                    "last_reported": "2025-01-08T21:48:30.362343+00:00",
                    "last_updated": "2025-01-08T21:48:30.362343+00:00",
                    "context": {
                      "id": "01JH3Y7Y78TE8NDB7P2RPV34C7",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-08T23:29:15.312811+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:29:15.313614+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-08T22:29:15.313747+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-08T22:29:15.313801+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "condition/0/conditions/0/entity_id/1": [
              {
                "path": "condition/0/conditions/0/entity_id/1",
                "timestamp": "2025-01-08T22:29:15.313906+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "condition/0/conditions/0/entity_id/2": [
              {
                "path": "condition/0/conditions/0/entity_id/2",
                "timestamp": "2025-01-08T22:29:15.313988+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "condition/0/conditions/0/entity_id/3": [
              {
                "path": "condition/0/conditions/0/entity_id/3",
                "timestamp": "2025-01-08T22:29:15.314065+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_off",
            "alias": "ac_auto_off",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom",
                  "climate.ac"
                ]
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": [
                      "switch.ac_relay_study",
                      "switch.ac_relay_childa",
                      "switch.ac_relay_childb",
                      "switch.ac_relay_bedroom",
                      "switch.ac_relay_kitchen",
                      "switch.ac_relay_livingroom"
                    ],
                    "state": "off"
                  },
                  {
                    "condition": "numeric_state",
                    "entity_id": "automation.ac_mode",
                    "attribute": "current",
                    "below": 1
                  }
                ]
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_off"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40JHXH11RBXD1ZJ80NGY3V",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/3",
          "run_id": "1167a8680ddccb3ff5621c37e0ee4200",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:15.313397+00:00",
            "finish": "2025-01-08T22:29:15.314162+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/3",
          "run_id": "9575e60203bbf632d9e2eab4e53531e3",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:20.312736+00:00",
            "finish": "2025-01-08T22:29:20.313201+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:29:20.312820+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_off",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_off",
                      "last_triggered": "2025-01-08T21:48:30.313026+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma kikapcsol\u00e1s, ha minden szelep z\u00e1rva",
                      "icon": "mdi:hvac-off"
                    },
                    "last_changed": "2025-01-07T22:59:11.825148+00:00",
                    "last_reported": "2025-01-08T21:48:30.362343+00:00",
                    "last_updated": "2025-01-08T21:48:30.362343+00:00",
                    "context": {
                      "id": "01JH3Y7Y78TE8NDB7P2RPV34C7",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-08T23:29:20.312495+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:29:20.312866+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-08T22:29:20.312899+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-08T22:29:20.312925+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "condition/0/conditions/0/entity_id/1": [
              {
                "path": "condition/0/conditions/0/entity_id/1",
                "timestamp": "2025-01-08T22:29:20.312984+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "condition/0/conditions/0/entity_id/2": [
              {
                "path": "condition/0/conditions/0/entity_id/2",
                "timestamp": "2025-01-08T22:29:20.313020+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "condition/0/conditions/0/entity_id/3": [
              {
                "path": "condition/0/conditions/0/entity_id/3",
                "timestamp": "2025-01-08T22:29:20.313094+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_off",
            "alias": "ac_auto_off",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom",
                  "climate.ac"
                ]
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": [
                      "switch.ac_relay_study",
                      "switch.ac_relay_childa",
                      "switch.ac_relay_childb",
                      "switch.ac_relay_bedroom",
                      "switch.ac_relay_kitchen",
                      "switch.ac_relay_livingroom"
                    ],
                    "state": "off"
                  },
                  {
                    "condition": "numeric_state",
                    "entity_id": "automation.ac_mode",
                    "attribute": "current",
                    "below": 1
                  }
                ]
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_off"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40JPSRT73QE64VR4V33Q71",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/3",
          "run_id": "9575e60203bbf632d9e2eab4e53531e3",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:29:20.312736+00:00",
            "finish": "2025-01-08T22:29:20.313201+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern"
        }
      }
    ],
    "automation.ac_mode": [
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "6c93f0d1466ba0badb9bfe9d6c235b12",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:26:07.538704+00:00",
            "finish": "2025-01-08T22:26:07.539132+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_childb",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:26:07.538798+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_mode",
                    "state": "on",
                    "attributes": {
                      "id": "ac_mode",
                      "last_triggered": "2025-01-08T21:48:33.762584+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma m\u00f3d kapcsol\u00f3k \u00f6sszek\u00f6t\u00e9se",
                      "icon": "mdi:vector-link"
                    },
                    "last_changed": "2025-01-07T22:59:11.826137+00:00",
                    "last_reported": "2025-01-08T21:48:33.778533+00:00",
                    "last_updated": "2025-01-08T21:48:33.778533+00:00",
                    "context": {
                      "id": "01JH3Y81K2YJTWV14PSEK9SBYH",
                      "parent_id": "01JH3Y80HV5BG59B0VT0QEPFNB",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_childb",
                    "from_state": {
                      "entity_id": "climate.t_childb",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 21.0,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "Mil\u00e1n",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.166287+00:00",
                      "last_reported": "2025-01-08T22:23:48.393781+00:00",
                      "last_updated": "2025-01-08T22:23:48.393781+00:00",
                      "context": {
                        "id": "01JH408JN9JW09B1KM4HBYY12T",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_childb",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 21.0,
                        "temperature": 21.5,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "Mil\u00e1n",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.166287+00:00",
                      "last_reported": "2025-01-08T22:26:07.537374+00:00",
                      "last_updated": "2025-01-08T22:26:07.537374+00:00",
                      "context": {
                        "id": "01JH40CT8G9JWKA9W016G4VYP7",
                        "parent_id": null,
                        "user_id": "5a0a633ef7644660a34bd271371786aa"
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of climate.t_childb"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:26:07.538866+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "id": "ac_mode",
            "initial_state": true,
            "alias": "AC mode",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.ac",
                  "climate.t_study",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_bedroom",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ]
              }
            ],
            "condition": "{{ trigger.from_state.state != trigger.to_state.state and trigger.to_state.state in ['heat', 'cool', 'heat_cool', 'fan_only'] }}",
            "action": [
              {
                "repeat": {
                  "for_each": [
                    "climate.ac",
                    "climate.t_study",
                    "climate.t_childa",
                    "climate.t_childb",
                    "climate.t_bedroom",
                    "climate.t_kitchen",
                    "climate.t_livingroom"
                  ],
                  "sequence": [
                    {
                      "if": [
                        {
                          "condition": "template",
                          "value_template": "{{ states(repeat.item) not in ['off', trigger.to_state.state] }}"
                        }
                      ],
                      "then": [
                        {
                          "data": {
                            "level": "info",
                            "message": "Sync {{ repeat.item }}: {{ states(repeat.item) }} -> {{ trigger.to_state.state }} by {{ trigger.entity_id }}: {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}!\n"
                          },
                          "action": "system_log.write"
                        },
                        {
                          "data": {
                            "entity_id": "{{ repeat.item }}",
                            "hvac_mode": "{{ trigger.to_state.state }}"
                          },
                          "action": "climate.set_hvac_mode"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40CTHJEETYWGJEMGMQ72Z9",
            "parent_id": "01JH40CT8G9JWKA9W016G4VYP7",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "6c93f0d1466ba0badb9bfe9d6c235b12",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:26:07.538704+00:00",
            "finish": "2025-01-08T22:26:07.539132+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_childb"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "f909abce57efb1022d32a6a5c6669317",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:26:15.016838+00:00",
            "finish": "2025-01-08T22:26:15.017285+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_livingroom",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:26:15.016926+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_mode",
                    "state": "on",
                    "attributes": {
                      "id": "ac_mode",
                      "last_triggered": "2025-01-08T21:48:33.762584+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma m\u00f3d kapcsol\u00f3k \u00f6sszek\u00f6t\u00e9se",
                      "icon": "mdi:vector-link"
                    },
                    "last_changed": "2025-01-07T22:59:11.826137+00:00",
                    "last_reported": "2025-01-08T21:48:33.778533+00:00",
                    "last_updated": "2025-01-08T21:48:33.778533+00:00",
                    "context": {
                      "id": "01JH3Y81K2YJTWV14PSEK9SBYH",
                      "parent_id": "01JH3Y80HV5BG59B0VT0QEPFNB",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_livingroom",
                    "from_state": {
                      "entity_id": "climate.t_livingroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 22.0,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "idle",
                        "preset_mode": "none",
                        "friendly_name": "Nappali",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.186732+00:00",
                      "last_reported": "2025-01-08T22:15:46.241168+00:00",
                      "last_updated": "2025-01-08T22:15:46.241168+00:00",
                      "context": {
                        "id": "01JH3ZSVT1EQ86A3WV4NRY6EBF",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_livingroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 21.5,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "idle",
                        "preset_mode": "none",
                        "friendly_name": "Nappali",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.186732+00:00",
                      "last_reported": "2025-01-08T22:26:15.015732+00:00",
                      "last_updated": "2025-01-08T22:26:15.015732+00:00",
                      "context": {
                        "id": "01JH40D1V7DFN30C628TCM1P60",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of climate.t_livingroom"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:26:15.016995+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "id": "ac_mode",
            "initial_state": true,
            "alias": "AC mode",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.ac",
                  "climate.t_study",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_bedroom",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ]
              }
            ],
            "condition": "{{ trigger.from_state.state != trigger.to_state.state and trigger.to_state.state in ['heat', 'cool', 'heat_cool', 'fan_only'] }}",
            "action": [
              {
                "repeat": {
                  "for_each": [
                    "climate.ac",
                    "climate.t_study",
                    "climate.t_childa",
                    "climate.t_childb",
                    "climate.t_bedroom",
                    "climate.t_kitchen",
                    "climate.t_livingroom"
                  ],
                  "sequence": [
                    {
                      "if": [
                        {
                          "condition": "template",
                          "value_template": "{{ states(repeat.item) not in ['off', trigger.to_state.state] }}"
                        }
                      ],
                      "then": [
                        {
                          "data": {
                            "level": "info",
                            "message": "Sync {{ repeat.item }}: {{ states(repeat.item) }} -> {{ trigger.to_state.state }} by {{ trigger.entity_id }}: {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}!\n"
                          },
                          "action": "system_log.write"
                        },
                        {
                          "data": {
                            "entity_id": "{{ repeat.item }}",
                            "hvac_mode": "{{ trigger.to_state.state }}"
                          },
                          "action": "climate.set_hvac_mode"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40D1V8QYYH0G8Y3Q8VWVQF",
            "parent_id": "01JH40D1V7DFN30C628TCM1P60",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "f909abce57efb1022d32a6a5c6669317",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:26:15.016838+00:00",
            "finish": "2025-01-08T22:26:15.017285+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_livingroom"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "cc707acd2f0f0e3e664b4301fec007c2",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:26:15.908825+00:00",
            "finish": "2025-01-08T22:26:15.909313+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_bedroom",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:26:15.908913+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_mode",
                    "state": "on",
                    "attributes": {
                      "id": "ac_mode",
                      "last_triggered": "2025-01-08T21:48:33.762584+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma m\u00f3d kapcsol\u00f3k \u00f6sszek\u00f6t\u00e9se",
                      "icon": "mdi:vector-link"
                    },
                    "last_changed": "2025-01-07T22:59:11.826137+00:00",
                    "last_reported": "2025-01-08T21:48:33.778533+00:00",
                    "last_updated": "2025-01-08T21:48:33.778533+00:00",
                    "context": {
                      "id": "01JH3Y81K2YJTWV14PSEK9SBYH",
                      "parent_id": "01JH3Y80HV5BG59B0VT0QEPFNB",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_bedroom",
                    "from_state": {
                      "entity_id": "climate.t_bedroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 19.5,
                        "temperature": 21.0,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "H\u00e1l\u00f3",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.196774+00:00",
                      "last_reported": "2025-01-08T22:08:47.370806+00:00",
                      "last_updated": "2025-01-08T22:08:47.370806+00:00",
                      "context": {
                        "id": "01JH3ZD2RAKSGN4K308AWW6AS9",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_bedroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 19.5,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "H\u00e1l\u00f3",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.196774+00:00",
                      "last_reported": "2025-01-08T22:26:15.906642+00:00",
                      "last_updated": "2025-01-08T22:26:15.906642+00:00",
                      "context": {
                        "id": "01JH40D201GTEYXK19E5AG677N",
                        "parent_id": null,
                        "user_id": "5a0a633ef7644660a34bd271371786aa"
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of climate.t_bedroom"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:26:15.908964+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "id": "ac_mode",
            "initial_state": true,
            "alias": "AC mode",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.ac",
                  "climate.t_study",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_bedroom",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ]
              }
            ],
            "condition": "{{ trigger.from_state.state != trigger.to_state.state and trigger.to_state.state in ['heat', 'cool', 'heat_cool', 'fan_only'] }}",
            "action": [
              {
                "repeat": {
                  "for_each": [
                    "climate.ac",
                    "climate.t_study",
                    "climate.t_childa",
                    "climate.t_childb",
                    "climate.t_bedroom",
                    "climate.t_kitchen",
                    "climate.t_livingroom"
                  ],
                  "sequence": [
                    {
                      "if": [
                        {
                          "condition": "template",
                          "value_template": "{{ states(repeat.item) not in ['off', trigger.to_state.state] }}"
                        }
                      ],
                      "then": [
                        {
                          "data": {
                            "level": "info",
                            "message": "Sync {{ repeat.item }}: {{ states(repeat.item) }} -> {{ trigger.to_state.state }} by {{ trigger.entity_id }}: {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}!\n"
                          },
                          "action": "system_log.write"
                        },
                        {
                          "data": {
                            "entity_id": "{{ repeat.item }}",
                            "hvac_mode": "{{ trigger.to_state.state }}"
                          },
                          "action": "climate.set_hvac_mode"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40D2Q4XY4HZVR1P4NPK5KQ",
            "parent_id": "01JH40D201GTEYXK19E5AG677N",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "cc707acd2f0f0e3e664b4301fec007c2",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:26:15.908825+00:00",
            "finish": "2025-01-08T22:26:15.909313+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_bedroom"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "e79be3a300cf4bd069a0bac729330814",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:26:15.911813+00:00",
            "finish": "2025-01-08T22:26:15.912168+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_bedroom",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:26:15.911869+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_mode",
                    "state": "on",
                    "attributes": {
                      "id": "ac_mode",
                      "last_triggered": "2025-01-08T21:48:33.762584+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma m\u00f3d kapcsol\u00f3k \u00f6sszek\u00f6t\u00e9se",
                      "icon": "mdi:vector-link"
                    },
                    "last_changed": "2025-01-07T22:59:11.826137+00:00",
                    "last_reported": "2025-01-08T21:48:33.778533+00:00",
                    "last_updated": "2025-01-08T21:48:33.778533+00:00",
                    "context": {
                      "id": "01JH3Y81K2YJTWV14PSEK9SBYH",
                      "parent_id": "01JH3Y80HV5BG59B0VT0QEPFNB",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_bedroom",
                    "from_state": {
                      "entity_id": "climate.t_bedroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 19.5,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "H\u00e1l\u00f3",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.196774+00:00",
                      "last_reported": "2025-01-08T22:26:15.906642+00:00",
                      "last_updated": "2025-01-08T22:26:15.906642+00:00",
                      "context": {
                        "id": "01JH40D201GTEYXK19E5AG677N",
                        "parent_id": null,
                        "user_id": "5a0a633ef7644660a34bd271371786aa"
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_bedroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 20.0,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "H\u00e1l\u00f3",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.196774+00:00",
                      "last_reported": "2025-01-08T22:26:15.911525+00:00",
                      "last_updated": "2025-01-08T22:26:15.911525+00:00",
                      "context": {
                        "id": "01JH40D201GTEYXK19E5AG677N",
                        "parent_id": null,
                        "user_id": "5a0a633ef7644660a34bd271371786aa"
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of climate.t_bedroom"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:26:15.911907+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "id": "ac_mode",
            "initial_state": true,
            "alias": "AC mode",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.ac",
                  "climate.t_study",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_bedroom",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ]
              }
            ],
            "condition": "{{ trigger.from_state.state != trigger.to_state.state and trigger.to_state.state in ['heat', 'cool', 'heat_cool', 'fan_only'] }}",
            "action": [
              {
                "repeat": {
                  "for_each": [
                    "climate.ac",
                    "climate.t_study",
                    "climate.t_childa",
                    "climate.t_childb",
                    "climate.t_bedroom",
                    "climate.t_kitchen",
                    "climate.t_livingroom"
                  ],
                  "sequence": [
                    {
                      "if": [
                        {
                          "condition": "template",
                          "value_template": "{{ states(repeat.item) not in ['off', trigger.to_state.state] }}"
                        }
                      ],
                      "then": [
                        {
                          "data": {
                            "level": "info",
                            "message": "Sync {{ repeat.item }}: {{ states(repeat.item) }} -> {{ trigger.to_state.state }} by {{ trigger.entity_id }}: {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}!\n"
                          },
                          "action": "system_log.write"
                        },
                        {
                          "data": {
                            "entity_id": "{{ repeat.item }}",
                            "hvac_mode": "{{ trigger.to_state.state }}"
                          },
                          "action": "climate.set_hvac_mode"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40D2Q7EQEAKWG918ZEST8E",
            "parent_id": "01JH40D201GTEYXK19E5AG677N",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "e79be3a300cf4bd069a0bac729330814",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:26:15.911813+00:00",
            "finish": "2025-01-08T22:26:15.912168+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_bedroom"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "cc70febe637280c3a2faa836a3d871c7",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:28:32.372029+00:00",
            "finish": "2025-01-08T22:28:32.372352+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_childb",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:28:32.372088+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_mode",
                    "state": "on",
                    "attributes": {
                      "id": "ac_mode",
                      "last_triggered": "2025-01-08T21:48:33.762584+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma m\u00f3d kapcsol\u00f3k \u00f6sszek\u00f6t\u00e9se",
                      "icon": "mdi:vector-link"
                    },
                    "last_changed": "2025-01-07T22:59:11.826137+00:00",
                    "last_reported": "2025-01-08T21:48:33.778533+00:00",
                    "last_updated": "2025-01-08T21:48:33.778533+00:00",
                    "context": {
                      "id": "01JH3Y81K2YJTWV14PSEK9SBYH",
                      "parent_id": "01JH3Y80HV5BG59B0VT0QEPFNB",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_childb",
                    "from_state": {
                      "entity_id": "climate.t_childb",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 21.0,
                        "temperature": 21.5,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "Mil\u00e1n",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.166287+00:00",
                      "last_reported": "2025-01-08T22:26:07.537374+00:00",
                      "last_updated": "2025-01-08T22:26:07.537374+00:00",
                      "context": {
                        "id": "01JH40CT8G9JWKA9W016G4VYP7",
                        "parent_id": null,
                        "user_id": "5a0a633ef7644660a34bd271371786aa"
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_childb",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 21.5,
                        "temperature": 21.5,
                        "fan_mode": "low",
                        "hvac_action": "idle",
                        "preset_mode": "none",
                        "friendly_name": "Mil\u00e1n",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.166287+00:00",
                      "last_reported": "2025-01-08T22:28:32.371449+00:00",
                      "last_updated": "2025-01-08T22:28:32.371449+00:00",
                      "context": {
                        "id": "01JH40H7ZK13FZCCNQJ679N405",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of climate.t_childb"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:28:32.372128+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "id": "ac_mode",
            "initial_state": true,
            "alias": "AC mode",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.ac",
                  "climate.t_study",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_bedroom",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ]
              }
            ],
            "condition": "{{ trigger.from_state.state != trigger.to_state.state and trigger.to_state.state in ['heat', 'cool', 'heat_cool', 'fan_only'] }}",
            "action": [
              {
                "repeat": {
                  "for_each": [
                    "climate.ac",
                    "climate.t_study",
                    "climate.t_childa",
                    "climate.t_childb",
                    "climate.t_bedroom",
                    "climate.t_kitchen",
                    "climate.t_livingroom"
                  ],
                  "sequence": [
                    {
                      "if": [
                        {
                          "condition": "template",
                          "value_template": "{{ states(repeat.item) not in ['off', trigger.to_state.state] }}"
                        }
                      ],
                      "then": [
                        {
                          "data": {
                            "level": "info",
                            "message": "Sync {{ repeat.item }}: {{ states(repeat.item) }} -> {{ trigger.to_state.state }} by {{ trigger.entity_id }}: {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}!\n"
                          },
                          "action": "system_log.write"
                        },
                        {
                          "data": {
                            "entity_id": "{{ repeat.item }}",
                            "hvac_mode": "{{ trigger.to_state.state }}"
                          },
                          "action": "climate.set_hvac_mode"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40H7ZKXKKX32P8Q32VC0EV",
            "parent_id": "01JH40H7ZK13FZCCNQJ679N405",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "cc70febe637280c3a2faa836a3d871c7",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T22:28:32.372029+00:00",
            "finish": "2025-01-08T22:28:32.372352+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_childb"
        }
      }
    ],
    "automation.ac_thermostat_relay": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "f332df09fe4bd8aa986550482c9e633c",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T21:48:32.671949+00:00",
            "finish": "2025-01-08T21:48:32.687858+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_livingroom",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T21:48:32.672100+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay",
                      "last_triggered": "2025-01-08T21:47:48.057450+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (esem\u00e9ny)",
                      "icon": "mdi:thermostat-box-auto"
                    },
                    "last_changed": "2025-01-07T22:59:11.827733+00:00",
                    "last_reported": "2025-01-08T21:47:48.071338+00:00",
                    "last_updated": "2025-01-08T21:47:48.071338+00:00",
                    "context": {
                      "id": "01JH3Y6MYS683RPC1FW941WPB5",
                      "parent_id": "01JH3Y6MYRQM7VJJCKC3GCGBJB",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_livingroom",
                    "from_state": {
                      "entity_id": "climate.t_livingroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 21.5,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "idle",
                        "preset_mode": "none",
                        "friendly_name": "Nappali",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.186732+00:00",
                      "last_reported": "2025-01-08T21:32:16.160813+00:00",
                      "last_updated": "2025-01-08T21:32:16.160813+00:00",
                      "context": {
                        "id": "01JH3XA6X09Y9FHWQ87FQZ8R9V",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_livingroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 21.0,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "Nappali",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.186732+00:00",
                      "last_reported": "2025-01-08T21:48:32.670673+00:00",
                      "last_updated": "2025-01-08T21:48:32.670673+00:00",
                      "context": {
                        "id": "01JH3Y80GYA98XCRA8P2CV85E2",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": "hvac_action",
                    "description": "state of climate.t_livingroom"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T21:48:32.672458+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "4dc4e837e8dfeca0a0e43ac1edfac6ac"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH3Y80GZ948G5AQ5PX178PMJ",
                    "parent_id": "01JH3Y80GYA98XCRA8P2CV85E2",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_livingroom",
                      "switch_entity_id": "switch.ac_relay_livingroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay",
            "alias": "ac_thermostat_relay",
            "initial_state": true,
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.t_study",
                  "climate.t_bedroom",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ],
                "attribute": "hvac_action"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "{{ trigger.entity_id }}",
                  "switch_entity_id": "switch.ac_relay_{{ trigger.entity_id|regex_findall_index(find='\\.(?:t|ac)_(.*)', index=0, ignorecase=False) }}"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH3Y80GZ948G5AQ5PX178PMJ",
            "parent_id": "01JH3Y80GYA98XCRA8P2CV85E2",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "f332df09fe4bd8aa986550482c9e633c",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T21:48:32.671949+00:00",
            "finish": "2025-01-08T21:48:32.687858+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_livingroom"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "992f862dd660af605d4a31f7273e9917",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:00:59.932604+00:00",
            "finish": "2025-01-08T22:00:59.947435+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_childb",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:00:59.932682+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay",
                      "last_triggered": "2025-01-08T21:48:32.672230+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (esem\u00e9ny)",
                      "icon": "mdi:thermostat-box-auto"
                    },
                    "last_changed": "2025-01-07T22:59:11.827733+00:00",
                    "last_reported": "2025-01-08T21:48:32.687663+00:00",
                    "last_updated": "2025-01-08T21:48:32.687663+00:00",
                    "context": {
                      "id": "01JH3Y80GZ948G5AQ5PX178PMJ",
                      "parent_id": "01JH3Y80GYA98XCRA8P2CV85E2",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_childb",
                    "from_state": {
                      "entity_id": "climate.t_childb",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 21.5,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "idle",
                        "preset_mode": "none",
                        "friendly_name": "Mil\u00e1n",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.166287+00:00",
                      "last_reported": "2025-01-08T21:35:49.589526+00:00",
                      "last_updated": "2025-01-08T21:35:49.589526+00:00",
                      "context": {
                        "id": "01JH3XGQANB5FX4WKVYANRZ5A8",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_childb",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 21.0,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "Mil\u00e1n",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.166287+00:00",
                      "last_reported": "2025-01-08T22:00:59.931300+00:00",
                      "last_updated": "2025-01-08T22:00:59.931300+00:00",
                      "context": {
                        "id": "01JH3YYT8VQ7PWVFHFWWGZRNS4",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": "hvac_action",
                    "description": "state of climate.t_childb"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:00:59.933087+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "66de9acd2c79a2ab81542f2f58e7fa27"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH3YYT8WERJ69GP0DYEK0B1F",
                    "parent_id": "01JH3YYT8VQ7PWVFHFWWGZRNS4",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childb",
                      "switch_entity_id": "switch.ac_relay_childb"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay",
            "alias": "ac_thermostat_relay",
            "initial_state": true,
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.t_study",
                  "climate.t_bedroom",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ],
                "attribute": "hvac_action"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "{{ trigger.entity_id }}",
                  "switch_entity_id": "switch.ac_relay_{{ trigger.entity_id|regex_findall_index(find='\\.(?:t|ac)_(.*)', index=0, ignorecase=False) }}"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH3YYT8WERJ69GP0DYEK0B1F",
            "parent_id": "01JH3YYT8VQ7PWVFHFWWGZRNS4",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "992f862dd660af605d4a31f7273e9917",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:00:59.932604+00:00",
            "finish": "2025-01-08T22:00:59.947435+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_childb"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "5f830e476aa094a46532d39e4b3c7ce4",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:02:15.247829+00:00",
            "finish": "2025-01-08T22:02:15.268942+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_livingroom",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:02:15.247917+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay",
                      "last_triggered": "2025-01-08T22:00:59.932781+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (esem\u00e9ny)",
                      "icon": "mdi:thermostat-box-auto"
                    },
                    "last_changed": "2025-01-07T22:59:11.827733+00:00",
                    "last_reported": "2025-01-08T22:00:59.947221+00:00",
                    "last_updated": "2025-01-08T22:00:59.947221+00:00",
                    "context": {
                      "id": "01JH3YYT8WERJ69GP0DYEK0B1F",
                      "parent_id": "01JH3YYT8VQ7PWVFHFWWGZRNS4",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_livingroom",
                    "from_state": {
                      "entity_id": "climate.t_livingroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 21.5,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "Nappali",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.186732+00:00",
                      "last_reported": "2025-01-08T21:55:33.722594+00:00",
                      "last_updated": "2025-01-08T21:55:33.722594+00:00",
                      "context": {
                        "id": "01JH3YMVPTGWR62G0CZJ71X413",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_livingroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 22.0,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "idle",
                        "preset_mode": "none",
                        "friendly_name": "Nappali",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.186732+00:00",
                      "last_reported": "2025-01-08T22:02:15.246425+00:00",
                      "last_updated": "2025-01-08T22:02:15.246425+00:00",
                      "context": {
                        "id": "01JH3Z13TE6D6CAMBHNSMMDF86",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": "hvac_action",
                    "description": "state of climate.t_livingroom"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:02:15.248254+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "9c6079d2f469a4c2b7dfd4315b14b3e2"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH3Z13TF1BQTEZ3KNA3HNRGG",
                    "parent_id": "01JH3Z13TE6D6CAMBHNSMMDF86",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_livingroom",
                      "switch_entity_id": "switch.ac_relay_livingroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay",
            "alias": "ac_thermostat_relay",
            "initial_state": true,
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.t_study",
                  "climate.t_bedroom",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ],
                "attribute": "hvac_action"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "{{ trigger.entity_id }}",
                  "switch_entity_id": "switch.ac_relay_{{ trigger.entity_id|regex_findall_index(find='\\.(?:t|ac)_(.*)', index=0, ignorecase=False) }}"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH3Z13TF1BQTEZ3KNA3HNRGG",
            "parent_id": "01JH3Z13TE6D6CAMBHNSMMDF86",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "5f830e476aa094a46532d39e4b3c7ce4",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:02:15.247829+00:00",
            "finish": "2025-01-08T22:02:15.268942+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_livingroom"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "4b33758cf89123aa9fe91a1101f388fd",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:05:59.820065+00:00",
            "finish": "2025-01-08T22:05:59.832472+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_bedroom",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:05:59.820157+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay",
                      "last_triggered": "2025-01-08T22:02:15.248014+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (esem\u00e9ny)",
                      "icon": "mdi:thermostat-box-auto"
                    },
                    "last_changed": "2025-01-07T22:59:11.827733+00:00",
                    "last_reported": "2025-01-08T22:02:15.268728+00:00",
                    "last_updated": "2025-01-08T22:02:15.268728+00:00",
                    "context": {
                      "id": "01JH3Z13TF1BQTEZ3KNA3HNRGG",
                      "parent_id": "01JH3Z13TE6D6CAMBHNSMMDF86",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_bedroom",
                    "from_state": {
                      "entity_id": "climate.t_bedroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 20.5,
                        "temperature": 21.0,
                        "fan_mode": "low",
                        "hvac_action": "idle",
                        "preset_mode": "none",
                        "friendly_name": "H\u00e1l\u00f3",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.196774+00:00",
                      "last_reported": "2025-01-08T21:55:48.644929+00:00",
                      "last_updated": "2025-01-08T21:55:48.644929+00:00",
                      "context": {
                        "id": "01JH3YNA94G7G7D69Z3R6T4EXA",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_bedroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 20.0,
                        "temperature": 21.0,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "H\u00e1l\u00f3",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.196774+00:00",
                      "last_reported": "2025-01-08T22:05:59.818970+00:00",
                      "last_updated": "2025-01-08T22:05:59.818970+00:00",
                      "context": {
                        "id": "01JH3Z7Z4ARYV2PP129T8Z2F0A",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": "hvac_action",
                    "description": "state of climate.t_bedroom"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:05:59.820515+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "db8f4283c6baddc0c48baa659212b21f"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH3Z7Z4CT4VK57DAJSK1V4X6",
                    "parent_id": "01JH3Z7Z4ARYV2PP129T8Z2F0A",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_bedroom",
                      "switch_entity_id": "switch.ac_relay_bedroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay",
            "alias": "ac_thermostat_relay",
            "initial_state": true,
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.t_study",
                  "climate.t_bedroom",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ],
                "attribute": "hvac_action"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "{{ trigger.entity_id }}",
                  "switch_entity_id": "switch.ac_relay_{{ trigger.entity_id|regex_findall_index(find='\\.(?:t|ac)_(.*)', index=0, ignorecase=False) }}"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH3Z7Z4CT4VK57DAJSK1V4X6",
            "parent_id": "01JH3Z7Z4ARYV2PP129T8Z2F0A",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "4b33758cf89123aa9fe91a1101f388fd",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:05:59.820065+00:00",
            "finish": "2025-01-08T22:05:59.832472+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_bedroom"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "720ac017b8eafa0603f25f6a60da27d8",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:28:32.372427+00:00",
            "finish": "2025-01-08T22:28:32.391001+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_childb",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:28:32.372480+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay",
                      "last_triggered": "2025-01-08T22:05:59.820284+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (esem\u00e9ny)",
                      "icon": "mdi:thermostat-box-auto"
                    },
                    "last_changed": "2025-01-07T22:59:11.827733+00:00",
                    "last_reported": "2025-01-08T22:05:59.832292+00:00",
                    "last_updated": "2025-01-08T22:05:59.832292+00:00",
                    "context": {
                      "id": "01JH3Z7Z4CT4VK57DAJSK1V4X6",
                      "parent_id": "01JH3Z7Z4ARYV2PP129T8Z2F0A",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_childb",
                    "from_state": {
                      "entity_id": "climate.t_childb",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 21.0,
                        "temperature": 21.5,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "Mil\u00e1n",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.166287+00:00",
                      "last_reported": "2025-01-08T22:26:07.537374+00:00",
                      "last_updated": "2025-01-08T22:26:07.537374+00:00",
                      "context": {
                        "id": "01JH40CT8G9JWKA9W016G4VYP7",
                        "parent_id": null,
                        "user_id": "5a0a633ef7644660a34bd271371786aa"
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_childb",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 21.5,
                        "temperature": 21.5,
                        "fan_mode": "low",
                        "hvac_action": "idle",
                        "preset_mode": "none",
                        "friendly_name": "Mil\u00e1n",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-08T17:22:24.166287+00:00",
                      "last_reported": "2025-01-08T22:28:32.371449+00:00",
                      "last_updated": "2025-01-08T22:28:32.371449+00:00",
                      "context": {
                        "id": "01JH40H7ZK13FZCCNQJ679N405",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": "hvac_action",
                    "description": "state of climate.t_childb"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:28:32.372784+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "3ea7610aacbfa70f7ec6b0b0b82c8d0a"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH40H7ZMNJHHBSXN1T8623NF",
                    "parent_id": "01JH40H7ZK13FZCCNQJ679N405",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childb",
                      "switch_entity_id": "switch.ac_relay_childb"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay",
            "alias": "ac_thermostat_relay",
            "initial_state": true,
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.t_study",
                  "climate.t_bedroom",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ],
                "attribute": "hvac_action"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "{{ trigger.entity_id }}",
                  "switch_entity_id": "switch.ac_relay_{{ trigger.entity_id|regex_findall_index(find='\\.(?:t|ac)_(.*)', index=0, ignorecase=False) }}"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40H7ZMNJHHBSXN1T8623NF",
            "parent_id": "01JH40H7ZK13FZCCNQJ679N405",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "720ac017b8eafa0603f25f6a60da27d8",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:28:32.372427+00:00",
            "finish": "2025-01-08T22:28:32.391001+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_childb"
        }
      }
    ],
    "automation.meeting_info_switch": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "f657342a369f2cc22b2615d51ee5bd54",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T00:41:30.081923+00:00",
            "finish": "2025-01-08T00:41:30.086268+00:00"
          },
          "domain": "automation",
          "item_id": "meeting_info_switch",
          "trigger": "state of binary_sensor.ttgo_tdisplay_button1",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T00:41:30.082122+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.meeting_info_switch",
                    "state": "on",
                    "attributes": {
                      "id": "meeting_info_switch",
                      "last_triggered": "2025-01-07T20:54:33.740593+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "meeting_info_switch"
                    },
                    "last_changed": "2025-01-07T22:59:11.832568+00:00",
                    "last_reported": "2025-01-07T22:59:11.832568+00:00",
                    "last_updated": "2025-01-07T22:59:11.832568+00:00",
                    "context": {
                      "id": "01JH1FWNAR9HHXZRZGHCDQ0VCZ",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.ttgo_tdisplay_button1",
                    "from_state": {
                      "entity_id": "binary_sensor.ttgo_tdisplay_button1",
                      "state": "off",
                      "attributes": {
                        "icon": "mdi:button-pointer",
                        "friendly_name": "ttgo-tdisplay_button1"
                      },
                      "last_changed": "2025-01-07T22:59:12.010331+00:00",
                      "last_reported": "2025-01-07T22:59:12.010331+00:00",
                      "last_updated": "2025-01-07T22:59:12.010331+00:00",
                      "context": {
                        "id": "01JH1FWNGADN9HJFC9MDF4AYSV",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.ttgo_tdisplay_button1",
                      "state": "on",
                      "attributes": {
                        "icon": "mdi:button-pointer",
                        "friendly_name": "ttgo-tdisplay_button1"
                      },
                      "last_changed": "2025-01-08T00:41:30.081408+00:00",
                      "last_reported": "2025-01-08T00:41:30.081408+00:00",
                      "last_updated": "2025-01-08T00:41:30.081408+00:00",
                      "context": {
                        "id": "01JH1NQZQ12DJ6C5SQ438XVSFX",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.ttgo_tdisplay_button1"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T00:41:30.082499+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH1NQZQ1QEPW01H6QD7P81PJ",
                    "parent_id": "01JH1NQZQ12DJ6C5SQ438XVSFX",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.l_office_led0"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "meeting_info_switch",
            "alias": "meeting_info_switch",
            "description": "Iroda vil\u00e1g\u00edt\u00e1s asztalr\u00f3l",
            "mode": "single",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.ttgo_tdisplay_button1"
                ],
                "to": [
                  "on"
                ]
              }
            ],
            "condition": [],
            "action": [
              {
                "target": {
                  "entity_id": "light.l_office_led0"
                },
                "action": "light.toggle"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH1NQZQ1QEPW01H6QD7P81PJ",
            "parent_id": "01JH1NQZQ12DJ6C5SQ438XVSFX",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "f657342a369f2cc22b2615d51ee5bd54",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T00:41:30.081923+00:00",
            "finish": "2025-01-08T00:41:30.086268+00:00"
          },
          "domain": "automation",
          "item_id": "meeting_info_switch",
          "trigger": "state of binary_sensor.ttgo_tdisplay_button1"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "c51088d39f5978a2a6b2ade45953309b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T00:53:37.832108+00:00",
            "finish": "2025-01-08T00:53:37.833955+00:00"
          },
          "domain": "automation",
          "item_id": "meeting_info_switch",
          "trigger": "state of binary_sensor.ttgo_tdisplay_button1",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T00:53:37.832176+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.meeting_info_switch",
                    "state": "on",
                    "attributes": {
                      "id": "meeting_info_switch",
                      "last_triggered": "2025-01-08T00:41:30.082237+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "meeting_info_switch"
                    },
                    "last_changed": "2025-01-07T22:59:11.832568+00:00",
                    "last_reported": "2025-01-08T00:41:30.085942+00:00",
                    "last_updated": "2025-01-08T00:41:30.085942+00:00",
                    "context": {
                      "id": "01JH1NQZQ1QEPW01H6QD7P81PJ",
                      "parent_id": "01JH1NQZQ12DJ6C5SQ438XVSFX",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.ttgo_tdisplay_button1",
                    "from_state": {
                      "entity_id": "binary_sensor.ttgo_tdisplay_button1",
                      "state": "off",
                      "attributes": {
                        "icon": "mdi:button-pointer",
                        "friendly_name": "ttgo-tdisplay_button1"
                      },
                      "last_changed": "2025-01-08T00:41:30.389118+00:00",
                      "last_reported": "2025-01-08T00:41:30.389118+00:00",
                      "last_updated": "2025-01-08T00:41:30.389118+00:00",
                      "context": {
                        "id": "01JH1NR00NHBG1D36P64AZ8QRN",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.ttgo_tdisplay_button1",
                      "state": "on",
                      "attributes": {
                        "icon": "mdi:button-pointer",
                        "friendly_name": "ttgo-tdisplay_button1"
                      },
                      "last_changed": "2025-01-08T00:53:37.831209+00:00",
                      "last_reported": "2025-01-08T00:53:37.831209+00:00",
                      "last_updated": "2025-01-08T00:53:37.831209+00:00",
                      "context": {
                        "id": "01JH1PE6D72KKH7MW2MFEDTWVC",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.ttgo_tdisplay_button1"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T00:53:37.832544+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH1PE6D8N62HETZA7VWV0V34",
                    "parent_id": "01JH1PE6D72KKH7MW2MFEDTWVC",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.l_office_led0"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "meeting_info_switch",
            "alias": "meeting_info_switch",
            "description": "Iroda vil\u00e1g\u00edt\u00e1s asztalr\u00f3l",
            "mode": "single",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.ttgo_tdisplay_button1"
                ],
                "to": [
                  "on"
                ]
              }
            ],
            "condition": [],
            "action": [
              {
                "target": {
                  "entity_id": "light.l_office_led0"
                },
                "action": "light.toggle"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH1PE6D8N62HETZA7VWV0V34",
            "parent_id": "01JH1PE6D72KKH7MW2MFEDTWVC",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "c51088d39f5978a2a6b2ade45953309b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T00:53:37.832108+00:00",
            "finish": "2025-01-08T00:53:37.833955+00:00"
          },
          "domain": "automation",
          "item_id": "meeting_info_switch",
          "trigger": "state of binary_sensor.ttgo_tdisplay_button1"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "bdeaf49a4be5c6b192905b42d5d7ab0a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T01:15:46.180889+00:00",
            "finish": "2025-01-08T01:15:46.184382+00:00"
          },
          "domain": "automation",
          "item_id": "meeting_info_switch",
          "trigger": "state of binary_sensor.ttgo_tdisplay_button1",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T01:15:46.180970+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.meeting_info_switch",
                    "state": "on",
                    "attributes": {
                      "id": "meeting_info_switch",
                      "last_triggered": "2025-01-08T00:53:37.832269+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "meeting_info_switch"
                    },
                    "last_changed": "2025-01-07T22:59:11.832568+00:00",
                    "last_reported": "2025-01-08T00:53:37.833827+00:00",
                    "last_updated": "2025-01-08T00:53:37.833827+00:00",
                    "context": {
                      "id": "01JH1PE6D8N62HETZA7VWV0V34",
                      "parent_id": "01JH1PE6D72KKH7MW2MFEDTWVC",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.ttgo_tdisplay_button1",
                    "from_state": {
                      "entity_id": "binary_sensor.ttgo_tdisplay_button1",
                      "state": "off",
                      "attributes": {
                        "icon": "mdi:button-pointer",
                        "friendly_name": "ttgo-tdisplay_button1"
                      },
                      "last_changed": "2025-01-08T00:53:38.106699+00:00",
                      "last_reported": "2025-01-08T00:53:38.106699+00:00",
                      "last_updated": "2025-01-08T00:53:38.106699+00:00",
                      "context": {
                        "id": "01JH1PE6NTAFG7Y4314XVBS4HD",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.ttgo_tdisplay_button1",
                      "state": "on",
                      "attributes": {
                        "icon": "mdi:button-pointer",
                        "friendly_name": "ttgo-tdisplay_button1"
                      },
                      "last_changed": "2025-01-08T01:15:46.180506+00:00",
                      "last_reported": "2025-01-08T01:15:46.180506+00:00",
                      "last_updated": "2025-01-08T01:15:46.180506+00:00",
                      "context": {
                        "id": "01JH1QPQM4Z0MQ8WKCX5PC3W6Y",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.ttgo_tdisplay_button1"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T01:15:46.181403+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH1QPQM4NADXESP2CWH1WFJV",
                    "parent_id": "01JH1QPQM4Z0MQ8WKCX5PC3W6Y",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.l_office_led0"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "meeting_info_switch",
            "alias": "meeting_info_switch",
            "description": "Iroda vil\u00e1g\u00edt\u00e1s asztalr\u00f3l",
            "mode": "single",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.ttgo_tdisplay_button1"
                ],
                "to": [
                  "on"
                ]
              }
            ],
            "condition": [],
            "action": [
              {
                "target": {
                  "entity_id": "light.l_office_led0"
                },
                "action": "light.toggle"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH1QPQM4NADXESP2CWH1WFJV",
            "parent_id": "01JH1QPQM4Z0MQ8WKCX5PC3W6Y",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "bdeaf49a4be5c6b192905b42d5d7ab0a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T01:15:46.180889+00:00",
            "finish": "2025-01-08T01:15:46.184382+00:00"
          },
          "domain": "automation",
          "item_id": "meeting_info_switch",
          "trigger": "state of binary_sensor.ttgo_tdisplay_button1"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "0b752e9c05b4418cce151436f6355637",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T18:18:51.955798+00:00",
            "finish": "2025-01-08T18:18:51.960552+00:00"
          },
          "domain": "automation",
          "item_id": "meeting_info_switch",
          "trigger": "state of binary_sensor.ttgo_tdisplay_button1",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T18:18:51.955888+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.meeting_info_switch",
                    "state": "on",
                    "attributes": {
                      "id": "meeting_info_switch",
                      "last_triggered": "2025-01-08T01:15:46.181176+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "meeting_info_switch"
                    },
                    "last_changed": "2025-01-07T22:59:11.832568+00:00",
                    "last_reported": "2025-01-08T01:15:46.184233+00:00",
                    "last_updated": "2025-01-08T01:15:46.184233+00:00",
                    "context": {
                      "id": "01JH1QPQM4NADXESP2CWH1WFJV",
                      "parent_id": "01JH1QPQM4Z0MQ8WKCX5PC3W6Y",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.ttgo_tdisplay_button1",
                    "from_state": {
                      "entity_id": "binary_sensor.ttgo_tdisplay_button1",
                      "state": "off",
                      "attributes": {
                        "icon": "mdi:button-pointer",
                        "friendly_name": "ttgo-tdisplay_button1"
                      },
                      "last_changed": "2025-01-08T17:03:15.804586+00:00",
                      "last_reported": "2025-01-08T17:03:15.804586+00:00",
                      "last_updated": "2025-01-08T17:03:15.804586+00:00",
                      "context": {
                        "id": "01JH3DXMTWN696K2WB13YTGVGW",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.ttgo_tdisplay_button1",
                      "state": "on",
                      "attributes": {
                        "icon": "mdi:button-pointer",
                        "friendly_name": "ttgo-tdisplay_button1"
                      },
                      "last_changed": "2025-01-08T18:18:51.953071+00:00",
                      "last_reported": "2025-01-08T18:18:51.953071+00:00",
                      "last_updated": "2025-01-08T18:18:51.953071+00:00",
                      "context": {
                        "id": "01JH3J82NHXC4T6HKSYST533Z2",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.ttgo_tdisplay_button1"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T18:18:51.956333+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH3J82NKDTR3QDDX9CQEYZ4W",
                    "parent_id": "01JH3J82NHXC4T6HKSYST533Z2",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.l_office_led0"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "meeting_info_switch",
            "alias": "meeting_info_switch",
            "description": "Iroda vil\u00e1g\u00edt\u00e1s asztalr\u00f3l",
            "mode": "single",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.ttgo_tdisplay_button1"
                ],
                "to": [
                  "on"
                ]
              }
            ],
            "condition": [],
            "action": [
              {
                "target": {
                  "entity_id": "light.l_office_led0"
                },
                "action": "light.toggle"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH3J82NKDTR3QDDX9CQEYZ4W",
            "parent_id": "01JH3J82NHXC4T6HKSYST533Z2",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "0b752e9c05b4418cce151436f6355637",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T18:18:51.955798+00:00",
            "finish": "2025-01-08T18:18:51.960552+00:00"
          },
          "domain": "automation",
          "item_id": "meeting_info_switch",
          "trigger": "state of binary_sensor.ttgo_tdisplay_button1"
        }
      }
    ],
    "automation.1732910862841": [
      {
        "extended_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "980913f39d9e8872c0e41530e26dc143",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T19:23:39.598243+00:00",
            "finish": "2025-01-08T19:23:42.014782+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T19:23:39.598973+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.terrace_motion_light",
                    "state": "on",
                    "attributes": {
                      "id": "1732910862841",
                      "last_triggered": "2025-01-08T19:23:35.339574+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "Terrace Motion Light"
                    },
                    "last_changed": "2025-01-07T22:59:11.837054+00:00",
                    "last_reported": "2025-01-08T19:23:37.723392+00:00",
                    "last_updated": "2025-01-08T19:23:37.723392+00:00",
                    "context": {
                      "id": "01JH3NYK19N0HHDGRC8RK4B39G",
                      "parent_id": "01JH3NYK19HDS8ZGN3HB74REJ2",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.pir_terrace",
                    "from_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "off",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T19:23:37.717624+00:00",
                      "last_reported": "2025-01-08T19:23:37.717624+00:00",
                      "last_updated": "2025-01-08T19:23:37.717624+00:00",
                      "context": {
                        "id": "01JH3NYNBNFQJVFAJC0RQQCXMJ",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "on",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T19:23:39.597797+00:00",
                      "last_reported": "2025-01-08T19:23:39.597797+00:00",
                      "last_updated": "2025-01-08T19:23:39.597797+00:00",
                      "context": {
                        "id": "01JH3NYQ6DA6TPHHDPKJ9N68NZ",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.pir_terrace"
                  },
                  "target_entity": "switch.apb_q16",
                  "illuminance_currently": null,
                  "illuminance_cutoff": null,
                  "blocker_entity": null,
                  "time_limit_before": null,
                  "time_limit_after": null,
                  "no_motion_wait": "2",
                  "entity_domain": "switch",
                  "turn_off_blocker_entity": null,
                  "target_off_entity": null,
                  "sun_condition": "Below horizon"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T19:23:39.599046+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "switch.apb_q16"
                  ]
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-08T19:23:39.599467+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/2": [
              {
                "path": "condition/2",
                "timestamp": "2025-01-08T19:23:39.599753+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/3": [
              {
                "path": "condition/3",
                "timestamp": "2025-01-08T19:23:39.600163+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "sun.sun"
                  ]
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T19:23:39.600926+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH3NYQ6EX2NPXAQYC0HZ1ERA",
                    "parent_id": "01JH3NYQ6DA6TPHHDPKJ9N68NZ",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-08T19:23:39.604968+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:23:39.597797+00:00",
                        "last_reported": "2025-01-08T19:23:39.597797+00:00",
                        "last_updated": "2025-01-08T19:23:39.597797+00:00",
                        "context": {
                          "id": "01JH3NYQ6DA6TPHHDPKJ9N68NZ",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:23:41.997578+00:00",
                        "last_reported": "2025-01-08T19:23:41.997578+00:00",
                        "last_updated": "2025-01-08T19:23:41.997578+00:00",
                        "context": {
                          "id": "01JH3NYSHDZ6322JFBEFA2JCDY",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                },
                "result": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:23:39.597797+00:00",
                        "last_reported": "2025-01-08T19:23:39.597797+00:00",
                        "last_updated": "2025-01-08T19:23:39.597797+00:00",
                        "context": {
                          "id": "01JH3NYQ6DA6TPHHDPKJ9N68NZ",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:23:41.997578+00:00",
                        "last_reported": "2025-01-08T19:23:41.997578+00:00",
                        "last_updated": "2025-01-08T19:23:41.997578+00:00",
                        "context": {
                          "id": "01JH3NYSHDZ6322JFBEFA2JCDY",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-08T19:23:41.998099+00:00",
                "result": {
                  "choice": 2
                }
              }
            ],
            "action/2/choose/0": [
              {
                "path": "action/2/choose/0",
                "timestamp": "2025-01-08T19:23:41.998274+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/0/conditions/0": [
              {
                "path": "action/2/choose/0/conditions/0",
                "timestamp": "2025-01-08T19:23:41.998415+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/1": [
              {
                "path": "action/2/choose/1",
                "timestamp": "2025-01-08T19:23:41.998744+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/1/conditions/0": [
              {
                "path": "action/2/choose/1/conditions/0",
                "timestamp": "2025-01-08T19:23:41.998814+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2": [
              {
                "path": "action/2/choose/2",
                "timestamp": "2025-01-08T19:23:41.999068+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/2/choose/2/conditions/0": [
              {
                "path": "action/2/choose/2/conditions/0",
                "timestamp": "2025-01-08T19:23:41.999132+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/0": [
              {
                "path": "action/2/choose/2/sequence/0",
                "timestamp": "2025-01-08T19:23:41.999737+00:00",
                "result": {
                  "delay": 0.0,
                  "done": true
                }
              }
            ],
            "action/2/choose/2/sequence/1": [
              {
                "path": "action/2/choose/2/sequence/1",
                "timestamp": "2025-01-08T19:23:42.000704+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/2": [
              {
                "path": "action/2/choose/2/sequence/2",
                "timestamp": "2025-01-08T19:23:42.009273+00:00",
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "target_entity": "switch.apb_q16",
              "illuminance_currently": null,
              "illuminance_cutoff": null,
              "blocker_entity": null,
              "time_limit_before": null,
              "time_limit_after": null,
              "no_motion_wait": "2",
              "entity_domain": "{{ states[target_entity].domain }}",
              "turn_off_blocker_entity": null,
              "target_off_entity": null,
              "sun_condition": "Below horizon"
            },
            "triggers": {
              "platform": "state",
              "entity_id": "binary_sensor.pir_terrace",
              "to": "on"
            },
            "conditions": [
              {
                "condition": "template",
                "alias": "Check for illuminance conditions",
                "value_template": "{% set illuminance_defined = illuminance_currently != none and illuminance_cutoff != none  %} {% set illuminance_defined_and_low = (illuminance_defined and (states(illuminance_currently) | int(0) < states(illuminance_cutoff) | int(0)))  %}\n{% set target_entity_domain_supports_on_state_check = entity_domain != 'scene' and entity_domain != 'script' %} {% set target_entity_is_scene = entity_domain == 'scene' %} {% set scene_target_entities = state_attr(target_entity, 'entity_id') %} {% set singular_scene_entity_is_on = scene_target_entities is not none and scene_target_entities | count == 1 and scene_target_entities | first == 'on' %} {{  ( target_entity_domain_supports_on_state_check and states(target_entity) == 'on') or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and not illuminance_defined) or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and not illuminance_defined) or ( target_entity_is_scene and singular_scene_entity_is_on) }}\n"
              },
              {
                "condition": "template",
                "alias": "Check for blocker entity",
                "value_template": "{{ (blocker_entity == none) or (states(blocker_entity) == 'off') }}"
              },
              {
                "condition": "template",
                "alias": "Check for time limits",
                "value_template": "{% set current_time = now().strftime(\"%H:%M\")  %}\n{% if time_limit_before == none and time_limit_after == none %} true {% endif %}\n{% if time_limit_before != none and time_limit_after == none %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {{ current_time_is_before_limit }} {% elif time_limit_before == none and time_limit_after != none %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {{ current_time_is_after_limit }} {% endif %}\n{% if time_limit_before != none and time_limit_after != none %} {% set before_limit_is_tomorrow = states(time_limit_before) < states(time_limit_after)  %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {% set time_window_spans_midnight = states(time_limit_after) > states(time_limit_before)  %}\n  {% if time_window_spans_midnight != none and time_window_spans_midnight and before_limit_is_tomorrow %}\n  {{ current_time_is_after_limit or current_time_is_before_limit }}\n  {% elif time_window_spans_midnight != none and not time_window_spans_midnight %}\n  {{ current_time_is_before_limit and current_time_is_after_limit }}\n  {% endif %}\n{% endif %}\n"
              },
              {
                "condition": "template",
                "alias": "Check for sun state",
                "value_template": "{# Prevent breaking when no sun condition is set in existing automations #} {% if not sun_condition is defined %} {% set sun_condition = 'Always'   %} {% endif %} {# Get current sun state #} {% set current_sun_condition = states['sun.sun'].state  %}\n{# Checks for current sun state #} {% set sun_state_is_below_horizon = current_sun_condition == 'below_horizon' %} {% set sun_state_is_above_horizon = current_sun_condition == 'above_horizon' %}\n{# Check to see if a condition for sunstate is set by user #} {% set no_sun_condition = sun_condition is defined and sun_condition == 'Always' %} {# Check to see if the user wants automation to trigger below horizon #} {% set sun_condition_is_below_horizon = sun_condition == 'Below horizon' %} {# Check to see if the user wants automation to trigger above horizon #} {% set sun_condition_is_above_horizon = sun_condition == 'Above horizon' %}\n{# Checks to see if sunstate matches up with users condition #} {% set sun_condition_below_horizon_match = sun_state_is_below_horizon and sun_condition_is_below_horizon %} {% set sun_condition_above_horizon_match = sun_state_is_above_horizon and sun_condition_is_above_horizon %} {% set sun_condition_matching = sun_condition_below_horizon_match or sun_condition_above_horizon_match or no_sun_condition %} {{ sun_condition_matching }}\n{# Debug values: (uncomment to check in template dev tool) ## Set at top of template: {% set sun_condition = 'Above horizon'  %} Current sun condition: {{current_sun_condition}} Sun state is below horizon: {{ sun_state_is_below_horizon }} Sun state is above horizon: {{ sun_state_is_above_horizon }} Sun condition is set to always: {{ sun_condition_always }} Sun condition is below horizon: {{ sun_condition_is_below_horizon }} Sun condition is above horizon: {{ sun_condition_is_above_horizon }} Sun condition is below horizon match: {{ sun_condition_below_horizon_match }} Sun condition is above horizon match: {{ sun_condition_above_horizon_match }} Sun condition is a match: {{ sun_condition_matching }} #}\n"
              }
            ],
            "actions": [
              {
                "entity_id": "switch.apb_q16",
                "action": "homeassistant.turn_on"
              },
              {
                "wait_for_trigger": {
                  "platform": "state",
                  "entity_id": "binary_sensor.pir_terrace",
                  "from": "on",
                  "to": "off"
                }
              },
              {
                "choose": [
                  {
                    "alias": "Motion wait not defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait not defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  }
                ]
              }
            ],
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": "",
            "use_blueprint": {
              "path": "gist.githubusercontent.com/motion_illuminance_activated_entity.yaml",
              "input": {
                "motion_sensor": "binary_sensor.pir_terrace",
                "target_entity": "switch.apb_q16",
                "sunstate_condition": "Below horizon",
                "no_motion_wait": "2"
              }
            }
          },
          "context": {
            "id": "01JH3NYQ6EX2NPXAQYC0HZ1ERA",
            "parent_id": "01JH3NYQ6DA6TPHHDPKJ9N68NZ",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "980913f39d9e8872c0e41530e26dc143",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T19:23:39.598243+00:00",
            "finish": "2025-01-08T19:23:42.014782+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "a45a3715304f273ff9fa144a5d34ffcb",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T19:29:59.284330+00:00",
            "finish": "2025-01-08T19:30:01.332515+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T19:29:59.285011+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.terrace_motion_light",
                    "state": "on",
                    "attributes": {
                      "id": "1732910862841",
                      "last_triggered": "2025-01-08T19:23:39.600605+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "Terrace Motion Light"
                    },
                    "last_changed": "2025-01-07T22:59:11.837054+00:00",
                    "last_reported": "2025-01-08T19:23:42.014570+00:00",
                    "last_updated": "2025-01-08T19:23:42.014570+00:00",
                    "context": {
                      "id": "01JH3NYQ6EX2NPXAQYC0HZ1ERA",
                      "parent_id": "01JH3NYQ6DA6TPHHDPKJ9N68NZ",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.pir_terrace",
                    "from_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "off",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T19:23:41.997578+00:00",
                      "last_reported": "2025-01-08T19:23:41.997578+00:00",
                      "last_updated": "2025-01-08T19:23:41.997578+00:00",
                      "context": {
                        "id": "01JH3NYSHDZ6322JFBEFA2JCDY",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "on",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T19:29:59.283916+00:00",
                      "last_reported": "2025-01-08T19:29:59.283916+00:00",
                      "last_updated": "2025-01-08T19:29:59.283916+00:00",
                      "context": {
                        "id": "01JH3PA9ZK64J29B4Z5NWT3A00",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.pir_terrace"
                  },
                  "target_entity": "switch.apb_q16",
                  "illuminance_currently": null,
                  "illuminance_cutoff": null,
                  "blocker_entity": null,
                  "time_limit_before": null,
                  "time_limit_after": null,
                  "no_motion_wait": "2",
                  "entity_domain": "switch",
                  "turn_off_blocker_entity": null,
                  "target_off_entity": null,
                  "sun_condition": "Below horizon"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T19:29:59.285088+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "switch.apb_q16"
                  ]
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-08T19:29:59.285623+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/2": [
              {
                "path": "condition/2",
                "timestamp": "2025-01-08T19:29:59.285832+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/3": [
              {
                "path": "condition/3",
                "timestamp": "2025-01-08T19:29:59.286241+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "sun.sun"
                  ]
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T19:29:59.286823+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH3PA9ZMQB2VQR7JPMHXAW1C",
                    "parent_id": "01JH3PA9ZK64J29B4Z5NWT3A00",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-08T19:29:59.290668+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:29:59.283916+00:00",
                        "last_reported": "2025-01-08T19:29:59.283916+00:00",
                        "last_updated": "2025-01-08T19:29:59.283916+00:00",
                        "context": {
                          "id": "01JH3PA9ZK64J29B4Z5NWT3A00",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:30:01.323945+00:00",
                        "last_reported": "2025-01-08T19:30:01.323945+00:00",
                        "last_updated": "2025-01-08T19:30:01.323945+00:00",
                        "context": {
                          "id": "01JH3PABZB890RWW9HRGFJ6XF9",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                },
                "result": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:29:59.283916+00:00",
                        "last_reported": "2025-01-08T19:29:59.283916+00:00",
                        "last_updated": "2025-01-08T19:29:59.283916+00:00",
                        "context": {
                          "id": "01JH3PA9ZK64J29B4Z5NWT3A00",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:30:01.323945+00:00",
                        "last_reported": "2025-01-08T19:30:01.323945+00:00",
                        "last_updated": "2025-01-08T19:30:01.323945+00:00",
                        "context": {
                          "id": "01JH3PABZB890RWW9HRGFJ6XF9",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-08T19:30:01.324739+00:00",
                "result": {
                  "choice": 2
                }
              }
            ],
            "action/2/choose/0": [
              {
                "path": "action/2/choose/0",
                "timestamp": "2025-01-08T19:30:01.324893+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/0/conditions/0": [
              {
                "path": "action/2/choose/0/conditions/0",
                "timestamp": "2025-01-08T19:30:01.324971+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/1": [
              {
                "path": "action/2/choose/1",
                "timestamp": "2025-01-08T19:30:01.325372+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/1/conditions/0": [
              {
                "path": "action/2/choose/1/conditions/0",
                "timestamp": "2025-01-08T19:30:01.325480+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2": [
              {
                "path": "action/2/choose/2",
                "timestamp": "2025-01-08T19:30:01.325744+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/2/choose/2/conditions/0": [
              {
                "path": "action/2/choose/2/conditions/0",
                "timestamp": "2025-01-08T19:30:01.325807+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/0": [
              {
                "path": "action/2/choose/2/sequence/0",
                "timestamp": "2025-01-08T19:30:01.326431+00:00",
                "result": {
                  "delay": 0.0,
                  "done": true
                }
              }
            ],
            "action/2/choose/2/sequence/1": [
              {
                "path": "action/2/choose/2/sequence/1",
                "timestamp": "2025-01-08T19:30:01.327491+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/2": [
              {
                "path": "action/2/choose/2/sequence/2",
                "timestamp": "2025-01-08T19:30:01.327961+00:00",
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "target_entity": "switch.apb_q16",
              "illuminance_currently": null,
              "illuminance_cutoff": null,
              "blocker_entity": null,
              "time_limit_before": null,
              "time_limit_after": null,
              "no_motion_wait": "2",
              "entity_domain": "{{ states[target_entity].domain }}",
              "turn_off_blocker_entity": null,
              "target_off_entity": null,
              "sun_condition": "Below horizon"
            },
            "triggers": {
              "platform": "state",
              "entity_id": "binary_sensor.pir_terrace",
              "to": "on"
            },
            "conditions": [
              {
                "condition": "template",
                "alias": "Check for illuminance conditions",
                "value_template": "{% set illuminance_defined = illuminance_currently != none and illuminance_cutoff != none  %} {% set illuminance_defined_and_low = (illuminance_defined and (states(illuminance_currently) | int(0) < states(illuminance_cutoff) | int(0)))  %}\n{% set target_entity_domain_supports_on_state_check = entity_domain != 'scene' and entity_domain != 'script' %} {% set target_entity_is_scene = entity_domain == 'scene' %} {% set scene_target_entities = state_attr(target_entity, 'entity_id') %} {% set singular_scene_entity_is_on = scene_target_entities is not none and scene_target_entities | count == 1 and scene_target_entities | first == 'on' %} {{  ( target_entity_domain_supports_on_state_check and states(target_entity) == 'on') or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and not illuminance_defined) or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and not illuminance_defined) or ( target_entity_is_scene and singular_scene_entity_is_on) }}\n"
              },
              {
                "condition": "template",
                "alias": "Check for blocker entity",
                "value_template": "{{ (blocker_entity == none) or (states(blocker_entity) == 'off') }}"
              },
              {
                "condition": "template",
                "alias": "Check for time limits",
                "value_template": "{% set current_time = now().strftime(\"%H:%M\")  %}\n{% if time_limit_before == none and time_limit_after == none %} true {% endif %}\n{% if time_limit_before != none and time_limit_after == none %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {{ current_time_is_before_limit }} {% elif time_limit_before == none and time_limit_after != none %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {{ current_time_is_after_limit }} {% endif %}\n{% if time_limit_before != none and time_limit_after != none %} {% set before_limit_is_tomorrow = states(time_limit_before) < states(time_limit_after)  %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {% set time_window_spans_midnight = states(time_limit_after) > states(time_limit_before)  %}\n  {% if time_window_spans_midnight != none and time_window_spans_midnight and before_limit_is_tomorrow %}\n  {{ current_time_is_after_limit or current_time_is_before_limit }}\n  {% elif time_window_spans_midnight != none and not time_window_spans_midnight %}\n  {{ current_time_is_before_limit and current_time_is_after_limit }}\n  {% endif %}\n{% endif %}\n"
              },
              {
                "condition": "template",
                "alias": "Check for sun state",
                "value_template": "{# Prevent breaking when no sun condition is set in existing automations #} {% if not sun_condition is defined %} {% set sun_condition = 'Always'   %} {% endif %} {# Get current sun state #} {% set current_sun_condition = states['sun.sun'].state  %}\n{# Checks for current sun state #} {% set sun_state_is_below_horizon = current_sun_condition == 'below_horizon' %} {% set sun_state_is_above_horizon = current_sun_condition == 'above_horizon' %}\n{# Check to see if a condition for sunstate is set by user #} {% set no_sun_condition = sun_condition is defined and sun_condition == 'Always' %} {# Check to see if the user wants automation to trigger below horizon #} {% set sun_condition_is_below_horizon = sun_condition == 'Below horizon' %} {# Check to see if the user wants automation to trigger above horizon #} {% set sun_condition_is_above_horizon = sun_condition == 'Above horizon' %}\n{# Checks to see if sunstate matches up with users condition #} {% set sun_condition_below_horizon_match = sun_state_is_below_horizon and sun_condition_is_below_horizon %} {% set sun_condition_above_horizon_match = sun_state_is_above_horizon and sun_condition_is_above_horizon %} {% set sun_condition_matching = sun_condition_below_horizon_match or sun_condition_above_horizon_match or no_sun_condition %} {{ sun_condition_matching }}\n{# Debug values: (uncomment to check in template dev tool) ## Set at top of template: {% set sun_condition = 'Above horizon'  %} Current sun condition: {{current_sun_condition}} Sun state is below horizon: {{ sun_state_is_below_horizon }} Sun state is above horizon: {{ sun_state_is_above_horizon }} Sun condition is set to always: {{ sun_condition_always }} Sun condition is below horizon: {{ sun_condition_is_below_horizon }} Sun condition is above horizon: {{ sun_condition_is_above_horizon }} Sun condition is below horizon match: {{ sun_condition_below_horizon_match }} Sun condition is above horizon match: {{ sun_condition_above_horizon_match }} Sun condition is a match: {{ sun_condition_matching }} #}\n"
              }
            ],
            "actions": [
              {
                "entity_id": "switch.apb_q16",
                "action": "homeassistant.turn_on"
              },
              {
                "wait_for_trigger": {
                  "platform": "state",
                  "entity_id": "binary_sensor.pir_terrace",
                  "from": "on",
                  "to": "off"
                }
              },
              {
                "choose": [
                  {
                    "alias": "Motion wait not defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait not defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  }
                ]
              }
            ],
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": "",
            "use_blueprint": {
              "path": "gist.githubusercontent.com/motion_illuminance_activated_entity.yaml",
              "input": {
                "motion_sensor": "binary_sensor.pir_terrace",
                "target_entity": "switch.apb_q16",
                "sunstate_condition": "Below horizon",
                "no_motion_wait": "2"
              }
            }
          },
          "context": {
            "id": "01JH3PA9ZMQB2VQR7JPMHXAW1C",
            "parent_id": "01JH3PA9ZK64J29B4Z5NWT3A00",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "a45a3715304f273ff9fa144a5d34ffcb",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T19:29:59.284330+00:00",
            "finish": "2025-01-08T19:30:01.332515+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "c5067ebc442852f21802232c9b22c68b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T19:30:13.884813+00:00",
            "finish": "2025-01-08T19:30:16.253211+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T19:30:13.885485+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.terrace_motion_light",
                    "state": "on",
                    "attributes": {
                      "id": "1732910862841",
                      "last_triggered": "2025-01-08T19:29:59.286585+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "Terrace Motion Light"
                    },
                    "last_changed": "2025-01-07T22:59:11.837054+00:00",
                    "last_reported": "2025-01-08T19:30:01.332197+00:00",
                    "last_updated": "2025-01-08T19:30:01.332197+00:00",
                    "context": {
                      "id": "01JH3PA9ZMQB2VQR7JPMHXAW1C",
                      "parent_id": "01JH3PA9ZK64J29B4Z5NWT3A00",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.pir_terrace",
                    "from_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "off",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T19:30:01.323945+00:00",
                      "last_reported": "2025-01-08T19:30:01.323945+00:00",
                      "last_updated": "2025-01-08T19:30:01.323945+00:00",
                      "context": {
                        "id": "01JH3PABZB890RWW9HRGFJ6XF9",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "on",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T19:30:13.884413+00:00",
                      "last_reported": "2025-01-08T19:30:13.884413+00:00",
                      "last_updated": "2025-01-08T19:30:13.884413+00:00",
                      "context": {
                        "id": "01JH3PAR7WB8NXCH7J5YAY82HW",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.pir_terrace"
                  },
                  "target_entity": "switch.apb_q16",
                  "illuminance_currently": null,
                  "illuminance_cutoff": null,
                  "blocker_entity": null,
                  "time_limit_before": null,
                  "time_limit_after": null,
                  "no_motion_wait": "2",
                  "entity_domain": "switch",
                  "turn_off_blocker_entity": null,
                  "target_off_entity": null,
                  "sun_condition": "Below horizon"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T19:30:13.885561+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "switch.apb_q16"
                  ]
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-08T19:30:13.885974+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/2": [
              {
                "path": "condition/2",
                "timestamp": "2025-01-08T19:30:13.886205+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/3": [
              {
                "path": "condition/3",
                "timestamp": "2025-01-08T19:30:13.886668+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "sun.sun"
                  ]
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T19:30:13.887327+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH3PAR7WMGFRWWTSBKZBJQXM",
                    "parent_id": "01JH3PAR7WB8NXCH7J5YAY82HW",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-08T19:30:13.892065+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:30:13.884413+00:00",
                        "last_reported": "2025-01-08T19:30:13.884413+00:00",
                        "last_updated": "2025-01-08T19:30:13.884413+00:00",
                        "context": {
                          "id": "01JH3PAR7WB8NXCH7J5YAY82HW",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:30:16.244079+00:00",
                        "last_reported": "2025-01-08T19:30:16.244079+00:00",
                        "last_updated": "2025-01-08T19:30:16.244079+00:00",
                        "context": {
                          "id": "01JH3PATHMCW0FAPCN9Y3CZ2P3",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                },
                "result": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:30:13.884413+00:00",
                        "last_reported": "2025-01-08T19:30:13.884413+00:00",
                        "last_updated": "2025-01-08T19:30:13.884413+00:00",
                        "context": {
                          "id": "01JH3PAR7WB8NXCH7J5YAY82HW",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:30:16.244079+00:00",
                        "last_reported": "2025-01-08T19:30:16.244079+00:00",
                        "last_updated": "2025-01-08T19:30:16.244079+00:00",
                        "context": {
                          "id": "01JH3PATHMCW0FAPCN9Y3CZ2P3",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-08T19:30:16.244714+00:00",
                "result": {
                  "choice": 2
                }
              }
            ],
            "action/2/choose/0": [
              {
                "path": "action/2/choose/0",
                "timestamp": "2025-01-08T19:30:16.244803+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/0/conditions/0": [
              {
                "path": "action/2/choose/0/conditions/0",
                "timestamp": "2025-01-08T19:30:16.244843+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/1": [
              {
                "path": "action/2/choose/1",
                "timestamp": "2025-01-08T19:30:16.245048+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/1/conditions/0": [
              {
                "path": "action/2/choose/1/conditions/0",
                "timestamp": "2025-01-08T19:30:16.245088+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2": [
              {
                "path": "action/2/choose/2",
                "timestamp": "2025-01-08T19:30:16.245255+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/2/choose/2/conditions/0": [
              {
                "path": "action/2/choose/2/conditions/0",
                "timestamp": "2025-01-08T19:30:16.245293+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/0": [
              {
                "path": "action/2/choose/2/sequence/0",
                "timestamp": "2025-01-08T19:30:16.245688+00:00",
                "result": {
                  "delay": 0.0,
                  "done": true
                }
              }
            ],
            "action/2/choose/2/sequence/1": [
              {
                "path": "action/2/choose/2/sequence/1",
                "timestamp": "2025-01-08T19:30:16.246339+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/2": [
              {
                "path": "action/2/choose/2/sequence/2",
                "timestamp": "2025-01-08T19:30:16.246703+00:00",
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "target_entity": "switch.apb_q16",
              "illuminance_currently": null,
              "illuminance_cutoff": null,
              "blocker_entity": null,
              "time_limit_before": null,
              "time_limit_after": null,
              "no_motion_wait": "2",
              "entity_domain": "{{ states[target_entity].domain }}",
              "turn_off_blocker_entity": null,
              "target_off_entity": null,
              "sun_condition": "Below horizon"
            },
            "triggers": {
              "platform": "state",
              "entity_id": "binary_sensor.pir_terrace",
              "to": "on"
            },
            "conditions": [
              {
                "condition": "template",
                "alias": "Check for illuminance conditions",
                "value_template": "{% set illuminance_defined = illuminance_currently != none and illuminance_cutoff != none  %} {% set illuminance_defined_and_low = (illuminance_defined and (states(illuminance_currently) | int(0) < states(illuminance_cutoff) | int(0)))  %}\n{% set target_entity_domain_supports_on_state_check = entity_domain != 'scene' and entity_domain != 'script' %} {% set target_entity_is_scene = entity_domain == 'scene' %} {% set scene_target_entities = state_attr(target_entity, 'entity_id') %} {% set singular_scene_entity_is_on = scene_target_entities is not none and scene_target_entities | count == 1 and scene_target_entities | first == 'on' %} {{  ( target_entity_domain_supports_on_state_check and states(target_entity) == 'on') or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and not illuminance_defined) or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and not illuminance_defined) or ( target_entity_is_scene and singular_scene_entity_is_on) }}\n"
              },
              {
                "condition": "template",
                "alias": "Check for blocker entity",
                "value_template": "{{ (blocker_entity == none) or (states(blocker_entity) == 'off') }}"
              },
              {
                "condition": "template",
                "alias": "Check for time limits",
                "value_template": "{% set current_time = now().strftime(\"%H:%M\")  %}\n{% if time_limit_before == none and time_limit_after == none %} true {% endif %}\n{% if time_limit_before != none and time_limit_after == none %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {{ current_time_is_before_limit }} {% elif time_limit_before == none and time_limit_after != none %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {{ current_time_is_after_limit }} {% endif %}\n{% if time_limit_before != none and time_limit_after != none %} {% set before_limit_is_tomorrow = states(time_limit_before) < states(time_limit_after)  %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {% set time_window_spans_midnight = states(time_limit_after) > states(time_limit_before)  %}\n  {% if time_window_spans_midnight != none and time_window_spans_midnight and before_limit_is_tomorrow %}\n  {{ current_time_is_after_limit or current_time_is_before_limit }}\n  {% elif time_window_spans_midnight != none and not time_window_spans_midnight %}\n  {{ current_time_is_before_limit and current_time_is_after_limit }}\n  {% endif %}\n{% endif %}\n"
              },
              {
                "condition": "template",
                "alias": "Check for sun state",
                "value_template": "{# Prevent breaking when no sun condition is set in existing automations #} {% if not sun_condition is defined %} {% set sun_condition = 'Always'   %} {% endif %} {# Get current sun state #} {% set current_sun_condition = states['sun.sun'].state  %}\n{# Checks for current sun state #} {% set sun_state_is_below_horizon = current_sun_condition == 'below_horizon' %} {% set sun_state_is_above_horizon = current_sun_condition == 'above_horizon' %}\n{# Check to see if a condition for sunstate is set by user #} {% set no_sun_condition = sun_condition is defined and sun_condition == 'Always' %} {# Check to see if the user wants automation to trigger below horizon #} {% set sun_condition_is_below_horizon = sun_condition == 'Below horizon' %} {# Check to see if the user wants automation to trigger above horizon #} {% set sun_condition_is_above_horizon = sun_condition == 'Above horizon' %}\n{# Checks to see if sunstate matches up with users condition #} {% set sun_condition_below_horizon_match = sun_state_is_below_horizon and sun_condition_is_below_horizon %} {% set sun_condition_above_horizon_match = sun_state_is_above_horizon and sun_condition_is_above_horizon %} {% set sun_condition_matching = sun_condition_below_horizon_match or sun_condition_above_horizon_match or no_sun_condition %} {{ sun_condition_matching }}\n{# Debug values: (uncomment to check in template dev tool) ## Set at top of template: {% set sun_condition = 'Above horizon'  %} Current sun condition: {{current_sun_condition}} Sun state is below horizon: {{ sun_state_is_below_horizon }} Sun state is above horizon: {{ sun_state_is_above_horizon }} Sun condition is set to always: {{ sun_condition_always }} Sun condition is below horizon: {{ sun_condition_is_below_horizon }} Sun condition is above horizon: {{ sun_condition_is_above_horizon }} Sun condition is below horizon match: {{ sun_condition_below_horizon_match }} Sun condition is above horizon match: {{ sun_condition_above_horizon_match }} Sun condition is a match: {{ sun_condition_matching }} #}\n"
              }
            ],
            "actions": [
              {
                "entity_id": "switch.apb_q16",
                "action": "homeassistant.turn_on"
              },
              {
                "wait_for_trigger": {
                  "platform": "state",
                  "entity_id": "binary_sensor.pir_terrace",
                  "from": "on",
                  "to": "off"
                }
              },
              {
                "choose": [
                  {
                    "alias": "Motion wait not defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait not defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  }
                ]
              }
            ],
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": "",
            "use_blueprint": {
              "path": "gist.githubusercontent.com/motion_illuminance_activated_entity.yaml",
              "input": {
                "motion_sensor": "binary_sensor.pir_terrace",
                "target_entity": "switch.apb_q16",
                "sunstate_condition": "Below horizon",
                "no_motion_wait": "2"
              }
            }
          },
          "context": {
            "id": "01JH3PAR7WMGFRWWTSBKZBJQXM",
            "parent_id": "01JH3PAR7WB8NXCH7J5YAY82HW",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "c5067ebc442852f21802232c9b22c68b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T19:30:13.884813+00:00",
            "finish": "2025-01-08T19:30:16.253211+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "440c488a05de77455d0919e5a254b08f",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T19:37:32.917075+00:00",
            "finish": "2025-01-08T19:37:35.177736+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T19:37:32.917735+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.terrace_motion_light",
                    "state": "on",
                    "attributes": {
                      "id": "1732910862841",
                      "last_triggered": "2025-01-08T19:30:13.886988+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "Terrace Motion Light"
                    },
                    "last_changed": "2025-01-07T22:59:11.837054+00:00",
                    "last_reported": "2025-01-08T19:30:16.252989+00:00",
                    "last_updated": "2025-01-08T19:30:16.252989+00:00",
                    "context": {
                      "id": "01JH3PAR7WMGFRWWTSBKZBJQXM",
                      "parent_id": "01JH3PAR7WB8NXCH7J5YAY82HW",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.pir_terrace",
                    "from_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "off",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T19:30:16.244079+00:00",
                      "last_reported": "2025-01-08T19:30:16.244079+00:00",
                      "last_updated": "2025-01-08T19:30:16.244079+00:00",
                      "context": {
                        "id": "01JH3PATHMCW0FAPCN9Y3CZ2P3",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "on",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T19:37:32.916693+00:00",
                      "last_reported": "2025-01-08T19:37:32.916693+00:00",
                      "last_updated": "2025-01-08T19:37:32.916693+00:00",
                      "context": {
                        "id": "01JH3PR4ZM630BKD5FT96E6KZ9",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.pir_terrace"
                  },
                  "target_entity": "switch.apb_q16",
                  "illuminance_currently": null,
                  "illuminance_cutoff": null,
                  "blocker_entity": null,
                  "time_limit_before": null,
                  "time_limit_after": null,
                  "no_motion_wait": "2",
                  "entity_domain": "switch",
                  "turn_off_blocker_entity": null,
                  "target_off_entity": null,
                  "sun_condition": "Below horizon"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T19:37:32.917814+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "switch.apb_q16"
                  ]
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-08T19:37:32.918249+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/2": [
              {
                "path": "condition/2",
                "timestamp": "2025-01-08T19:37:32.918463+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/3": [
              {
                "path": "condition/3",
                "timestamp": "2025-01-08T19:37:32.918929+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "sun.sun"
                  ]
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T19:37:32.919510+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH3PR4ZNHZH7VE11JYSEJEYN",
                    "parent_id": "01JH3PR4ZM630BKD5FT96E6KZ9",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-08T19:37:32.923272+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:37:32.916693+00:00",
                        "last_reported": "2025-01-08T19:37:32.916693+00:00",
                        "last_updated": "2025-01-08T19:37:32.916693+00:00",
                        "context": {
                          "id": "01JH3PR4ZM630BKD5FT96E6KZ9",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:37:35.169682+00:00",
                        "last_reported": "2025-01-08T19:37:35.169682+00:00",
                        "last_updated": "2025-01-08T19:37:35.169682+00:00",
                        "context": {
                          "id": "01JH3PR7612V2GXZ8GMD75Q4M1",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                },
                "result": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:37:32.916693+00:00",
                        "last_reported": "2025-01-08T19:37:32.916693+00:00",
                        "last_updated": "2025-01-08T19:37:32.916693+00:00",
                        "context": {
                          "id": "01JH3PR4ZM630BKD5FT96E6KZ9",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:37:35.169682+00:00",
                        "last_reported": "2025-01-08T19:37:35.169682+00:00",
                        "last_updated": "2025-01-08T19:37:35.169682+00:00",
                        "context": {
                          "id": "01JH3PR7612V2GXZ8GMD75Q4M1",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-08T19:37:35.170396+00:00",
                "result": {
                  "choice": 2
                }
              }
            ],
            "action/2/choose/0": [
              {
                "path": "action/2/choose/0",
                "timestamp": "2025-01-08T19:37:35.170538+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/0/conditions/0": [
              {
                "path": "action/2/choose/0/conditions/0",
                "timestamp": "2025-01-08T19:37:35.170607+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/1": [
              {
                "path": "action/2/choose/1",
                "timestamp": "2025-01-08T19:37:35.171007+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/1/conditions/0": [
              {
                "path": "action/2/choose/1/conditions/0",
                "timestamp": "2025-01-08T19:37:35.171076+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2": [
              {
                "path": "action/2/choose/2",
                "timestamp": "2025-01-08T19:37:35.171362+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/2/choose/2/conditions/0": [
              {
                "path": "action/2/choose/2/conditions/0",
                "timestamp": "2025-01-08T19:37:35.171426+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/0": [
              {
                "path": "action/2/choose/2/sequence/0",
                "timestamp": "2025-01-08T19:37:35.171954+00:00",
                "result": {
                  "delay": 0.0,
                  "done": true
                }
              }
            ],
            "action/2/choose/2/sequence/1": [
              {
                "path": "action/2/choose/2/sequence/1",
                "timestamp": "2025-01-08T19:37:35.172831+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/2": [
              {
                "path": "action/2/choose/2/sequence/2",
                "timestamp": "2025-01-08T19:37:35.173360+00:00",
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "target_entity": "switch.apb_q16",
              "illuminance_currently": null,
              "illuminance_cutoff": null,
              "blocker_entity": null,
              "time_limit_before": null,
              "time_limit_after": null,
              "no_motion_wait": "2",
              "entity_domain": "{{ states[target_entity].domain }}",
              "turn_off_blocker_entity": null,
              "target_off_entity": null,
              "sun_condition": "Below horizon"
            },
            "triggers": {
              "platform": "state",
              "entity_id": "binary_sensor.pir_terrace",
              "to": "on"
            },
            "conditions": [
              {
                "condition": "template",
                "alias": "Check for illuminance conditions",
                "value_template": "{% set illuminance_defined = illuminance_currently != none and illuminance_cutoff != none  %} {% set illuminance_defined_and_low = (illuminance_defined and (states(illuminance_currently) | int(0) < states(illuminance_cutoff) | int(0)))  %}\n{% set target_entity_domain_supports_on_state_check = entity_domain != 'scene' and entity_domain != 'script' %} {% set target_entity_is_scene = entity_domain == 'scene' %} {% set scene_target_entities = state_attr(target_entity, 'entity_id') %} {% set singular_scene_entity_is_on = scene_target_entities is not none and scene_target_entities | count == 1 and scene_target_entities | first == 'on' %} {{  ( target_entity_domain_supports_on_state_check and states(target_entity) == 'on') or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and not illuminance_defined) or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and not illuminance_defined) or ( target_entity_is_scene and singular_scene_entity_is_on) }}\n"
              },
              {
                "condition": "template",
                "alias": "Check for blocker entity",
                "value_template": "{{ (blocker_entity == none) or (states(blocker_entity) == 'off') }}"
              },
              {
                "condition": "template",
                "alias": "Check for time limits",
                "value_template": "{% set current_time = now().strftime(\"%H:%M\")  %}\n{% if time_limit_before == none and time_limit_after == none %} true {% endif %}\n{% if time_limit_before != none and time_limit_after == none %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {{ current_time_is_before_limit }} {% elif time_limit_before == none and time_limit_after != none %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {{ current_time_is_after_limit }} {% endif %}\n{% if time_limit_before != none and time_limit_after != none %} {% set before_limit_is_tomorrow = states(time_limit_before) < states(time_limit_after)  %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {% set time_window_spans_midnight = states(time_limit_after) > states(time_limit_before)  %}\n  {% if time_window_spans_midnight != none and time_window_spans_midnight and before_limit_is_tomorrow %}\n  {{ current_time_is_after_limit or current_time_is_before_limit }}\n  {% elif time_window_spans_midnight != none and not time_window_spans_midnight %}\n  {{ current_time_is_before_limit and current_time_is_after_limit }}\n  {% endif %}\n{% endif %}\n"
              },
              {
                "condition": "template",
                "alias": "Check for sun state",
                "value_template": "{# Prevent breaking when no sun condition is set in existing automations #} {% if not sun_condition is defined %} {% set sun_condition = 'Always'   %} {% endif %} {# Get current sun state #} {% set current_sun_condition = states['sun.sun'].state  %}\n{# Checks for current sun state #} {% set sun_state_is_below_horizon = current_sun_condition == 'below_horizon' %} {% set sun_state_is_above_horizon = current_sun_condition == 'above_horizon' %}\n{# Check to see if a condition for sunstate is set by user #} {% set no_sun_condition = sun_condition is defined and sun_condition == 'Always' %} {# Check to see if the user wants automation to trigger below horizon #} {% set sun_condition_is_below_horizon = sun_condition == 'Below horizon' %} {# Check to see if the user wants automation to trigger above horizon #} {% set sun_condition_is_above_horizon = sun_condition == 'Above horizon' %}\n{# Checks to see if sunstate matches up with users condition #} {% set sun_condition_below_horizon_match = sun_state_is_below_horizon and sun_condition_is_below_horizon %} {% set sun_condition_above_horizon_match = sun_state_is_above_horizon and sun_condition_is_above_horizon %} {% set sun_condition_matching = sun_condition_below_horizon_match or sun_condition_above_horizon_match or no_sun_condition %} {{ sun_condition_matching }}\n{# Debug values: (uncomment to check in template dev tool) ## Set at top of template: {% set sun_condition = 'Above horizon'  %} Current sun condition: {{current_sun_condition}} Sun state is below horizon: {{ sun_state_is_below_horizon }} Sun state is above horizon: {{ sun_state_is_above_horizon }} Sun condition is set to always: {{ sun_condition_always }} Sun condition is below horizon: {{ sun_condition_is_below_horizon }} Sun condition is above horizon: {{ sun_condition_is_above_horizon }} Sun condition is below horizon match: {{ sun_condition_below_horizon_match }} Sun condition is above horizon match: {{ sun_condition_above_horizon_match }} Sun condition is a match: {{ sun_condition_matching }} #}\n"
              }
            ],
            "actions": [
              {
                "entity_id": "switch.apb_q16",
                "action": "homeassistant.turn_on"
              },
              {
                "wait_for_trigger": {
                  "platform": "state",
                  "entity_id": "binary_sensor.pir_terrace",
                  "from": "on",
                  "to": "off"
                }
              },
              {
                "choose": [
                  {
                    "alias": "Motion wait not defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait not defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  }
                ]
              }
            ],
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": "",
            "use_blueprint": {
              "path": "gist.githubusercontent.com/motion_illuminance_activated_entity.yaml",
              "input": {
                "motion_sensor": "binary_sensor.pir_terrace",
                "target_entity": "switch.apb_q16",
                "sunstate_condition": "Below horizon",
                "no_motion_wait": "2"
              }
            }
          },
          "context": {
            "id": "01JH3PR4ZNHZH7VE11JYSEJEYN",
            "parent_id": "01JH3PR4ZM630BKD5FT96E6KZ9",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "440c488a05de77455d0919e5a254b08f",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T19:37:32.917075+00:00",
            "finish": "2025-01-08T19:37:35.177736+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "0400d92806a0bdcc27f8d1f6c64db2f0",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T19:37:40.856982+00:00",
            "finish": "2025-01-08T19:37:43.244137+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T19:37:40.857747+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.terrace_motion_light",
                    "state": "on",
                    "attributes": {
                      "id": "1732910862841",
                      "last_triggered": "2025-01-08T19:37:32.919269+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "Terrace Motion Light"
                    },
                    "last_changed": "2025-01-07T22:59:11.837054+00:00",
                    "last_reported": "2025-01-08T19:37:35.177487+00:00",
                    "last_updated": "2025-01-08T19:37:35.177487+00:00",
                    "context": {
                      "id": "01JH3PR4ZNHZH7VE11JYSEJEYN",
                      "parent_id": "01JH3PR4ZM630BKD5FT96E6KZ9",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.pir_terrace",
                    "from_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "off",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T19:37:35.169682+00:00",
                      "last_reported": "2025-01-08T19:37:35.169682+00:00",
                      "last_updated": "2025-01-08T19:37:35.169682+00:00",
                      "context": {
                        "id": "01JH3PR7612V2GXZ8GMD75Q4M1",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "on",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T19:37:40.856463+00:00",
                      "last_reported": "2025-01-08T19:37:40.856463+00:00",
                      "last_updated": "2025-01-08T19:37:40.856463+00:00",
                      "context": {
                        "id": "01JH3PRCQRBDX48B751PH4GREV",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.pir_terrace"
                  },
                  "target_entity": "switch.apb_q16",
                  "illuminance_currently": null,
                  "illuminance_cutoff": null,
                  "blocker_entity": null,
                  "time_limit_before": null,
                  "time_limit_after": null,
                  "no_motion_wait": "2",
                  "entity_domain": "switch",
                  "turn_off_blocker_entity": null,
                  "target_off_entity": null,
                  "sun_condition": "Below horizon"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T19:37:40.857862+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "switch.apb_q16"
                  ]
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-08T19:37:40.858288+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/2": [
              {
                "path": "condition/2",
                "timestamp": "2025-01-08T19:37:40.858528+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/3": [
              {
                "path": "condition/3",
                "timestamp": "2025-01-08T19:37:40.859015+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "sun.sun"
                  ]
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T19:37:40.859645+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH3PRCQRQ2HWTK8AKS8QF6RN",
                    "parent_id": "01JH3PRCQRBDX48B751PH4GREV",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-08T19:37:40.863865+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:37:40.856463+00:00",
                        "last_reported": "2025-01-08T19:37:40.856463+00:00",
                        "last_updated": "2025-01-08T19:37:40.856463+00:00",
                        "context": {
                          "id": "01JH3PRCQRBDX48B751PH4GREV",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:37:43.236062+00:00",
                        "last_reported": "2025-01-08T19:37:43.236062+00:00",
                        "last_updated": "2025-01-08T19:37:43.236062+00:00",
                        "context": {
                          "id": "01JH3PRF24VQ7FTEFVD79W8YHC",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                },
                "result": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:37:40.856463+00:00",
                        "last_reported": "2025-01-08T19:37:40.856463+00:00",
                        "last_updated": "2025-01-08T19:37:40.856463+00:00",
                        "context": {
                          "id": "01JH3PRCQRBDX48B751PH4GREV",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T19:37:43.236062+00:00",
                        "last_reported": "2025-01-08T19:37:43.236062+00:00",
                        "last_updated": "2025-01-08T19:37:43.236062+00:00",
                        "context": {
                          "id": "01JH3PRF24VQ7FTEFVD79W8YHC",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-08T19:37:43.236841+00:00",
                "result": {
                  "choice": 2
                }
              }
            ],
            "action/2/choose/0": [
              {
                "path": "action/2/choose/0",
                "timestamp": "2025-01-08T19:37:43.236983+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/0/conditions/0": [
              {
                "path": "action/2/choose/0/conditions/0",
                "timestamp": "2025-01-08T19:37:43.237051+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/1": [
              {
                "path": "action/2/choose/1",
                "timestamp": "2025-01-08T19:37:43.237489+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/1/conditions/0": [
              {
                "path": "action/2/choose/1/conditions/0",
                "timestamp": "2025-01-08T19:37:43.237560+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2": [
              {
                "path": "action/2/choose/2",
                "timestamp": "2025-01-08T19:37:43.237820+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/2/choose/2/conditions/0": [
              {
                "path": "action/2/choose/2/conditions/0",
                "timestamp": "2025-01-08T19:37:43.237883+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/0": [
              {
                "path": "action/2/choose/2/sequence/0",
                "timestamp": "2025-01-08T19:37:43.238436+00:00",
                "result": {
                  "delay": 0.0,
                  "done": true
                }
              }
            ],
            "action/2/choose/2/sequence/1": [
              {
                "path": "action/2/choose/2/sequence/1",
                "timestamp": "2025-01-08T19:37:43.239436+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/2": [
              {
                "path": "action/2/choose/2/sequence/2",
                "timestamp": "2025-01-08T19:37:43.239897+00:00",
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "target_entity": "switch.apb_q16",
              "illuminance_currently": null,
              "illuminance_cutoff": null,
              "blocker_entity": null,
              "time_limit_before": null,
              "time_limit_after": null,
              "no_motion_wait": "2",
              "entity_domain": "{{ states[target_entity].domain }}",
              "turn_off_blocker_entity": null,
              "target_off_entity": null,
              "sun_condition": "Below horizon"
            },
            "triggers": {
              "platform": "state",
              "entity_id": "binary_sensor.pir_terrace",
              "to": "on"
            },
            "conditions": [
              {
                "condition": "template",
                "alias": "Check for illuminance conditions",
                "value_template": "{% set illuminance_defined = illuminance_currently != none and illuminance_cutoff != none  %} {% set illuminance_defined_and_low = (illuminance_defined and (states(illuminance_currently) | int(0) < states(illuminance_cutoff) | int(0)))  %}\n{% set target_entity_domain_supports_on_state_check = entity_domain != 'scene' and entity_domain != 'script' %} {% set target_entity_is_scene = entity_domain == 'scene' %} {% set scene_target_entities = state_attr(target_entity, 'entity_id') %} {% set singular_scene_entity_is_on = scene_target_entities is not none and scene_target_entities | count == 1 and scene_target_entities | first == 'on' %} {{  ( target_entity_domain_supports_on_state_check and states(target_entity) == 'on') or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and not illuminance_defined) or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and not illuminance_defined) or ( target_entity_is_scene and singular_scene_entity_is_on) }}\n"
              },
              {
                "condition": "template",
                "alias": "Check for blocker entity",
                "value_template": "{{ (blocker_entity == none) or (states(blocker_entity) == 'off') }}"
              },
              {
                "condition": "template",
                "alias": "Check for time limits",
                "value_template": "{% set current_time = now().strftime(\"%H:%M\")  %}\n{% if time_limit_before == none and time_limit_after == none %} true {% endif %}\n{% if time_limit_before != none and time_limit_after == none %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {{ current_time_is_before_limit }} {% elif time_limit_before == none and time_limit_after != none %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {{ current_time_is_after_limit }} {% endif %}\n{% if time_limit_before != none and time_limit_after != none %} {% set before_limit_is_tomorrow = states(time_limit_before) < states(time_limit_after)  %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {% set time_window_spans_midnight = states(time_limit_after) > states(time_limit_before)  %}\n  {% if time_window_spans_midnight != none and time_window_spans_midnight and before_limit_is_tomorrow %}\n  {{ current_time_is_after_limit or current_time_is_before_limit }}\n  {% elif time_window_spans_midnight != none and not time_window_spans_midnight %}\n  {{ current_time_is_before_limit and current_time_is_after_limit }}\n  {% endif %}\n{% endif %}\n"
              },
              {
                "condition": "template",
                "alias": "Check for sun state",
                "value_template": "{# Prevent breaking when no sun condition is set in existing automations #} {% if not sun_condition is defined %} {% set sun_condition = 'Always'   %} {% endif %} {# Get current sun state #} {% set current_sun_condition = states['sun.sun'].state  %}\n{# Checks for current sun state #} {% set sun_state_is_below_horizon = current_sun_condition == 'below_horizon' %} {% set sun_state_is_above_horizon = current_sun_condition == 'above_horizon' %}\n{# Check to see if a condition for sunstate is set by user #} {% set no_sun_condition = sun_condition is defined and sun_condition == 'Always' %} {# Check to see if the user wants automation to trigger below horizon #} {% set sun_condition_is_below_horizon = sun_condition == 'Below horizon' %} {# Check to see if the user wants automation to trigger above horizon #} {% set sun_condition_is_above_horizon = sun_condition == 'Above horizon' %}\n{# Checks to see if sunstate matches up with users condition #} {% set sun_condition_below_horizon_match = sun_state_is_below_horizon and sun_condition_is_below_horizon %} {% set sun_condition_above_horizon_match = sun_state_is_above_horizon and sun_condition_is_above_horizon %} {% set sun_condition_matching = sun_condition_below_horizon_match or sun_condition_above_horizon_match or no_sun_condition %} {{ sun_condition_matching }}\n{# Debug values: (uncomment to check in template dev tool) ## Set at top of template: {% set sun_condition = 'Above horizon'  %} Current sun condition: {{current_sun_condition}} Sun state is below horizon: {{ sun_state_is_below_horizon }} Sun state is above horizon: {{ sun_state_is_above_horizon }} Sun condition is set to always: {{ sun_condition_always }} Sun condition is below horizon: {{ sun_condition_is_below_horizon }} Sun condition is above horizon: {{ sun_condition_is_above_horizon }} Sun condition is below horizon match: {{ sun_condition_below_horizon_match }} Sun condition is above horizon match: {{ sun_condition_above_horizon_match }} Sun condition is a match: {{ sun_condition_matching }} #}\n"
              }
            ],
            "actions": [
              {
                "entity_id": "switch.apb_q16",
                "action": "homeassistant.turn_on"
              },
              {
                "wait_for_trigger": {
                  "platform": "state",
                  "entity_id": "binary_sensor.pir_terrace",
                  "from": "on",
                  "to": "off"
                }
              },
              {
                "choose": [
                  {
                    "alias": "Motion wait not defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait not defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  }
                ]
              }
            ],
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": "",
            "use_blueprint": {
              "path": "gist.githubusercontent.com/motion_illuminance_activated_entity.yaml",
              "input": {
                "motion_sensor": "binary_sensor.pir_terrace",
                "target_entity": "switch.apb_q16",
                "sunstate_condition": "Below horizon",
                "no_motion_wait": "2"
              }
            }
          },
          "context": {
            "id": "01JH3PRCQRQ2HWTK8AKS8QF6RN",
            "parent_id": "01JH3PRCQRBDX48B751PH4GREV",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "0400d92806a0bdcc27f8d1f6c64db2f0",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T19:37:40.856982+00:00",
            "finish": "2025-01-08T19:37:43.244137+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace"
        }
      }
    ],
    "automation.1732908024287": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "8bde2207e20766bdf8b14c9afa069d92",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T02:00:00.092460+00:00",
            "finish": "2025-01-08T02:00:01.171221+00:00"
          },
          "domain": "automation",
          "item_id": "1732908024287",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T02:00:00.092540+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.letsencrypt_renew",
                    "state": "on",
                    "attributes": {
                      "id": "1732908024287",
                      "last_triggered": "2025-01-07T02:00:00.382169+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Let's Encrypt renew"
                    },
                    "last_changed": "2025-01-07T22:59:11.836658+00:00",
                    "last_reported": "2025-01-07T22:59:11.836658+00:00",
                    "last_updated": "2025-01-07T22:59:11.836658+00:00",
                    "context": {
                      "id": "01JH1FWNAW7MJTVCT0SKVS21XN",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2025-01-08T03:00:00.091968+01:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T02:00:00.093171+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH1T7QAWBGH3PMCAVKY5PSBW",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "hassio",
                    "service": "addon_restart",
                    "service_data": {
                      "addon": "core_letsencrypt"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1732908024287",
            "alias": "Let's Encrypt renew",
            "description": "Renew Let's Encrypt certs",
            "triggers": [
              {
                "trigger": "time",
                "at": "03:00:00"
              }
            ],
            "conditions": [],
            "actions": [
              {
                "action": "hassio.addon_restart",
                "metadata": {},
                "data": {
                  "addon": "core_letsencrypt"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH1T7QAWBGH3PMCAVKY5PSBW",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "8bde2207e20766bdf8b14c9afa069d92",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T02:00:00.092460+00:00",
            "finish": "2025-01-08T02:00:01.171221+00:00"
          },
          "domain": "automation",
          "item_id": "1732908024287",
          "trigger": "time"
        }
      }
    ],
    "automation.wc_light_off_at_sunrise": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "afcb2254d0d1de62dec204e35e5615c4",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T06:29:00.068699+00:00",
            "finish": "2025-01-08T06:29:00.078810+00:00"
          },
          "domain": "automation",
          "item_id": "wc_light_off_at_sunrise",
          "trigger": "sunrise",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T06:29:00.068771+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.wc_light_off_at_sunrise",
                    "state": "on",
                    "attributes": {
                      "id": "wc_light_off_at_sunrise",
                      "last_triggered": "2025-01-07T06:29:19.153064+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "wc_light_off_at_sunrise"
                    },
                    "last_changed": "2025-01-07T22:59:11.835602+00:00",
                    "last_reported": "2025-01-07T22:59:11.835602+00:00",
                    "last_updated": "2025-01-07T22:59:11.835602+00:00",
                    "context": {
                      "id": "01JH1FWNAVCZC57DTPT1KXK1K1",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "sun",
                    "event": "sunrise",
                    "offset": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 0.0
                    },
                    "description": "sunrise"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T06:29:00.069290+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH29M914F5DBKQ64BDPVVYZT",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "switch",
                    "service": "turn_off",
                    "service_data": {
                      "entity_id": "switch.apb_q4"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "wc_light_off_at_sunrise",
            "alias": "wc_light_off_at_sunrise",
            "trigger": {
              "platform": "sun",
              "event": "sunrise",
              "offset": "+00:00:00"
            },
            "action": [
              {
                "data": {
                  "entity_id": "switch.apb_q4"
                },
                "action": "switch.turn_off"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH29M914F5DBKQ64BDPVVYZT",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "afcb2254d0d1de62dec204e35e5615c4",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T06:29:00.068699+00:00",
            "finish": "2025-01-08T06:29:00.078810+00:00"
          },
          "domain": "automation",
          "item_id": "wc_light_off_at_sunrise",
          "trigger": "sunrise"
        }
      }
    ],
    "automation.1735044244067": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "49659a315720a410adc05671bcecb773",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T07:00:00.291302+00:00",
            "finish": "2025-01-08T07:00:00.294902+00:00"
          },
          "domain": "automation",
          "item_id": "1735044244067",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T07:00:00.291376+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.fish_tank_pump_on",
                    "state": "on",
                    "attributes": {
                      "id": "1735044244067",
                      "last_triggered": "2025-01-07T07:00:00.493698+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Fish tank pump on"
                    },
                    "last_changed": "2025-01-07T22:59:11.837806+00:00",
                    "last_reported": "2025-01-07T22:59:11.837806+00:00",
                    "last_updated": "2025-01-07T22:59:11.837806+00:00",
                    "context": {
                      "id": "01JH1FWNAXG0F278YVK9P77GT1",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2025-01-08T08:00:00.290775+01:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T07:00:00.291438+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2025-01-08T07:00:00.291494+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T07:00:00.292953+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH2BD1N399A0GSBNZE9JSHBK",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "switch",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.hg01wt_switch1"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1735044244067",
            "alias": "Fish tank pump on",
            "description": "",
            "triggers": [
              {
                "trigger": "time",
                "at": "08:00:00"
              }
            ],
            "conditions": [
              {
                "condition": "state",
                "entity_id": "switch.hg01wt_switch1",
                "state": "off"
              }
            ],
            "actions": [
              {
                "action": "switch.turn_on",
                "metadata": {},
                "data": {},
                "target": {
                  "entity_id": "switch.hg01wt_switch1"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH2BD1N399A0GSBNZE9JSHBK",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "49659a315720a410adc05671bcecb773",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T07:00:00.291302+00:00",
            "finish": "2025-01-08T07:00:00.294902+00:00"
          },
          "domain": "automation",
          "item_id": "1735044244067",
          "trigger": "time"
        }
      }
    ],
    "automation.shed_light_off_at_sunrise": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "ceb79de614383d6411413c85b51e1658",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T08:29:00.069003+00:00",
            "finish": "2025-01-08T08:29:00.076069+00:00"
          },
          "domain": "automation",
          "item_id": "shed_light_off_at_sunrise",
          "trigger": "sunrise with offset",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T08:29:00.069083+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.shed_light_off_at_sunrise",
                    "state": "on",
                    "attributes": {
                      "id": "shed_light_off_at_sunrise",
                      "last_triggered": "2025-01-07T08:29:19.152509+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "shed_light_off_at_sunrise"
                    },
                    "last_changed": "2025-01-07T22:59:11.834182+00:00",
                    "last_reported": "2025-01-07T22:59:11.834182+00:00",
                    "last_updated": "2025-01-07T22:59:11.834182+00:00",
                    "context": {
                      "id": "01JH1FWNATC9YRAD4P0VR3FKAQ",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "sun",
                    "event": "sunrise",
                    "offset": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 7200.0
                    },
                    "description": "sunrise with offset"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T08:29:00.069465+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH2GG0946NXMQPQE1NQYSA4F",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {
                      "entity_id": "light.shed"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "shed_light_off_at_sunrise",
            "alias": "shed_light_off_at_sunrise",
            "trigger": {
              "platform": "sun",
              "event": "sunrise",
              "offset": "+02:00:00"
            },
            "action": [
              {
                "data": {
                  "entity_id": "light.shed"
                },
                "action": "light.turn_off"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH2GG0946NXMQPQE1NQYSA4F",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "ceb79de614383d6411413c85b51e1658",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T08:29:00.069003+00:00",
            "finish": "2025-01-08T08:29:00.076069+00:00"
          },
          "domain": "automation",
          "item_id": "shed_light_off_at_sunrise",
          "trigger": "sunrise with offset"
        }
      }
    ],
    "automation.1735044398182": [
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "b1d160ecc9487dbc551c3e7f7c0b4da6",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T12:00:00.171384+00:00",
            "finish": "2025-01-08T12:00:00.171568+00:00"
          },
          "domain": "automation",
          "item_id": "1735044398182",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T12:00:00.171435+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.fish_tank_pump_off",
                    "state": "on",
                    "attributes": {
                      "id": "1735044398182",
                      "last_triggered": "2025-01-07T12:00:00.400187+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Fish tank pump off"
                    },
                    "last_changed": "2025-01-07T22:59:11.838171+00:00",
                    "last_reported": "2025-01-07T22:59:11.838171+00:00",
                    "last_updated": "2025-01-07T22:59:11.838171+00:00",
                    "context": {
                      "id": "01JH1FWNAYAT2HZKZRAMN46G5F",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2025-01-08T13:00:00.171139+01:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T12:00:00.171472+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2025-01-08T12:00:00.171509+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1735044398182",
            "alias": "Fish tank pump off",
            "description": "",
            "triggers": [
              {
                "trigger": "time",
                "at": "13:00:00"
              }
            ],
            "conditions": [
              {
                "condition": "state",
                "entity_id": "switch.hg01wt_switch1",
                "state": "on"
              }
            ],
            "actions": [
              {
                "action": "switch.turn_off",
                "metadata": {},
                "data": {},
                "target": {
                  "entity_id": "switch.hg01wt_switch1"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH2WJBNBT4YJ8ASRMXNDCH4G",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "b1d160ecc9487dbc551c3e7f7c0b4da6",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-08T12:00:00.171384+00:00",
            "finish": "2025-01-08T12:00:00.171568+00:00"
          },
          "domain": "automation",
          "item_id": "1735044398182",
          "trigger": "time"
        }
      }
    ],
    "automation.shed_light_on_at_sunrise": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "fdc8524296db27ce265ef6da19d17b08",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T13:13:28.909775+00:00",
            "finish": "2025-01-08T13:13:28.911410+00:00"
          },
          "domain": "automation",
          "item_id": "shed_light_on_at_sunrise",
          "trigger": "sunset with offset",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T13:13:28.909844+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.shed_light_on_at_sunrise",
                    "state": "on",
                    "attributes": {
                      "id": "shed_light_on_at_sunrise",
                      "last_triggered": "2025-01-07T13:12:18.598159+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "shed_light_on_at_sunrise"
                    },
                    "last_changed": "2025-01-07T22:59:11.834575+00:00",
                    "last_reported": "2025-01-07T22:59:11.834575+00:00",
                    "last_updated": "2025-01-07T22:59:11.834575+00:00",
                    "context": {
                      "id": "01JH1FWNATT1Y2D9X83XGCMD8M",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "sun",
                    "event": "sunset",
                    "offset": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": -7200.0
                    },
                    "description": "sunset with offset"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T13:13:28.910226+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH30RX2DYQJKQ29SXP5NM9AQ",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_on",
                    "service_data": {
                      "entity_id": "light.shed"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "shed_light_on_at_sunrise",
            "alias": "shed_light_on_at_sunrise",
            "trigger": {
              "platform": "sun",
              "event": "sunset",
              "offset": "-02:00:00"
            },
            "action": [
              {
                "data": {
                  "entity_id": "light.shed"
                },
                "action": "light.turn_on"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH30RX2DYQJKQ29SXP5NM9AQ",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "fdc8524296db27ce265ef6da19d17b08",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T13:13:28.909775+00:00",
            "finish": "2025-01-08T13:13:28.911410+00:00"
          },
          "domain": "automation",
          "item_id": "shed_light_on_at_sunrise",
          "trigger": "sunset with offset"
        }
      }
    ],
    "automation.wc_light_on_at_sunrise": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "1757a40fb28baf55fbf084f588df1ee9",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T15:13:28.909634+00:00",
            "finish": "2025-01-08T15:13:28.916513+00:00"
          },
          "domain": "automation",
          "item_id": "wc_light_on_at_sunrise",
          "trigger": "sunset",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T15:13:28.909689+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.wc_light_on_at_sunrise",
                    "state": "on",
                    "attributes": {
                      "id": "wc_light_on_at_sunrise",
                      "last_triggered": "2025-01-07T15:12:18.598748+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "wc_light_on_at_sunrise"
                    },
                    "last_changed": "2025-01-07T22:59:11.836162+00:00",
                    "last_reported": "2025-01-07T22:59:11.836162+00:00",
                    "last_updated": "2025-01-07T22:59:11.836162+00:00",
                    "context": {
                      "id": "01JH1FWNAWRP3Z8ZB2E9GDVH2B",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "sun",
                    "event": "sunset",
                    "offset": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 0.0
                    },
                    "description": "sunset"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T15:13:28.909999+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH37MMADRSVNP6N7K1P8EDBT",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "switch",
                    "service": "turn_on",
                    "service_data": {
                      "entity_id": "switch.apb_q4"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "wc_light_on_at_sunrise",
            "alias": "wc_light_on_at_sunrise",
            "trigger": {
              "platform": "sun",
              "event": "sunset",
              "offset": "+00:00:00"
            },
            "action": [
              {
                "data": {
                  "entity_id": "switch.apb_q4"
                },
                "action": "switch.turn_on"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH37MMADRSVNP6N7K1P8EDBT",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "1757a40fb28baf55fbf084f588df1ee9",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T15:13:28.909634+00:00",
            "finish": "2025-01-08T15:13:28.916513+00:00"
          },
          "domain": "automation",
          "item_id": "wc_light_on_at_sunrise",
          "trigger": "sunset"
        }
      }
    ],
    "automation.pufi_mode_changed": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "00d0737aaf33dc85ca5b055a43f0915d",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T21:58:37.444295+00:00",
            "finish": "2025-01-08T21:58:37.449736+00:00"
          },
          "domain": "automation",
          "item_id": "pufi_mode_changed",
          "trigger": "state of fan.pufi",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T21:58:37.444349+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.pufi_mode_changed",
                    "state": "on",
                    "attributes": {
                      "id": "pufi_mode_changed",
                      "last_triggered": "2025-01-05T11:03:44.024546+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Pufi mode changed"
                    },
                    "last_changed": "2025-01-07T22:59:11.833204+00:00",
                    "last_reported": "2025-01-07T22:59:11.833204+00:00",
                    "last_updated": "2025-01-07T22:59:11.833204+00:00",
                    "context": {
                      "id": "01JH1FWNASM4NJ3P0TV8V7QSZD",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "fan.pufi",
                    "from_state": {
                      "entity_id": "fan.pufi",
                      "state": "unavailable",
                      "attributes": {
                        "restored": true,
                        "preset_modes": [
                          "Auto",
                          "Silent",
                          "Favorite"
                        ],
                        "supported_features": 56
                      },
                      "last_changed": "2025-01-07T22:59:16.499914+00:00",
                      "last_reported": "2025-01-07T22:59:16.499914+00:00",
                      "last_updated": "2025-01-07T22:59:16.499914+00:00",
                      "context": {
                        "id": "01JH1FWSWK4XM7BP41HNDVQ4JQ",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "fan.pufi",
                      "state": "on",
                      "attributes": {
                        "preset_modes": [
                          "Auto",
                          "Silent",
                          "Favorite"
                        ],
                        "preset_mode": "Auto",
                        "extra_features": 0,
                        "turbo_mode_supported": false,
                        "button_pressed": "power",
                        "friendly_name": "Pufi",
                        "supported_features": 56
                      },
                      "last_changed": "2025-01-08T21:58:37.435497+00:00",
                      "last_reported": "2025-01-08T21:58:52.633606+00:00",
                      "last_updated": "2025-01-08T21:58:37.435497+00:00",
                      "context": {
                        "id": "01JH3YTF3V52EN5C542ZTD0FKD",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": "preset_mode",
                    "description": "state of fan.pufi"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T21:58:37.444461+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "fan.pufi"
                  ]
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T21:58:37.444998+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH3YTF44S4CPS9JC96VH4G3J",
                    "parent_id": "01JH3YTF3V52EN5C542ZTD0FKD",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_select",
                    "service": "select_option",
                    "service_data": {
                      "option": "Auto",
                      "entity_id": [
                        "input_select.pufi_mode"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "input_select.pufi_mode"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "pufi_mode_changed",
            "alias": "Pufi mode changed",
            "trigger": {
              "platform": "state",
              "entity_id": "fan.pufi",
              "attribute": "preset_mode"
            },
            "condition": "{{ trigger.to_state.attributes.preset_mode in state_attr('fan.pufi', 'preset_modes') }}",
            "action": {
              "entity_id": "input_select.pufi_mode",
              "data_template": {
                "option": "{{ state_attr('fan.pufi', 'preset_mode') }}"
              },
              "action": "input_select.select_option"
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH3YTF44S4CPS9JC96VH4G3J",
            "parent_id": "01JH3YTF3V52EN5C542ZTD0FKD",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "00d0737aaf33dc85ca5b055a43f0915d",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T21:58:37.444295+00:00",
            "finish": "2025-01-08T21:58:37.449736+00:00"
          },
          "domain": "automation",
          "item_id": "pufi_mode_changed",
          "trigger": "state of fan.pufi"
        }
      }
    ],
    "automation.1733774848048": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "b64c06168565bd26974eb22374d2d4f9",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T21:58:37.449935+00:00",
            "finish": "2025-01-08T21:58:37.464574+00:00"
          },
          "domain": "automation",
          "item_id": "1733774848048",
          "trigger": "numeric state of sensor.pufi_pm2_5",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T21:58:37.449984+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.pufi_childlock",
                    "state": "on",
                    "attributes": {
                      "id": "1733774848048",
                      "last_triggered": "2025-01-06T06:15:54.606118+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "pufi_childlock"
                    },
                    "last_changed": "2025-01-07T22:59:11.837476+00:00",
                    "last_reported": "2025-01-07T22:59:11.837476+00:00",
                    "last_updated": "2025-01-07T22:59:11.837476+00:00",
                    "context": {
                      "id": "01JH1FWNAXGNHHD82ZNJJ565WP",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "device",
                    "entity_id": "sensor.pufi_pm2_5",
                    "below": null,
                    "above": 0.0,
                    "from_state": {
                      "entity_id": "sensor.pufi_pm2_5",
                      "state": "unavailable",
                      "attributes": {
                        "restored": true,
                        "state_class": "measurement",
                        "device_class": "pm25",
                        "friendly_name": "PM2.5",
                        "supported_features": 0,
                        "unit_of_measurement": "\u00b5g/m\u00b3"
                      },
                      "last_changed": "2025-01-07T22:59:16.503733+00:00",
                      "last_reported": "2025-01-07T22:59:16.503733+00:00",
                      "last_updated": "2025-01-07T22:59:16.503733+00:00",
                      "context": {
                        "id": "01JH1FWSWQ5DGJ5WG1ET55JJT5",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.pufi_pm2_5",
                      "state": "5",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "\u00b5g/m\u00b3",
                        "device_class": "pm25",
                        "friendly_name": "Leveg\u0151min\u0151s\u00e9g"
                      },
                      "last_changed": "2025-01-08T21:58:37.441566+00:00",
                      "last_reported": "2025-01-08T21:58:37.441566+00:00",
                      "last_updated": "2025-01-08T21:58:37.441566+00:00",
                      "context": {
                        "id": "01JH3YTF41H4HYEZEJ5ACDVCBN",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "description": "numeric state of sensor.pufi_pm2_5"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T21:58:37.450023+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T21:58:37.450047+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2025-01-08T21:58:37.450072+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T21:58:37.450362+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH3YTF49EMENERGT6WB0V056",
                    "parent_id": "01JH3YTF41H4HYEZEJ5ACDVCBN",
                    "user_id": null
                  }
                }
              }
            ]
          },
          "config": {
            "id": "1733774848048",
            "alias": "pufi_childlock",
            "description": "Force child lock on",
            "triggers": [
              {
                "type": "pm25",
                "device_id": "38a9cf36a11b41fb1399bfd5227c8578",
                "entity_id": "453dd8ac556a75ec8539ad2c802ad375",
                "domain": "sensor",
                "trigger": "device",
                "above": 0
              }
            ],
            "conditions": [
              {
                "condition": "device",
                "type": "is_off",
                "device_id": "38a9cf36a11b41fb1399bfd5227c8578",
                "entity_id": "293da9e352721c087a4f2a54fe9ccb94",
                "domain": "switch"
              }
            ],
            "actions": [
              {
                "type": "turn_on",
                "device_id": "38a9cf36a11b41fb1399bfd5227c8578",
                "entity_id": "293da9e352721c087a4f2a54fe9ccb94",
                "domain": "switch"
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH3YTF49EMENERGT6WB0V056",
            "parent_id": "01JH3YTF41H4HYEZEJ5ACDVCBN",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "b64c06168565bd26974eb22374d2d4f9",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T21:58:37.449935+00:00",
            "finish": "2025-01-08T21:58:37.464574+00:00"
          },
          "domain": "automation",
          "item_id": "1733774848048",
          "trigger": "numeric state of sensor.pufi_pm2_5"
        }
      }
    ]
  }
}