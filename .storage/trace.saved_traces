{
  "version": 1,
  "minor_version": 1,
  "key": "trace.saved_traces",
  "data": {
    "automation.ac_thermostat_relay_init": [
      {
        "extended_dict": {
          "last_step": "action/5",
          "run_id": "9dc40731649f7c47598b3eee18cdb9fa",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:43:40.172136+00:00",
            "finish": "2025-01-09T00:43:40.188593+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2025-01-09T00:43:40.172433+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay_init",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay_init",
                      "last_triggered": "2025-01-09T00:43:35.173648+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (peri\u00f3dikus)",
                      "icon": "mdi:thermostat-auto"
                    },
                    "last_changed": "2025-01-09T00:04:43.602751+00:00",
                    "last_reported": "2025-01-09T00:43:35.194558+00:00",
                    "last_updated": "2025-01-09T00:43:35.194558+00:00",
                    "context": {
                      "id": "01JH488GW5RH02GK49S9XJ15XM",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-09T01:43:40.171877+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-09T00:43:40.172812+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "de0305110476331ef6e23261a3596c01"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH488NRCGBGHEQYB3NTRJKBE",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_study",
                      "switch_entity_id": "switch.ac_relay_study"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-09T00:43:40.175468+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "2dbe052e36b4305ab272b2f2c7bec9bd"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_bedroom",
                      "switch_entity_id": "switch.ac_relay_bedroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-09T00:43:40.178953+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "7218ddc419f5f688b806281f413c06aa"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childa",
                      "switch_entity_id": "switch.ac_relay_childa"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2025-01-09T00:43:40.181064+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "acd704a9ebc93c3261d071e4ad5567fd"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childb",
                      "switch_entity_id": "switch.ac_relay_childb"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2025-01-09T00:43:40.182955+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "2e36e857324d47202a01ffda9298cc76"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_kitchen",
                      "switch_entity_id": "switch.ac_relay_kitchen"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2025-01-09T00:43:40.186419+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "6cd25783bcf46fcc6f5c42073ce2fc66"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_livingroom",
                      "switch_entity_id": "switch.ac_relay_livingroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay_init",
            "alias": "ac_thermostat_relay_init",
            "initial_state": true,
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "time_pattern",
                "seconds": "/5"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "climate.t_study",
                  "switch_entity_id": "switch.ac_relay_study"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_bedroom",
                  "switch_entity_id": "switch.ac_relay_bedroom"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childa",
                  "switch_entity_id": "switch.ac_relay_childa"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childb",
                  "switch_entity_id": "switch.ac_relay_childb"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_kitchen",
                  "switch_entity_id": "switch.ac_relay_kitchen"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_livingroom",
                  "switch_entity_id": "switch.ac_relay_livingroom"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH488NRCGBGHEQYB3NTRJKBE",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/5",
          "run_id": "9dc40731649f7c47598b3eee18cdb9fa",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:43:40.172136+00:00",
            "finish": "2025-01-09T00:43:40.188593+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/5",
          "run_id": "e75aff612371ac3fc8c8e8b907b8e22e",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:43:45.200154+00:00",
            "finish": "2025-01-09T00:43:45.209622+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2025-01-09T00:43:45.200285+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay_init",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay_init",
                      "last_triggered": "2025-01-09T00:43:40.172552+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (peri\u00f3dikus)",
                      "icon": "mdi:thermostat-auto"
                    },
                    "last_changed": "2025-01-09T00:04:43.602751+00:00",
                    "last_reported": "2025-01-09T00:43:40.188481+00:00",
                    "last_updated": "2025-01-09T00:43:40.188481+00:00",
                    "context": {
                      "id": "01JH488NRCGBGHEQYB3NTRJKBE",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-09T01:43:45.200038+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-09T00:43:45.200540+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "773de85f640ce30d0d3e3cd699f2e5d0"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH488TNG6V3FS3RDTA78CNZY",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_study",
                      "switch_entity_id": "switch.ac_relay_study"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-09T00:43:45.202017+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "590f6976fc693e4bb70ba4462055704e"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_bedroom",
                      "switch_entity_id": "switch.ac_relay_bedroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-09T00:43:45.203275+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "25a967c0c705f1f103885dd91ad14f4e"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childa",
                      "switch_entity_id": "switch.ac_relay_childa"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2025-01-09T00:43:45.204461+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "8a3afc2ce90a924756a856909e945413"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childb",
                      "switch_entity_id": "switch.ac_relay_childb"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2025-01-09T00:43:45.206647+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "0fc665d9b864f88ce947db65724814a3"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_kitchen",
                      "switch_entity_id": "switch.ac_relay_kitchen"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2025-01-09T00:43:45.208333+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "1f76bccd9a0146de3151f80a2a93908f"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_livingroom",
                      "switch_entity_id": "switch.ac_relay_livingroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay_init",
            "alias": "ac_thermostat_relay_init",
            "initial_state": true,
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "time_pattern",
                "seconds": "/5"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "climate.t_study",
                  "switch_entity_id": "switch.ac_relay_study"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_bedroom",
                  "switch_entity_id": "switch.ac_relay_bedroom"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childa",
                  "switch_entity_id": "switch.ac_relay_childa"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childb",
                  "switch_entity_id": "switch.ac_relay_childb"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_kitchen",
                  "switch_entity_id": "switch.ac_relay_kitchen"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_livingroom",
                  "switch_entity_id": "switch.ac_relay_livingroom"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH488TNG6V3FS3RDTA78CNZY",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/5",
          "run_id": "e75aff612371ac3fc8c8e8b907b8e22e",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:43:45.200154+00:00",
            "finish": "2025-01-09T00:43:45.209622+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/5",
          "run_id": "43cf913b4e5ca4f33d8a2aedaeee29df",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:43:50.172116+00:00",
            "finish": "2025-01-09T00:43:50.183275+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2025-01-09T00:43:50.172366+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay_init",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay_init",
                      "last_triggered": "2025-01-09T00:43:45.200359+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (peri\u00f3dikus)",
                      "icon": "mdi:thermostat-auto"
                    },
                    "last_changed": "2025-01-09T00:04:43.602751+00:00",
                    "last_reported": "2025-01-09T00:43:45.209556+00:00",
                    "last_updated": "2025-01-09T00:43:45.209556+00:00",
                    "context": {
                      "id": "01JH488TNG6V3FS3RDTA78CNZY",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-09T01:43:50.171914+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-09T00:43:50.172809+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "378690f7acda9ab739f8d6e8316e90b3"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH488ZGWHNGGYCR6A18N6YZT",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_study",
                      "switch_entity_id": "switch.ac_relay_study"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-09T00:43:50.174978+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "cb17332c8e20b8d166f895a72e83d6c8"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_bedroom",
                      "switch_entity_id": "switch.ac_relay_bedroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-09T00:43:50.176488+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "72536f8abdf9f164a116e984521b1cb9"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childa",
                      "switch_entity_id": "switch.ac_relay_childa"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2025-01-09T00:43:50.177869+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "9f0590762b0f429ff3bc91a6e7698d3a"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childb",
                      "switch_entity_id": "switch.ac_relay_childb"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2025-01-09T00:43:50.180344+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "99c9991db75eee420d3cb9ffc9896d7b"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_kitchen",
                      "switch_entity_id": "switch.ac_relay_kitchen"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2025-01-09T00:43:50.181757+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "8996a4e8aafc588b0b2fd8bfbd74d77c"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_livingroom",
                      "switch_entity_id": "switch.ac_relay_livingroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay_init",
            "alias": "ac_thermostat_relay_init",
            "initial_state": true,
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "time_pattern",
                "seconds": "/5"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "climate.t_study",
                  "switch_entity_id": "switch.ac_relay_study"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_bedroom",
                  "switch_entity_id": "switch.ac_relay_bedroom"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childa",
                  "switch_entity_id": "switch.ac_relay_childa"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childb",
                  "switch_entity_id": "switch.ac_relay_childb"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_kitchen",
                  "switch_entity_id": "switch.ac_relay_kitchen"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_livingroom",
                  "switch_entity_id": "switch.ac_relay_livingroom"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH488ZGWHNGGYCR6A18N6YZT",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/5",
          "run_id": "43cf913b4e5ca4f33d8a2aedaeee29df",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:43:50.172116+00:00",
            "finish": "2025-01-09T00:43:50.183275+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/5",
          "run_id": "fa4edfa1ab806f640cbf4244d74f6ae0",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:43:55.172748+00:00",
            "finish": "2025-01-09T00:43:55.190566+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2025-01-09T00:43:55.172943+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay_init",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay_init",
                      "last_triggered": "2025-01-09T00:43:50.172480+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (peri\u00f3dikus)",
                      "icon": "mdi:thermostat-auto"
                    },
                    "last_changed": "2025-01-09T00:04:43.602751+00:00",
                    "last_reported": "2025-01-09T00:43:50.183078+00:00",
                    "last_updated": "2025-01-09T00:43:50.183078+00:00",
                    "context": {
                      "id": "01JH488ZGWHNGGYCR6A18N6YZT",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-09T01:43:55.172342+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-09T00:43:55.173450+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "31832dd91d6732d4897f9db11b526d9f"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH4894D4GRMW658PWA9FXDZE",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_study",
                      "switch_entity_id": "switch.ac_relay_study"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-09T00:43:55.176316+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "15bee0391cf67d3abe07f20b51c3d40e"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_bedroom",
                      "switch_entity_id": "switch.ac_relay_bedroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-09T00:43:55.179739+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "ebbcfd254712140c0a6b362969eeadd2"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childa",
                      "switch_entity_id": "switch.ac_relay_childa"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2025-01-09T00:43:55.182305+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "d42e2a039b8f5b66a4dd793015a5378e"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childb",
                      "switch_entity_id": "switch.ac_relay_childb"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2025-01-09T00:43:55.184452+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "ee3ba58fd3cb64348ae443a331f199af"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_kitchen",
                      "switch_entity_id": "switch.ac_relay_kitchen"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2025-01-09T00:43:55.188126+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "53e97db32e258f1965b7b7f45fb206c5"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_livingroom",
                      "switch_entity_id": "switch.ac_relay_livingroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay_init",
            "alias": "ac_thermostat_relay_init",
            "initial_state": true,
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "time_pattern",
                "seconds": "/5"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "climate.t_study",
                  "switch_entity_id": "switch.ac_relay_study"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_bedroom",
                  "switch_entity_id": "switch.ac_relay_bedroom"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childa",
                  "switch_entity_id": "switch.ac_relay_childa"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childb",
                  "switch_entity_id": "switch.ac_relay_childb"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_kitchen",
                  "switch_entity_id": "switch.ac_relay_kitchen"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_livingroom",
                  "switch_entity_id": "switch.ac_relay_livingroom"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH4894D4GRMW658PWA9FXDZE",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/5",
          "run_id": "fa4edfa1ab806f640cbf4244d74f6ae0",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:43:55.172748+00:00",
            "finish": "2025-01-09T00:43:55.190566+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/5",
          "run_id": "7a2db37c703a2bb46519f26f5198a615",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:44:00.172630+00:00",
            "finish": "2025-01-09T00:44:00.189764+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2025-01-09T00:44:00.172765+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay_init",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay_init",
                      "last_triggered": "2025-01-09T00:43:55.173056+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (peri\u00f3dikus)",
                      "icon": "mdi:thermostat-auto"
                    },
                    "last_changed": "2025-01-09T00:04:43.602751+00:00",
                    "last_reported": "2025-01-09T00:43:55.190395+00:00",
                    "last_updated": "2025-01-09T00:43:55.190395+00:00",
                    "context": {
                      "id": "01JH4894D4GRMW658PWA9FXDZE",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-09T01:44:00.172379+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-09T00:44:00.173406+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "b14ae6c1d0bff3a90980947e2865ea49"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH48999CQ3TBD38E9PCPAX6W",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_study",
                      "switch_entity_id": "switch.ac_relay_study"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-09T00:44:00.175817+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "381562e1591ad16c127750fa4ff4b87d"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_bedroom",
                      "switch_entity_id": "switch.ac_relay_bedroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-09T00:44:00.179337+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "10114a339c71740f2d80ac3742ab5604"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childa",
                      "switch_entity_id": "switch.ac_relay_childa"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2025-01-09T00:44:00.181575+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "c8cd2c70f0c8fb181c72328eb1c864aa"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_childb",
                      "switch_entity_id": "switch.ac_relay_childb"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2025-01-09T00:44:00.184778+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "7282a9855a1ac45ab1d4a293df0288bf"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_kitchen",
                      "switch_entity_id": "switch.ac_relay_kitchen"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2025-01-09T00:44:00.187276+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "ed9e1e975c1b6eac22f9d4ad7e527369"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_livingroom",
                      "switch_entity_id": "switch.ac_relay_livingroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay_init",
            "alias": "ac_thermostat_relay_init",
            "initial_state": true,
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "time_pattern",
                "seconds": "/5"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "climate.t_study",
                  "switch_entity_id": "switch.ac_relay_study"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_bedroom",
                  "switch_entity_id": "switch.ac_relay_bedroom"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childa",
                  "switch_entity_id": "switch.ac_relay_childa"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_childb",
                  "switch_entity_id": "switch.ac_relay_childb"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_kitchen",
                  "switch_entity_id": "switch.ac_relay_kitchen"
                },
                "action": "script.turn_switch_by_climate"
              },
              {
                "data_template": {
                  "climate_entity_id": "climate.t_livingroom",
                  "switch_entity_id": "switch.ac_relay_livingroom"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH48999CQ3TBD38E9PCPAX6W",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/5",
          "run_id": "7a2db37c703a2bb46519f26f5198a615",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:44:00.172630+00:00",
            "finish": "2025-01-09T00:44:00.189764+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay_init",
          "trigger": "time pattern"
        }
      }
    ],
    "script.turn_switch_by_climate": [
      {
        "extended_dict": {
          "last_step": "sequence/0",
          "run_id": "381562e1591ad16c127750fa4ff4b87d",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-09T00:44:00.176149+00:00",
            "finish": "2025-01-09T00:44:00.179150+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate",
          "trace": {
            "sequence/0": [
              {
                "path": "sequence/0",
                "timestamp": "2025-01-09T00:44:00.177037+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "script.turn_switch_by_climate",
                    "state": "off",
                    "attributes": {
                      "last_triggered": "2025-01-09T00:44:00.174500+00:00",
                      "mode": "single",
                      "current": 0,
                      "icon": "mdi:switch",
                      "friendly_name": "turn_switch_by_climate"
                    },
                    "last_changed": "2025-01-09T00:44:00.175491+00:00",
                    "last_reported": "2025-01-09T00:44:00.175491+00:00",
                    "last_updated": "2025-01-09T00:44:00.175491+00:00",
                    "context": {
                      "id": "01JH48999CQ3TBD38E9PCPAX6W",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "climate_entity_id": "climate.t_bedroom",
                  "switch_entity_id": "switch.ac_relay_bedroom",
                  "hvac_mode": "heating",
                  "preferred_switch_state": "on",
                  "context": {
                    "id": "01JH48999CQ3TBD38E9PCPAX6W",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "result": false,
                  "entities": [
                    "switch.ac_relay_bedroom"
                  ]
                }
              }
            ]
          },
          "config": {
            "alias": "turn_switch_by_climate",
            "icon": "mdi:switch",
            "description": "Turn valves on/off depending of a climate's hvac_action.",
            "fields": {
              "climate_entity_id": {
                "description": "Entity ID of climate to read hvac_action.",
                "example": "climate.t_livingroom"
              },
              "switch_entity_id": {
                "description": "Entity ID of switch to turn on/off.",
                "example": "switch.ac_relay_livingroom"
              }
            },
            "variables": {
              "hvac_mode": "{{ state_attr(climate_entity_id, 'hvac_action') if states(climate_entity_id) in ['heat', 'cool', 'heat_cool'] else states(climate_entity_id) }}",
              "preferred_switch_state": "{{ 'off' if hvac_mode in ['idle', 'off', 'unavailable'] else 'on' }}"
            },
            "sequence": [
              {
                "condition": "template",
                "value_template": "{{ states(switch_entity_id) !=  preferred_switch_state }}"
              },
              {
                "condition": "template",
                "value_template": "{{ ( as_timestamp(now()) - as_timestamp(state_attr('saver.saver', 'variables')[switch_entity_id + '_last_switch']|default('0')) | default(0, 'None') ) | int >= 20 }}"
              },
              {
                "data": {
                  "level": "info",
                  "message": "[{{ climate_entity_id }} / {{ switch_entity_id }}]: {{ states(switch_entity_id) }} -> {{ preferred_switch_state }} ({{ hvac_mode }})"
                },
                "action": "system_log.write"
              },
              {
                "service_template": "switch.turn_{{ preferred_switch_state }}",
                "data": {
                  "entity_id": "{{ switch_entity_id }}"
                }
              },
              {
                "data": {
                  "name": "{{ switch_entity_id }}_last_switch",
                  "value": "{{ now() }}"
                },
                "action": "saver.set_variable"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH48999CQ3TBD38E9PCPAX6W",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "sequence/0",
          "run_id": "381562e1591ad16c127750fa4ff4b87d",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-09T00:44:00.176149+00:00",
            "finish": "2025-01-09T00:44:00.179150+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate"
        }
      },
      {
        "extended_dict": {
          "last_step": "sequence/0",
          "run_id": "10114a339c71740f2d80ac3742ab5604",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-09T00:44:00.179636+00:00",
            "finish": "2025-01-09T00:44:00.181443+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate",
          "trace": {
            "sequence/0": [
              {
                "path": "sequence/0",
                "timestamp": "2025-01-09T00:44:00.180659+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "script.turn_switch_by_climate",
                    "state": "off",
                    "attributes": {
                      "last_triggered": "2025-01-09T00:44:00.176752+00:00",
                      "mode": "single",
                      "current": 0,
                      "icon": "mdi:switch",
                      "friendly_name": "turn_switch_by_climate"
                    },
                    "last_changed": "2025-01-09T00:44:00.178827+00:00",
                    "last_reported": "2025-01-09T00:44:00.178827+00:00",
                    "last_updated": "2025-01-09T00:44:00.178827+00:00",
                    "context": {
                      "id": "01JH48999CQ3TBD38E9PCPAX6W",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "climate_entity_id": "climate.t_childa",
                  "switch_entity_id": "switch.ac_relay_childa",
                  "hvac_mode": "idle",
                  "preferred_switch_state": "off",
                  "context": {
                    "id": "01JH48999CQ3TBD38E9PCPAX6W",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "result": false,
                  "entities": [
                    "switch.ac_relay_childa"
                  ]
                }
              }
            ]
          },
          "config": {
            "alias": "turn_switch_by_climate",
            "icon": "mdi:switch",
            "description": "Turn valves on/off depending of a climate's hvac_action.",
            "fields": {
              "climate_entity_id": {
                "description": "Entity ID of climate to read hvac_action.",
                "example": "climate.t_livingroom"
              },
              "switch_entity_id": {
                "description": "Entity ID of switch to turn on/off.",
                "example": "switch.ac_relay_livingroom"
              }
            },
            "variables": {
              "hvac_mode": "{{ state_attr(climate_entity_id, 'hvac_action') if states(climate_entity_id) in ['heat', 'cool', 'heat_cool'] else states(climate_entity_id) }}",
              "preferred_switch_state": "{{ 'off' if hvac_mode in ['idle', 'off', 'unavailable'] else 'on' }}"
            },
            "sequence": [
              {
                "condition": "template",
                "value_template": "{{ states(switch_entity_id) !=  preferred_switch_state }}"
              },
              {
                "condition": "template",
                "value_template": "{{ ( as_timestamp(now()) - as_timestamp(state_attr('saver.saver', 'variables')[switch_entity_id + '_last_switch']|default('0')) | default(0, 'None') ) | int >= 20 }}"
              },
              {
                "data": {
                  "level": "info",
                  "message": "[{{ climate_entity_id }} / {{ switch_entity_id }}]: {{ states(switch_entity_id) }} -> {{ preferred_switch_state }} ({{ hvac_mode }})"
                },
                "action": "system_log.write"
              },
              {
                "service_template": "switch.turn_{{ preferred_switch_state }}",
                "data": {
                  "entity_id": "{{ switch_entity_id }}"
                }
              },
              {
                "data": {
                  "name": "{{ switch_entity_id }}_last_switch",
                  "value": "{{ now() }}"
                },
                "action": "saver.set_variable"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH48999CQ3TBD38E9PCPAX6W",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "sequence/0",
          "run_id": "10114a339c71740f2d80ac3742ab5604",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-09T00:44:00.179636+00:00",
            "finish": "2025-01-09T00:44:00.181443+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate"
        }
      },
      {
        "extended_dict": {
          "last_step": "sequence/0",
          "run_id": "c8cd2c70f0c8fb181c72328eb1c864aa",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-09T00:44:00.181835+00:00",
            "finish": "2025-01-09T00:44:00.184597+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate",
          "trace": {
            "sequence/0": [
              {
                "path": "sequence/0",
                "timestamp": "2025-01-09T00:44:00.182787+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "script.turn_switch_by_climate",
                    "state": "off",
                    "attributes": {
                      "last_triggered": "2025-01-09T00:44:00.180351+00:00",
                      "mode": "single",
                      "current": 0,
                      "icon": "mdi:switch",
                      "friendly_name": "turn_switch_by_climate"
                    },
                    "last_changed": "2025-01-09T00:44:00.181259+00:00",
                    "last_reported": "2025-01-09T00:44:00.181259+00:00",
                    "last_updated": "2025-01-09T00:44:00.181259+00:00",
                    "context": {
                      "id": "01JH48999CQ3TBD38E9PCPAX6W",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "climate_entity_id": "climate.t_childb",
                  "switch_entity_id": "switch.ac_relay_childb",
                  "hvac_mode": "idle",
                  "preferred_switch_state": "off",
                  "context": {
                    "id": "01JH48999CQ3TBD38E9PCPAX6W",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "result": false,
                  "entities": [
                    "switch.ac_relay_childb"
                  ]
                }
              }
            ]
          },
          "config": {
            "alias": "turn_switch_by_climate",
            "icon": "mdi:switch",
            "description": "Turn valves on/off depending of a climate's hvac_action.",
            "fields": {
              "climate_entity_id": {
                "description": "Entity ID of climate to read hvac_action.",
                "example": "climate.t_livingroom"
              },
              "switch_entity_id": {
                "description": "Entity ID of switch to turn on/off.",
                "example": "switch.ac_relay_livingroom"
              }
            },
            "variables": {
              "hvac_mode": "{{ state_attr(climate_entity_id, 'hvac_action') if states(climate_entity_id) in ['heat', 'cool', 'heat_cool'] else states(climate_entity_id) }}",
              "preferred_switch_state": "{{ 'off' if hvac_mode in ['idle', 'off', 'unavailable'] else 'on' }}"
            },
            "sequence": [
              {
                "condition": "template",
                "value_template": "{{ states(switch_entity_id) !=  preferred_switch_state }}"
              },
              {
                "condition": "template",
                "value_template": "{{ ( as_timestamp(now()) - as_timestamp(state_attr('saver.saver', 'variables')[switch_entity_id + '_last_switch']|default('0')) | default(0, 'None') ) | int >= 20 }}"
              },
              {
                "data": {
                  "level": "info",
                  "message": "[{{ climate_entity_id }} / {{ switch_entity_id }}]: {{ states(switch_entity_id) }} -> {{ preferred_switch_state }} ({{ hvac_mode }})"
                },
                "action": "system_log.write"
              },
              {
                "service_template": "switch.turn_{{ preferred_switch_state }}",
                "data": {
                  "entity_id": "{{ switch_entity_id }}"
                }
              },
              {
                "data": {
                  "name": "{{ switch_entity_id }}_last_switch",
                  "value": "{{ now() }}"
                },
                "action": "saver.set_variable"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH48999CQ3TBD38E9PCPAX6W",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "sequence/0",
          "run_id": "c8cd2c70f0c8fb181c72328eb1c864aa",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-09T00:44:00.181835+00:00",
            "finish": "2025-01-09T00:44:00.184597+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate"
        }
      },
      {
        "extended_dict": {
          "last_step": "sequence/0",
          "run_id": "7282a9855a1ac45ab1d4a293df0288bf",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-09T00:44:00.185234+00:00",
            "finish": "2025-01-09T00:44:00.187050+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate",
          "trace": {
            "sequence/0": [
              {
                "path": "sequence/0",
                "timestamp": "2025-01-09T00:44:00.186325+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "script.turn_switch_by_climate",
                    "state": "off",
                    "attributes": {
                      "last_triggered": "2025-01-09T00:44:00.182492+00:00",
                      "mode": "single",
                      "current": 0,
                      "icon": "mdi:switch",
                      "friendly_name": "turn_switch_by_climate"
                    },
                    "last_changed": "2025-01-09T00:44:00.183378+00:00",
                    "last_reported": "2025-01-09T00:44:00.183378+00:00",
                    "last_updated": "2025-01-09T00:44:00.183378+00:00",
                    "context": {
                      "id": "01JH48999CQ3TBD38E9PCPAX6W",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "climate_entity_id": "climate.t_kitchen",
                  "switch_entity_id": "switch.ac_relay_kitchen",
                  "hvac_mode": "heat",
                  "preferred_switch_state": "on",
                  "context": {
                    "id": "01JH48999CQ3TBD38E9PCPAX6W",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "result": false,
                  "entities": [
                    "switch.ac_relay_kitchen"
                  ]
                }
              }
            ]
          },
          "config": {
            "alias": "turn_switch_by_climate",
            "icon": "mdi:switch",
            "description": "Turn valves on/off depending of a climate's hvac_action.",
            "fields": {
              "climate_entity_id": {
                "description": "Entity ID of climate to read hvac_action.",
                "example": "climate.t_livingroom"
              },
              "switch_entity_id": {
                "description": "Entity ID of switch to turn on/off.",
                "example": "switch.ac_relay_livingroom"
              }
            },
            "variables": {
              "hvac_mode": "{{ state_attr(climate_entity_id, 'hvac_action') if states(climate_entity_id) in ['heat', 'cool', 'heat_cool'] else states(climate_entity_id) }}",
              "preferred_switch_state": "{{ 'off' if hvac_mode in ['idle', 'off', 'unavailable'] else 'on' }}"
            },
            "sequence": [
              {
                "condition": "template",
                "value_template": "{{ states(switch_entity_id) !=  preferred_switch_state }}"
              },
              {
                "condition": "template",
                "value_template": "{{ ( as_timestamp(now()) - as_timestamp(state_attr('saver.saver', 'variables')[switch_entity_id + '_last_switch']|default('0')) | default(0, 'None') ) | int >= 20 }}"
              },
              {
                "data": {
                  "level": "info",
                  "message": "[{{ climate_entity_id }} / {{ switch_entity_id }}]: {{ states(switch_entity_id) }} -> {{ preferred_switch_state }} ({{ hvac_mode }})"
                },
                "action": "system_log.write"
              },
              {
                "service_template": "switch.turn_{{ preferred_switch_state }}",
                "data": {
                  "entity_id": "{{ switch_entity_id }}"
                }
              },
              {
                "data": {
                  "name": "{{ switch_entity_id }}_last_switch",
                  "value": "{{ now() }}"
                },
                "action": "saver.set_variable"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH48999CQ3TBD38E9PCPAX6W",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "sequence/0",
          "run_id": "7282a9855a1ac45ab1d4a293df0288bf",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-09T00:44:00.185234+00:00",
            "finish": "2025-01-09T00:44:00.187050+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate"
        }
      },
      {
        "extended_dict": {
          "last_step": "sequence/0",
          "run_id": "ed9e1e975c1b6eac22f9d4ad7e527369",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-09T00:44:00.187539+00:00",
            "finish": "2025-01-09T00:44:00.189430+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate",
          "trace": {
            "sequence/0": [
              {
                "path": "sequence/0",
                "timestamp": "2025-01-09T00:44:00.188484+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "script.turn_switch_by_climate",
                    "state": "off",
                    "attributes": {
                      "last_triggered": "2025-01-09T00:44:00.185876+00:00",
                      "mode": "single",
                      "current": 0,
                      "icon": "mdi:switch",
                      "friendly_name": "turn_switch_by_climate"
                    },
                    "last_changed": "2025-01-09T00:44:00.186860+00:00",
                    "last_reported": "2025-01-09T00:44:00.186860+00:00",
                    "last_updated": "2025-01-09T00:44:00.186860+00:00",
                    "context": {
                      "id": "01JH48999CQ3TBD38E9PCPAX6W",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "climate_entity_id": "climate.t_livingroom",
                  "switch_entity_id": "switch.ac_relay_livingroom",
                  "hvac_mode": "idle",
                  "preferred_switch_state": "off",
                  "context": {
                    "id": "01JH48999CQ3TBD38E9PCPAX6W",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "result": false,
                  "entities": [
                    "switch.ac_relay_livingroom"
                  ]
                }
              }
            ]
          },
          "config": {
            "alias": "turn_switch_by_climate",
            "icon": "mdi:switch",
            "description": "Turn valves on/off depending of a climate's hvac_action.",
            "fields": {
              "climate_entity_id": {
                "description": "Entity ID of climate to read hvac_action.",
                "example": "climate.t_livingroom"
              },
              "switch_entity_id": {
                "description": "Entity ID of switch to turn on/off.",
                "example": "switch.ac_relay_livingroom"
              }
            },
            "variables": {
              "hvac_mode": "{{ state_attr(climate_entity_id, 'hvac_action') if states(climate_entity_id) in ['heat', 'cool', 'heat_cool'] else states(climate_entity_id) }}",
              "preferred_switch_state": "{{ 'off' if hvac_mode in ['idle', 'off', 'unavailable'] else 'on' }}"
            },
            "sequence": [
              {
                "condition": "template",
                "value_template": "{{ states(switch_entity_id) !=  preferred_switch_state }}"
              },
              {
                "condition": "template",
                "value_template": "{{ ( as_timestamp(now()) - as_timestamp(state_attr('saver.saver', 'variables')[switch_entity_id + '_last_switch']|default('0')) | default(0, 'None') ) | int >= 20 }}"
              },
              {
                "data": {
                  "level": "info",
                  "message": "[{{ climate_entity_id }} / {{ switch_entity_id }}]: {{ states(switch_entity_id) }} -> {{ preferred_switch_state }} ({{ hvac_mode }})"
                },
                "action": "system_log.write"
              },
              {
                "service_template": "switch.turn_{{ preferred_switch_state }}",
                "data": {
                  "entity_id": "{{ switch_entity_id }}"
                }
              },
              {
                "data": {
                  "name": "{{ switch_entity_id }}_last_switch",
                  "value": "{{ now() }}"
                },
                "action": "saver.set_variable"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH48999CQ3TBD38E9PCPAX6W",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "sequence/0",
          "run_id": "ed9e1e975c1b6eac22f9d4ad7e527369",
          "state": "stopped",
          "script_execution": "aborted",
          "timestamp": {
            "start": "2025-01-09T00:44:00.187539+00:00",
            "finish": "2025-01-09T00:44:00.189430+00:00"
          },
          "domain": "script",
          "item_id": "turn_switch_by_climate"
        }
      }
    ],
    "automation.humi1_operation_mode_update": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "92c17e4897e3bfb1aecdf51e63af3f3f",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-08T22:32:21.545763+00:00",
            "finish": "2025-01-08T22:32:21.547618+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_operation_mode_update",
          "error": "Error rendering data template: UndefinedError: 'homeassistant.util.read_only_dict.ReadOnlyDict object' has no attribute 'mode'",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:32:21.545820+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.humi1_operation_mode_update",
                    "state": "on",
                    "attributes": {
                      "id": "humi1_operation_mode_update",
                      "last_triggered": "2025-01-07T22:59:25.171892+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Humi1 operation mode update"
                    },
                    "last_changed": "2025-01-08T22:31:01.484197+00:00",
                    "last_reported": "2025-01-08T22:31:01.484197+00:00",
                    "last_updated": "2025-01-08T22:31:01.484197+00:00",
                    "context": {
                      "id": "01JH40NSKCGV7KWQA2ES27BZEP",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:32:21.546148+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH40R7S9GR1CAAKQSTE71V2X",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "error": "Error rendering data template: UndefinedError: 'homeassistant.util.read_only_dict.ReadOnlyDict object' has no attribute 'mode'"
              }
            ]
          },
          "config": {
            "id": "humi1_operation_mode_update",
            "alias": "Humi1 operation mode update",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "state",
                "entity_id": "fan.humi1"
              }
            ],
            "action": {
              "entity_id": "input_select.humi1_mode",
              "data_template": {
                "option": "{{ states.fan.humi1.attributes.preset_modes[states.fan.humi1.attributes.mode-1] }}"
              },
              "action": "input_select.select_option"
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40R7S9GR1CAAKQSTE71V2X",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "92c17e4897e3bfb1aecdf51e63af3f3f",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-08T22:32:21.545763+00:00",
            "finish": "2025-01-08T22:32:21.547618+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_operation_mode_update",
          "error": "Error rendering data template: UndefinedError: 'homeassistant.util.read_only_dict.ReadOnlyDict object' has no attribute 'mode'",
          "trigger": "Home Assistant starting"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "2691b56644b3d3b7cd430bc2c09a1fd9",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-08T23:28:59.035486+00:00",
            "finish": "2025-01-08T23:28:59.037082+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_operation_mode_update",
          "error": "Error rendering data template: UndefinedError: 'homeassistant.util.read_only_dict.ReadOnlyDict object' has no attribute 'mode'",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T23:28:59.035542+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.humi1_operation_mode_update",
                    "state": "on",
                    "attributes": {
                      "id": "humi1_operation_mode_update",
                      "last_triggered": "2025-01-08T22:32:21.545896+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Humi1 operation mode update"
                    },
                    "last_changed": "2025-01-08T23:26:50.208546+00:00",
                    "last_reported": "2025-01-08T23:26:50.208546+00:00",
                    "last_updated": "2025-01-08T23:26:50.208546+00:00",
                    "context": {
                      "id": "01JH43VZV0R5YG3A3480MHEKSC",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T23:28:59.035845+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH43ZXMVJFCEK4EGKT8FCE4C",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "error": "Error rendering data template: UndefinedError: 'homeassistant.util.read_only_dict.ReadOnlyDict object' has no attribute 'mode'"
              }
            ]
          },
          "config": {
            "id": "humi1_operation_mode_update",
            "alias": "Humi1 operation mode update",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "state",
                "entity_id": "fan.humi1"
              }
            ],
            "action": {
              "entity_id": "input_select.humi1_mode",
              "data_template": {
                "option": "{{ states.fan.humi1.attributes.preset_modes[states.fan.humi1.attributes.mode-1] }}"
              },
              "action": "input_select.select_option"
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH43ZXMVJFCEK4EGKT8FCE4C",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "2691b56644b3d3b7cd430bc2c09a1fd9",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-08T23:28:59.035486+00:00",
            "finish": "2025-01-08T23:28:59.037082+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_operation_mode_update",
          "error": "Error rendering data template: UndefinedError: 'homeassistant.util.read_only_dict.ReadOnlyDict object' has no attribute 'mode'",
          "trigger": "Home Assistant starting"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "6b4eebfb038b93f937a8f31abd265f09",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-09T00:05:48.901989+00:00",
            "finish": "2025-01-09T00:05:48.904696+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_operation_mode_update",
          "error": "Error rendering data template: UndefinedError: 'homeassistant.util.read_only_dict.ReadOnlyDict object' has no attribute 'mode'",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:05:48.902035+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.humi1_operation_mode_update",
                    "state": "on",
                    "attributes": {
                      "id": "humi1_operation_mode_update",
                      "last_triggered": "2025-01-08T23:28:59.035617+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Humi1 operation mode update"
                    },
                    "last_changed": "2025-01-09T00:04:43.606112+00:00",
                    "last_reported": "2025-01-09T00:04:43.606112+00:00",
                    "last_updated": "2025-01-09T00:04:43.606112+00:00",
                    "context": {
                      "id": "01JH461BYPZBF6PA1FBCSTBNTB",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-09T00:05:48.902419+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH463BQ552MN2K2V0CP4WRGQ",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "error": "Error rendering data template: UndefinedError: 'homeassistant.util.read_only_dict.ReadOnlyDict object' has no attribute 'mode'"
              }
            ]
          },
          "config": {
            "id": "humi1_operation_mode_update",
            "alias": "Humi1 operation mode update",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "state",
                "entity_id": "fan.humi1"
              }
            ],
            "action": {
              "entity_id": "input_select.humi1_mode",
              "data_template": {
                "option": "{{ states.fan.humi1.attributes.preset_modes[states.fan.humi1.attributes.mode-1] }}"
              },
              "action": "input_select.select_option"
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH463BQ552MN2K2V0CP4WRGQ",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "6b4eebfb038b93f937a8f31abd265f09",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-09T00:05:48.901989+00:00",
            "finish": "2025-01-09T00:05:48.904696+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_operation_mode_update",
          "error": "Error rendering data template: UndefinedError: 'homeassistant.util.read_only_dict.ReadOnlyDict object' has no attribute 'mode'",
          "trigger": "Home Assistant starting"
        }
      }
    ],
    "automation.humi1_target_humidity_update": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "0e965df8ef96778e544a433e57006566",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-08T22:32:21.550403+00:00",
            "finish": "2025-01-08T22:32:21.552485+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_target_humidity_update",
          "error": "expected float for dictionary value @ data['value']",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:32:21.550455+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.humi1_target_humidity_update",
                    "state": "on",
                    "attributes": {
                      "id": "humi1_target_humidity_update",
                      "last_triggered": "2025-01-07T22:59:25.174908+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Humi1 target humidity update"
                    },
                    "last_changed": "2025-01-08T22:31:01.498089+00:00",
                    "last_reported": "2025-01-08T22:31:01.498089+00:00",
                    "last_updated": "2025-01-08T22:31:01.498089+00:00",
                    "context": {
                      "id": "01JH40NSKT8N7B676EB8V55X6C",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:32:21.550845+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH40R7SEZ3Q83S899C8XRDZ1",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "error": "expected float for dictionary value @ data['value']",
                "result": {
                  "params": {
                    "domain": "input_number",
                    "service": "set_value",
                    "service_data": {
                      "value": "",
                      "entity_id": [
                        "input_number.humi1_target_humidity"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "input_number.humi1_target_humidity"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "humi1_target_humidity_update",
            "alias": "Humi1 target humidity update",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "state",
                "entity_id": "sensor.humi1_target_humidity"
              }
            ],
            "action": {
              "entity_id": "input_number.humi1_target_humidity",
              "data_template": {
                "value": "{{ states.fan.humi1.attributes.target_humidity }}"
              },
              "action": "input_number.set_value"
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40R7SEZ3Q83S899C8XRDZ1",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "0e965df8ef96778e544a433e57006566",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-08T22:32:21.550403+00:00",
            "finish": "2025-01-08T22:32:21.552485+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_target_humidity_update",
          "error": "expected float for dictionary value @ data['value']",
          "trigger": "Home Assistant starting"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "e64f5b546ad4d257d901c292fa2d92f5",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-08T23:28:59.038047+00:00",
            "finish": "2025-01-08T23:28:59.039814+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_target_humidity_update",
          "error": "expected float for dictionary value @ data['value']",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T23:28:59.038100+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.humi1_target_humidity_update",
                    "state": "on",
                    "attributes": {
                      "id": "humi1_target_humidity_update",
                      "last_triggered": "2025-01-08T22:32:21.550596+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Humi1 target humidity update"
                    },
                    "last_changed": "2025-01-08T23:26:50.209232+00:00",
                    "last_reported": "2025-01-08T23:26:50.209232+00:00",
                    "last_updated": "2025-01-08T23:26:50.209232+00:00",
                    "context": {
                      "id": "01JH43VZV1YQBDSVWZ8PD77S8Z",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T23:28:59.038442+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH43ZXMY0VH9BHJGEXF9WEEY",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "error": "expected float for dictionary value @ data['value']",
                "result": {
                  "params": {
                    "domain": "input_number",
                    "service": "set_value",
                    "service_data": {
                      "value": "",
                      "entity_id": [
                        "input_number.humi1_target_humidity"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "input_number.humi1_target_humidity"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "humi1_target_humidity_update",
            "alias": "Humi1 target humidity update",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "state",
                "entity_id": "sensor.humi1_target_humidity"
              }
            ],
            "action": {
              "entity_id": "input_number.humi1_target_humidity",
              "data_template": {
                "value": "{{ states.fan.humi1.attributes.target_humidity }}"
              },
              "action": "input_number.set_value"
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH43ZXMY0VH9BHJGEXF9WEEY",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "e64f5b546ad4d257d901c292fa2d92f5",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-08T23:28:59.038047+00:00",
            "finish": "2025-01-08T23:28:59.039814+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_target_humidity_update",
          "error": "expected float for dictionary value @ data['value']",
          "trigger": "Home Assistant starting"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "8c60d52e36c0c31b34a0cf7d174571a5",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-09T00:02:36.244817+00:00",
            "finish": "2025-01-09T00:02:36.246636+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_target_humidity_update",
          "error": "expected float for dictionary value @ data['value']",
          "trigger": "state of sensor.humi1_target_humidity",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2025-01-09T00:02:36.244869+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.humi1_target_humidity_update",
                    "state": "on",
                    "attributes": {
                      "id": "humi1_target_humidity_update",
                      "last_triggered": "2025-01-08T23:28:59.038168+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Humi1 target humidity update"
                    },
                    "last_changed": "2025-01-08T23:26:50.209232+00:00",
                    "last_reported": "2025-01-08T23:28:59.040039+00:00",
                    "last_updated": "2025-01-08T23:28:59.039496+00:00",
                    "context": {
                      "id": "01JH43ZXMY0VH9BHJGEXF9WEEY",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "sensor.humi1_target_humidity",
                    "from_state": {
                      "entity_id": "sensor.humi1_target_humidity",
                      "state": "unknown",
                      "attributes": {
                        "unit_of_measurement": "%",
                        "icon": "mdi:cloud-percent-outline",
                        "friendly_name": "C\u00e9l p\u00e1ratartalom",
                        "hidden": true,
                        "control": "hidden",
                        "device_class": "humidity"
                      },
                      "last_changed": "2025-01-08T23:26:35.035921+00:00",
                      "last_reported": "2025-01-08T23:26:35.035921+00:00",
                      "last_updated": "2025-01-08T23:26:35.035921+00:00",
                      "context": {
                        "id": "01JH43VH0VX37X84VWZB4XAN81",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": null,
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.humi1_target_humidity"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-09T00:02:36.245264+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH45XFJMJWDS9XMJP88GEZAH",
                    "parent_id": "01JH45XFHZVEHHFB3GBZ3BN6FJ",
                    "user_id": null
                  }
                },
                "error": "expected float for dictionary value @ data['value']",
                "result": {
                  "params": {
                    "domain": "input_number",
                    "service": "set_value",
                    "service_data": {
                      "value": "",
                      "entity_id": [
                        "input_number.humi1_target_humidity"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "input_number.humi1_target_humidity"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "humi1_target_humidity_update",
            "alias": "Humi1 target humidity update",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "state",
                "entity_id": "sensor.humi1_target_humidity"
              }
            ],
            "action": {
              "entity_id": "input_number.humi1_target_humidity",
              "data_template": {
                "value": "{{ states.fan.humi1.attributes.target_humidity }}"
              },
              "action": "input_number.set_value"
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH45XFJMJWDS9XMJP88GEZAH",
            "parent_id": "01JH45XFHZVEHHFB3GBZ3BN6FJ",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "8c60d52e36c0c31b34a0cf7d174571a5",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-09T00:02:36.244817+00:00",
            "finish": "2025-01-09T00:02:36.246636+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_target_humidity_update",
          "error": "expected float for dictionary value @ data['value']",
          "trigger": "state of sensor.humi1_target_humidity"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "f6118b75ca2a6f7d696818f7b01db9d6",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-09T00:05:48.905538+00:00",
            "finish": "2025-01-09T00:05:48.907441+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_target_humidity_update",
          "error": "expected float for dictionary value @ data['value']",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:05:48.905578+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.humi1_target_humidity_update",
                    "state": "on",
                    "attributes": {
                      "id": "humi1_target_humidity_update",
                      "last_triggered": "2025-01-09T00:02:36.244944+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Humi1 target humidity update"
                    },
                    "last_changed": "2025-01-09T00:04:43.606967+00:00",
                    "last_reported": "2025-01-09T00:04:43.606967+00:00",
                    "last_updated": "2025-01-09T00:04:43.606967+00:00",
                    "context": {
                      "id": "01JH461BYPVKTT6ANBK32HE5MA",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-09T00:05:48.905899+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH463BQ9VEGXQSXJBT83V9JZ",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "error": "expected float for dictionary value @ data['value']",
                "result": {
                  "params": {
                    "domain": "input_number",
                    "service": "set_value",
                    "service_data": {
                      "value": "",
                      "entity_id": [
                        "input_number.humi1_target_humidity"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "input_number.humi1_target_humidity"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "humi1_target_humidity_update",
            "alias": "Humi1 target humidity update",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "state",
                "entity_id": "sensor.humi1_target_humidity"
              }
            ],
            "action": {
              "entity_id": "input_number.humi1_target_humidity",
              "data_template": {
                "value": "{{ states.fan.humi1.attributes.target_humidity }}"
              },
              "action": "input_number.set_value"
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH463BQ9VEGXQSXJBT83V9JZ",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "f6118b75ca2a6f7d696818f7b01db9d6",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2025-01-09T00:05:48.905538+00:00",
            "finish": "2025-01-09T00:05:48.907441+00:00"
          },
          "domain": "automation",
          "item_id": "humi1_target_humidity_update",
          "error": "expected float for dictionary value @ data['value']",
          "trigger": "Home Assistant starting"
        }
      }
    ],
    "automation.set_theme_at_startup": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "13d04ec37a7037656d6abeb9f7502133",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:32:21.558737+00:00",
            "finish": "2025-01-08T22:32:21.559832+00:00"
          },
          "domain": "automation",
          "item_id": "set_theme_at_startup",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:32:21.558790+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.set_theme_at_startup",
                    "state": "on",
                    "attributes": {
                      "id": "set_theme_at_startup",
                      "last_triggered": "2025-01-07T22:59:25.181927+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Set theme at startup"
                    },
                    "last_changed": "2025-01-08T22:31:01.506408+00:00",
                    "last_reported": "2025-01-08T22:31:01.506408+00:00",
                    "last_updated": "2025-01-08T22:31:01.506408+00:00",
                    "context": {
                      "id": "01JH40NSM2NNTC5A594RMM5W0C",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:32:21.559109+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH40R7SPE11FJHA7GWAKTCXM",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "frontend",
                    "service": "set_theme",
                    "service_data": {
                      "name": "Google Dark Theme"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "set_theme_at_startup",
            "alias": "Set theme at startup",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              }
            ],
            "action": {
              "data": {
                "name": "Google Dark Theme"
              },
              "action": "frontend.set_theme"
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH40R7SPE11FJHA7GWAKTCXM",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "13d04ec37a7037656d6abeb9f7502133",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:32:21.558737+00:00",
            "finish": "2025-01-08T22:32:21.559832+00:00"
          },
          "domain": "automation",
          "item_id": "set_theme_at_startup",
          "trigger": "Home Assistant starting"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "f2c24ed1ed0efd4b0f9e7343bc3a0e61",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T23:28:59.042342+00:00",
            "finish": "2025-01-08T23:28:59.044440+00:00"
          },
          "domain": "automation",
          "item_id": "set_theme_at_startup",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T23:28:59.042395+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.set_theme_at_startup",
                    "state": "on",
                    "attributes": {
                      "id": "set_theme_at_startup",
                      "last_triggered": "2025-01-08T22:32:21.558858+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Set theme at startup"
                    },
                    "last_changed": "2025-01-08T23:26:50.212291+00:00",
                    "last_reported": "2025-01-08T23:26:50.212291+00:00",
                    "last_updated": "2025-01-08T23:26:50.212291+00:00",
                    "context": {
                      "id": "01JH43VZV4705CQMATTCGR2Q56",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T23:28:59.042702+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH43ZXN2CBWWJY4DHD2S1V41",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "frontend",
                    "service": "set_theme",
                    "service_data": {
                      "name": "Google Dark Theme"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "set_theme_at_startup",
            "alias": "Set theme at startup",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              }
            ],
            "action": {
              "data": {
                "name": "Google Dark Theme"
              },
              "action": "frontend.set_theme"
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH43ZXN2CBWWJY4DHD2S1V41",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "f2c24ed1ed0efd4b0f9e7343bc3a0e61",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T23:28:59.042342+00:00",
            "finish": "2025-01-08T23:28:59.044440+00:00"
          },
          "domain": "automation",
          "item_id": "set_theme_at_startup",
          "trigger": "Home Assistant starting"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "265743988491ea1b3530468fbefecbe8",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:05:48.911061+00:00",
            "finish": "2025-01-09T00:05:48.912306+00:00"
          },
          "domain": "automation",
          "item_id": "set_theme_at_startup",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:05:48.911103+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.set_theme_at_startup",
                    "state": "on",
                    "attributes": {
                      "id": "set_theme_at_startup",
                      "last_triggered": "2025-01-08T23:28:59.042462+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Set theme at startup"
                    },
                    "last_changed": "2025-01-09T00:04:43.609921+00:00",
                    "last_reported": "2025-01-09T00:04:43.609921+00:00",
                    "last_updated": "2025-01-09T00:04:43.609921+00:00",
                    "context": {
                      "id": "01JH461BYSYV8JA28490CH5GEE",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-09T00:05:48.911521+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH463BQFZAESMCPWD8C5YFJH",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "frontend",
                    "service": "set_theme",
                    "service_data": {
                      "name": "Google Dark Theme"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "set_theme_at_startup",
            "alias": "Set theme at startup",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              }
            ],
            "action": {
              "data": {
                "name": "Google Dark Theme"
              },
              "action": "frontend.set_theme"
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH463BQFZAESMCPWD8C5YFJH",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "265743988491ea1b3530468fbefecbe8",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:05:48.911061+00:00",
            "finish": "2025-01-09T00:05:48.912306+00:00"
          },
          "domain": "automation",
          "item_id": "set_theme_at_startup",
          "trigger": "Home Assistant starting"
        }
      }
    ],
    "automation.ac_auto_off": [
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "46006d631d4dd9fe6ffc147572ddd4c2",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:40.258872+00:00",
            "finish": "2025-01-09T00:43:40.259257+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:43:40.258967+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_off",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_off",
                      "last_triggered": "2025-01-09T00:14:35.260042+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma kikapcsol\u00e1s, ha minden szelep z\u00e1rva",
                      "icon": "mdi:hvac-off"
                    },
                    "last_changed": "2025-01-09T00:04:43.600892+00:00",
                    "last_reported": "2025-01-09T00:14:35.318005+00:00",
                    "last_updated": "2025-01-09T00:14:35.318005+00:00",
                    "context": {
                      "id": "01JH46KDQT0HSC5YGATVDNJX3S",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-09T01:43:40.258491+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-09T00:43:40.259028+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-09T00:43:40.259079+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-09T00:43:40.259122+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_off",
            "alias": "ac_auto_off",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom",
                  "climate.ac"
                ]
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": [
                      "switch.ac_relay_study",
                      "switch.ac_relay_childa",
                      "switch.ac_relay_childb",
                      "switch.ac_relay_bedroom",
                      "switch.ac_relay_kitchen",
                      "switch.ac_relay_livingroom"
                    ],
                    "state": "off"
                  },
                  {
                    "condition": "numeric_state",
                    "entity_id": "automation.ac_mode",
                    "attribute": "current",
                    "below": 1
                  }
                ]
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_off"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH488NV2Y2FBV6QENJ09WD0V",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "46006d631d4dd9fe6ffc147572ddd4c2",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:40.258872+00:00",
            "finish": "2025-01-09T00:43:40.259257+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "e1d9eb36a538fc2aeb04ef70121f5eac",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:45.286068+00:00",
            "finish": "2025-01-09T00:43:45.286333+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:43:45.286132+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_off",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_off",
                      "last_triggered": "2025-01-09T00:14:35.260042+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma kikapcsol\u00e1s, ha minden szelep z\u00e1rva",
                      "icon": "mdi:hvac-off"
                    },
                    "last_changed": "2025-01-09T00:04:43.600892+00:00",
                    "last_reported": "2025-01-09T00:14:35.318005+00:00",
                    "last_updated": "2025-01-09T00:14:35.318005+00:00",
                    "context": {
                      "id": "01JH46KDQT0HSC5YGATVDNJX3S",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-09T01:43:45.285841+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-09T00:43:45.286172+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-09T00:43:45.286233+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-09T00:43:45.286260+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_off",
            "alias": "ac_auto_off",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom",
                  "climate.ac"
                ]
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": [
                      "switch.ac_relay_study",
                      "switch.ac_relay_childa",
                      "switch.ac_relay_childb",
                      "switch.ac_relay_bedroom",
                      "switch.ac_relay_kitchen",
                      "switch.ac_relay_livingroom"
                    ],
                    "state": "off"
                  },
                  {
                    "condition": "numeric_state",
                    "entity_id": "automation.ac_mode",
                    "attribute": "current",
                    "below": 1
                  }
                ]
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_off"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH488TR5QP2BHWJYN5645C0E",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "e1d9eb36a538fc2aeb04ef70121f5eac",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:45.286068+00:00",
            "finish": "2025-01-09T00:43:45.286333+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "7e324acd5f713a6eab6c80e732465cf0",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:50.259405+00:00",
            "finish": "2025-01-09T00:43:50.259799+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:43:50.259513+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_off",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_off",
                      "last_triggered": "2025-01-09T00:14:35.260042+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma kikapcsol\u00e1s, ha minden szelep z\u00e1rva",
                      "icon": "mdi:hvac-off"
                    },
                    "last_changed": "2025-01-09T00:04:43.600892+00:00",
                    "last_reported": "2025-01-09T00:14:35.318005+00:00",
                    "last_updated": "2025-01-09T00:14:35.318005+00:00",
                    "context": {
                      "id": "01JH46KDQT0HSC5YGATVDNJX3S",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-09T01:43:50.258902+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-09T00:43:50.259586+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-09T00:43:50.259637+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-09T00:43:50.259682+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_off",
            "alias": "ac_auto_off",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom",
                  "climate.ac"
                ]
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": [
                      "switch.ac_relay_study",
                      "switch.ac_relay_childa",
                      "switch.ac_relay_childb",
                      "switch.ac_relay_bedroom",
                      "switch.ac_relay_kitchen",
                      "switch.ac_relay_livingroom"
                    ],
                    "state": "off"
                  },
                  {
                    "condition": "numeric_state",
                    "entity_id": "automation.ac_mode",
                    "attribute": "current",
                    "below": 1
                  }
                ]
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_off"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH488ZKKG5GWQTGFA1MZAST9",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "7e324acd5f713a6eab6c80e732465cf0",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:50.259405+00:00",
            "finish": "2025-01-09T00:43:50.259799+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "531cfa9800f5c18fe49d5f47e85419c1",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:55.259576+00:00",
            "finish": "2025-01-09T00:43:55.260105+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:43:55.259660+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_off",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_off",
                      "last_triggered": "2025-01-09T00:14:35.260042+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma kikapcsol\u00e1s, ha minden szelep z\u00e1rva",
                      "icon": "mdi:hvac-off"
                    },
                    "last_changed": "2025-01-09T00:04:43.600892+00:00",
                    "last_reported": "2025-01-09T00:14:35.318005+00:00",
                    "last_updated": "2025-01-09T00:14:35.318005+00:00",
                    "context": {
                      "id": "01JH46KDQT0HSC5YGATVDNJX3S",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-09T01:43:55.259294+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-09T00:43:55.259716+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-09T00:43:55.259808+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-09T00:43:55.260001+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_off",
            "alias": "ac_auto_off",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom",
                  "climate.ac"
                ]
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": [
                      "switch.ac_relay_study",
                      "switch.ac_relay_childa",
                      "switch.ac_relay_childb",
                      "switch.ac_relay_bedroom",
                      "switch.ac_relay_kitchen",
                      "switch.ac_relay_livingroom"
                    ],
                    "state": "off"
                  },
                  {
                    "condition": "numeric_state",
                    "entity_id": "automation.ac_mode",
                    "attribute": "current",
                    "below": 1
                  }
                ]
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_off"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH4894FV022ZXD16C3TRD7TA",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "531cfa9800f5c18fe49d5f47e85419c1",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:55.259576+00:00",
            "finish": "2025-01-09T00:43:55.260105+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "3fdb90c3d2814c782e2c1c9ebc6c5916",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:44:00.259140+00:00",
            "finish": "2025-01-09T00:44:00.259495+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:44:00.259305+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_off",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_off",
                      "last_triggered": "2025-01-09T00:14:35.260042+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma kikapcsol\u00e1s, ha minden szelep z\u00e1rva",
                      "icon": "mdi:hvac-off"
                    },
                    "last_changed": "2025-01-09T00:04:43.600892+00:00",
                    "last_reported": "2025-01-09T00:14:35.318005+00:00",
                    "last_updated": "2025-01-09T00:14:35.318005+00:00",
                    "context": {
                      "id": "01JH46KDQT0HSC5YGATVDNJX3S",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-09T01:44:00.258929+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-09T00:44:00.259353+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-09T00:44:00.259389+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-09T00:44:00.259417+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_off",
            "alias": "ac_auto_off",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom",
                  "climate.ac"
                ]
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": [
                      "switch.ac_relay_study",
                      "switch.ac_relay_childa",
                      "switch.ac_relay_childb",
                      "switch.ac_relay_bedroom",
                      "switch.ac_relay_kitchen",
                      "switch.ac_relay_livingroom"
                    ],
                    "state": "off"
                  },
                  {
                    "condition": "numeric_state",
                    "entity_id": "automation.ac_mode",
                    "attribute": "current",
                    "below": 1
                  }
                ]
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_off"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH4899C337JK28Q581P9K8WB",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "3fdb90c3d2814c782e2c1c9ebc6c5916",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:44:00.259140+00:00",
            "finish": "2025-01-09T00:44:00.259495+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_off",
          "trigger": "time pattern"
        }
      }
    ],
    "automation.ac_auto_on": [
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "863cc149c5efee5bdcf042f0057715df",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:40.119974+00:00",
            "finish": "2025-01-09T00:43:40.120605+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:43:40.120082+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_on",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_on",
                      "last_triggered": "2025-01-09T00:14:38.553665+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma bekapcsol\u00e1s, ha legal\u00e1bb egy szelep nyitva",
                      "icon": "mdi:hvac"
                    },
                    "last_changed": "2025-01-09T00:04:43.601404+00:00",
                    "last_reported": "2025-01-09T00:14:40.726499+00:00",
                    "last_updated": "2025-01-09T00:14:40.726499+00:00",
                    "context": {
                      "id": "01JH46KGYRKV31D6T7EFZ47GMM",
                      "parent_id": "01JH46KGXT4DM16Q0Y2YNV205D",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-09T01:43:40.119637+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-09T00:43:40.120148+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-09T00:43:40.120320+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-09T00:43:40.120364+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-09T00:43:40.120489+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2025-01-09T00:43:40.120531+00:00",
                "result": {
                  "result": false,
                  "state": "heat",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_on",
            "alias": "ac_auto_on",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_study",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childa",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childb",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_bedroom",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_kitchen",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_livingroom",
                    "state": "on"
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "climate.ac",
                "state": "off"
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_on"
              },
              {
                "data": {
                  "entity_id": "climate.ac",
                  "hvac_mode": "{{ states('climate.t_' + trigger.entity_id|regex_findall_index(find='\\.ac_relay_(.*)', index=0, ignorecase=False) ) }}"
                },
                "action": "climate.set_hvac_mode"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH488NPQE2A3KAN9N834G2QP",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "863cc149c5efee5bdcf042f0057715df",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:40.119974+00:00",
            "finish": "2025-01-09T00:43:40.120605+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "0a8d27db3b7d942fb0da3376eca85877",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:45.199601+00:00",
            "finish": "2025-01-09T00:43:45.200009+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:43:45.199683+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_on",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_on",
                      "last_triggered": "2025-01-09T00:14:38.553665+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma bekapcsol\u00e1s, ha legal\u00e1bb egy szelep nyitva",
                      "icon": "mdi:hvac"
                    },
                    "last_changed": "2025-01-09T00:04:43.601404+00:00",
                    "last_reported": "2025-01-09T00:14:40.726499+00:00",
                    "last_updated": "2025-01-09T00:14:40.726499+00:00",
                    "context": {
                      "id": "01JH46KGYRKV31D6T7EFZ47GMM",
                      "parent_id": "01JH46KGXT4DM16Q0Y2YNV205D",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-09T01:43:45.199358+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-09T00:43:45.199726+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-09T00:43:45.199758+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-09T00:43:45.199786+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-09T00:43:45.199939+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2025-01-09T00:43:45.199963+00:00",
                "result": {
                  "result": false,
                  "state": "heat",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_on",
            "alias": "ac_auto_on",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_study",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childa",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childb",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_bedroom",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_kitchen",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_livingroom",
                    "state": "on"
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "climate.ac",
                "state": "off"
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_on"
              },
              {
                "data": {
                  "entity_id": "climate.ac",
                  "hvac_mode": "{{ states('climate.t_' + trigger.entity_id|regex_findall_index(find='\\.ac_relay_(.*)', index=0, ignorecase=False) ) }}"
                },
                "action": "climate.set_hvac_mode"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH488TNF5W2QF3V7CKPTM07G",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "0a8d27db3b7d942fb0da3376eca85877",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:45.199601+00:00",
            "finish": "2025-01-09T00:43:45.200009+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "7da82b869a4c1c0357f567a3aacf59e6",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:50.120503+00:00",
            "finish": "2025-01-09T00:43:50.121016+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:43:50.120609+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_on",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_on",
                      "last_triggered": "2025-01-09T00:14:38.553665+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma bekapcsol\u00e1s, ha legal\u00e1bb egy szelep nyitva",
                      "icon": "mdi:hvac"
                    },
                    "last_changed": "2025-01-09T00:04:43.601404+00:00",
                    "last_reported": "2025-01-09T00:14:40.726499+00:00",
                    "last_updated": "2025-01-09T00:14:40.726499+00:00",
                    "context": {
                      "id": "01JH46KGYRKV31D6T7EFZ47GMM",
                      "parent_id": "01JH46KGXT4DM16Q0Y2YNV205D",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-09T01:43:50.120223+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-09T00:43:50.120673+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-09T00:43:50.120725+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-09T00:43:50.120769+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-09T00:43:50.120895+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2025-01-09T00:43:50.120940+00:00",
                "result": {
                  "result": false,
                  "state": "heat",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_on",
            "alias": "ac_auto_on",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_study",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childa",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childb",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_bedroom",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_kitchen",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_livingroom",
                    "state": "on"
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "climate.ac",
                "state": "off"
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_on"
              },
              {
                "data": {
                  "entity_id": "climate.ac",
                  "hvac_mode": "{{ states('climate.t_' + trigger.entity_id|regex_findall_index(find='\\.ac_relay_(.*)', index=0, ignorecase=False) ) }}"
                },
                "action": "climate.set_hvac_mode"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH488ZF8HE2NPMKEN1DFE0BB",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "7da82b869a4c1c0357f567a3aacf59e6",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:50.120503+00:00",
            "finish": "2025-01-09T00:43:50.121016+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "7862f7ad7320cb4ff2a2b91f013d13ec",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:55.120513+00:00",
            "finish": "2025-01-09T00:43:55.121086+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:43:55.120689+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_on",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_on",
                      "last_triggered": "2025-01-09T00:14:38.553665+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma bekapcsol\u00e1s, ha legal\u00e1bb egy szelep nyitva",
                      "icon": "mdi:hvac"
                    },
                    "last_changed": "2025-01-09T00:04:43.601404+00:00",
                    "last_reported": "2025-01-09T00:14:40.726499+00:00",
                    "last_updated": "2025-01-09T00:14:40.726499+00:00",
                    "context": {
                      "id": "01JH46KGYRKV31D6T7EFZ47GMM",
                      "parent_id": "01JH46KGXT4DM16Q0Y2YNV205D",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-09T01:43:55.120110+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-09T00:43:55.120751+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-09T00:43:55.120802+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-09T00:43:55.120846+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-09T00:43:55.120970+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2025-01-09T00:43:55.121011+00:00",
                "result": {
                  "result": false,
                  "state": "heat",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_on",
            "alias": "ac_auto_on",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_study",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childa",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childb",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_bedroom",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_kitchen",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_livingroom",
                    "state": "on"
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "climate.ac",
                "state": "off"
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_on"
              },
              {
                "data": {
                  "entity_id": "climate.ac",
                  "hvac_mode": "{{ states('climate.t_' + trigger.entity_id|regex_findall_index(find='\\.ac_relay_(.*)', index=0, ignorecase=False) ) }}"
                },
                "action": "climate.set_hvac_mode"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH4894BG97ERCX2H9F7DH9JZ",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "7862f7ad7320cb4ff2a2b91f013d13ec",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:43:55.120513+00:00",
            "finish": "2025-01-09T00:43:55.121086+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "a09042649a781e73829d0ab7b6e3d667",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:44:00.119944+00:00",
            "finish": "2025-01-09T00:44:00.120550+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:44:00.120120+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_auto_on",
                    "state": "on",
                    "attributes": {
                      "id": "ac_auto_on",
                      "last_triggered": "2025-01-09T00:14:38.553665+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma bekapcsol\u00e1s, ha legal\u00e1bb egy szelep nyitva",
                      "icon": "mdi:hvac"
                    },
                    "last_changed": "2025-01-09T00:04:43.601404+00:00",
                    "last_reported": "2025-01-09T00:14:40.726499+00:00",
                    "last_updated": "2025-01-09T00:14:40.726499+00:00",
                    "context": {
                      "id": "01JH46KGYRKV31D6T7EFZ47GMM",
                      "parent_id": "01JH46KGXT4DM16Q0Y2YNV205D",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2025-01-09T01:44:00.119612+01:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-09T00:44:00.120212+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2025-01-09T00:44:00.120266+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2025-01-09T00:44:00.120310+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-09T00:44:00.120436+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2025-01-09T00:44:00.120477+00:00",
                "result": {
                  "result": false,
                  "state": "heat",
                  "wanted_state": "off"
                }
              }
            ]
          },
          "config": {
            "id": "ac_auto_on",
            "alias": "ac_auto_on",
            "initial_state": true,
            "trigger": [
              {
                "platform": "time_pattern",
                "seconds": "/5"
              },
              {
                "platform": "state",
                "entity_id": [
                  "switch.ac_relay_study",
                  "switch.ac_relay_childa",
                  "switch.ac_relay_childb",
                  "switch.ac_relay_bedroom",
                  "switch.ac_relay_kitchen",
                  "switch.ac_relay_livingroom"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_study",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childa",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_childb",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_bedroom",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_kitchen",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.ac_relay_livingroom",
                    "state": "on"
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "climate.ac",
                "state": "off"
              }
            ],
            "action": [
              {
                "data": {
                  "entity_id": "climate.ac"
                },
                "action": "climate.turn_on"
              },
              {
                "data": {
                  "entity_id": "climate.ac",
                  "hvac_mode": "{{ states('climate.t_' + trigger.entity_id|regex_findall_index(find='\\.ac_relay_(.*)', index=0, ignorecase=False) ) }}"
                },
                "action": "climate.set_hvac_mode"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH48997QVY3EXXW0TTMSNEEW",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "a09042649a781e73829d0ab7b6e3d667",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:44:00.119944+00:00",
            "finish": "2025-01-09T00:44:00.120550+00:00"
          },
          "domain": "automation",
          "item_id": "ac_auto_on",
          "trigger": "time pattern"
        }
      }
    ],
    "automation.ac_mode": [
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "951de4b49c660b099f93bf5b5df99121",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:34:09.878820+00:00",
            "finish": "2025-01-09T00:34:09.879491+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_study",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:34:09.878929+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_mode",
                    "state": "on",
                    "attributes": {
                      "id": "ac_mode",
                      "last_triggered": "2025-01-09T00:18:32.981708+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma m\u00f3d kapcsol\u00f3k \u00f6sszek\u00f6t\u00e9se",
                      "icon": "mdi:vector-link"
                    },
                    "last_changed": "2025-01-09T00:04:43.601810+00:00",
                    "last_reported": "2025-01-09T00:18:33.048399+00:00",
                    "last_updated": "2025-01-09T00:18:33.048399+00:00",
                    "context": {
                      "id": "01JH46TNY0CW04QYKSMNDJS6AN",
                      "parent_id": "01JH46TNWNNG2JTKZBN8R5NSF2",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_study",
                    "from_state": {
                      "entity_id": "climate.t_study",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "cool",
                          "heat",
                          "heat_cool",
                          "dry",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 1.0,
                        "fan_modes": [
                          "auto",
                          "low",
                          "middle",
                          "high"
                        ],
                        "current_temperature": 18.9,
                        "temperature": 21.0,
                        "fan_mode": "auto",
                        "hvac_action": "heat",
                        "raw_state": true,
                        "icon": "",
                        "friendly_name": "Dolgoz\u00f3",
                        "supported_features": 393
                      },
                      "last_changed": "2025-01-09T00:18:31.849510+00:00",
                      "last_reported": "2025-01-09T00:28:59.142112+00:00",
                      "last_updated": "2025-01-09T00:28:59.142112+00:00",
                      "context": {
                        "id": "01JH47DSC67434BG5RNNNKPB4D",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_study",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "cool",
                          "heat",
                          "heat_cool",
                          "dry",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 1.0,
                        "fan_modes": [
                          "auto",
                          "low",
                          "middle",
                          "high"
                        ],
                        "current_temperature": 19.2,
                        "temperature": 21.0,
                        "fan_mode": "auto",
                        "hvac_action": "heat",
                        "raw_state": true,
                        "icon": "",
                        "friendly_name": "Dolgoz\u00f3",
                        "supported_features": 393
                      },
                      "last_changed": "2025-01-09T00:18:31.849510+00:00",
                      "last_reported": "2025-01-09T00:34:09.876021+00:00",
                      "last_updated": "2025-01-09T00:34:09.876021+00:00",
                      "context": {
                        "id": "01JH47Q8TMZHMK7TQB4C1AJV0N",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of climate.t_study"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-09T00:34:09.879005+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "id": "ac_mode",
            "initial_state": true,
            "alias": "AC mode",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.ac",
                  "climate.t_study",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_bedroom",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ]
              }
            ],
            "condition": "{{ trigger.from_state.state != trigger.to_state.state and trigger.to_state.state in ['heat', 'cool', 'heat_cool', 'fan_only'] }}",
            "action": [
              {
                "repeat": {
                  "for_each": [
                    "climate.ac",
                    "climate.t_study",
                    "climate.t_childa",
                    "climate.t_childb",
                    "climate.t_bedroom",
                    "climate.t_kitchen",
                    "climate.t_livingroom"
                  ],
                  "sequence": [
                    {
                      "if": [
                        {
                          "condition": "template",
                          "value_template": "{{ states(repeat.item) not in ['off', trigger.to_state.state] }}"
                        }
                      ],
                      "then": [
                        {
                          "data": {
                            "level": "info",
                            "message": "Sync {{ repeat.item }}: {{ states(repeat.item) }} -> {{ trigger.to_state.state }} by {{ trigger.entity_id }}: {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}!\n"
                          },
                          "action": "system_log.write"
                        },
                        {
                          "data": {
                            "entity_id": "{{ repeat.item }}",
                            "hvac_mode": "{{ trigger.to_state.state }}"
                          },
                          "action": "climate.set_hvac_mode"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH47Q8TPSPZEKRWMT3PB49GX",
            "parent_id": "01JH47Q8TMZHMK7TQB4C1AJV0N",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "951de4b49c660b099f93bf5b5df99121",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:34:09.878820+00:00",
            "finish": "2025-01-09T00:34:09.879491+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_study"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "12441f069233b9659e34dc70083975d1",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:34:42.056689+00:00",
            "finish": "2025-01-09T00:34:42.056993+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.ac",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:34:42.056730+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_mode",
                    "state": "on",
                    "attributes": {
                      "id": "ac_mode",
                      "last_triggered": "2025-01-09T00:18:32.981708+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma m\u00f3d kapcsol\u00f3k \u00f6sszek\u00f6t\u00e9se",
                      "icon": "mdi:vector-link"
                    },
                    "last_changed": "2025-01-09T00:04:43.601810+00:00",
                    "last_reported": "2025-01-09T00:18:33.048399+00:00",
                    "last_updated": "2025-01-09T00:18:33.048399+00:00",
                    "context": {
                      "id": "01JH46TNY0CW04QYKSMNDJS6AN",
                      "parent_id": "01JH46TNWNNG2JTKZBN8R5NSF2",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.ac",
                    "from_state": {
                      "entity_id": "climate.ac",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "fan_only",
                          "dry",
                          "cool",
                          "heat",
                          "heat_cool",
                          "off"
                        ],
                        "min_temp": 7,
                        "max_temp": 35,
                        "target_temp_step": 1,
                        "fan_modes": [
                          "Auto",
                          "Silence",
                          "1",
                          "2",
                          "3",
                          "4",
                          "5"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "eco",
                          "boost"
                        ],
                        "current_temperature": 17.0,
                        "temperature": 23.0,
                        "fan_mode": "5",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "Kl\u00edma",
                        "supported_features": 409,
                        "icon": "mdi:air-conditioner"
                      },
                      "last_changed": "2025-01-09T00:18:32.911957+00:00",
                      "last_reported": "2025-01-09T00:31:41.042075+00:00",
                      "last_updated": "2025-01-09T00:31:41.042075+00:00",
                      "context": {
                        "id": "01JH47JQFJN001N76TSNE100WD",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.ac",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "fan_only",
                          "dry",
                          "cool",
                          "heat",
                          "heat_cool",
                          "off"
                        ],
                        "min_temp": 7,
                        "max_temp": 35,
                        "target_temp_step": 1,
                        "fan_modes": [
                          "Auto",
                          "Silence",
                          "1",
                          "2",
                          "3",
                          "4",
                          "5"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "eco",
                          "boost"
                        ],
                        "current_temperature": 16.0,
                        "temperature": 23.0,
                        "fan_mode": "5",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "Kl\u00edma",
                        "supported_features": 409,
                        "icon": "mdi:air-conditioner"
                      },
                      "last_changed": "2025-01-09T00:18:32.911957+00:00",
                      "last_reported": "2025-01-09T00:34:42.053158+00:00",
                      "last_updated": "2025-01-09T00:34:42.053158+00:00",
                      "context": {
                        "id": "01JH47R8852BH5DNJKENVSA6W9",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of climate.ac"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-09T00:34:42.056756+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "id": "ac_mode",
            "initial_state": true,
            "alias": "AC mode",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.ac",
                  "climate.t_study",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_bedroom",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ]
              }
            ],
            "condition": "{{ trigger.from_state.state != trigger.to_state.state and trigger.to_state.state in ['heat', 'cool', 'heat_cool', 'fan_only'] }}",
            "action": [
              {
                "repeat": {
                  "for_each": [
                    "climate.ac",
                    "climate.t_study",
                    "climate.t_childa",
                    "climate.t_childb",
                    "climate.t_bedroom",
                    "climate.t_kitchen",
                    "climate.t_livingroom"
                  ],
                  "sequence": [
                    {
                      "if": [
                        {
                          "condition": "template",
                          "value_template": "{{ states(repeat.item) not in ['off', trigger.to_state.state] }}"
                        }
                      ],
                      "then": [
                        {
                          "data": {
                            "level": "info",
                            "message": "Sync {{ repeat.item }}: {{ states(repeat.item) }} -> {{ trigger.to_state.state }} by {{ trigger.entity_id }}: {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}!\n"
                          },
                          "action": "system_log.write"
                        },
                        {
                          "data": {
                            "entity_id": "{{ repeat.item }}",
                            "hvac_mode": "{{ trigger.to_state.state }}"
                          },
                          "action": "climate.set_hvac_mode"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH47R888HE6WF6F2SXQC05R5",
            "parent_id": "01JH47R8852BH5DNJKENVSA6W9",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "12441f069233b9659e34dc70083975d1",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:34:42.056689+00:00",
            "finish": "2025-01-09T00:34:42.056993+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.ac"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "a7b6d3e3886d48c63026eafb44aab0ff",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:38:42.054546+00:00",
            "finish": "2025-01-09T00:38:42.055043+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.ac",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:38:42.054616+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_mode",
                    "state": "on",
                    "attributes": {
                      "id": "ac_mode",
                      "last_triggered": "2025-01-09T00:18:32.981708+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma m\u00f3d kapcsol\u00f3k \u00f6sszek\u00f6t\u00e9se",
                      "icon": "mdi:vector-link"
                    },
                    "last_changed": "2025-01-09T00:04:43.601810+00:00",
                    "last_reported": "2025-01-09T00:18:33.048399+00:00",
                    "last_updated": "2025-01-09T00:18:33.048399+00:00",
                    "context": {
                      "id": "01JH46TNY0CW04QYKSMNDJS6AN",
                      "parent_id": "01JH46TNWNNG2JTKZBN8R5NSF2",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.ac",
                    "from_state": {
                      "entity_id": "climate.ac",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "fan_only",
                          "dry",
                          "cool",
                          "heat",
                          "heat_cool",
                          "off"
                        ],
                        "min_temp": 7,
                        "max_temp": 35,
                        "target_temp_step": 1,
                        "fan_modes": [
                          "Auto",
                          "Silence",
                          "1",
                          "2",
                          "3",
                          "4",
                          "5"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "eco",
                          "boost"
                        ],
                        "current_temperature": 16.0,
                        "temperature": 23.0,
                        "fan_mode": "5",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "Kl\u00edma",
                        "supported_features": 409,
                        "icon": "mdi:air-conditioner"
                      },
                      "last_changed": "2025-01-09T00:18:32.911957+00:00",
                      "last_reported": "2025-01-09T00:34:42.053158+00:00",
                      "last_updated": "2025-01-09T00:34:42.053158+00:00",
                      "context": {
                        "id": "01JH47R8852BH5DNJKENVSA6W9",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.ac",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "fan_only",
                          "dry",
                          "cool",
                          "heat",
                          "heat_cool",
                          "off"
                        ],
                        "min_temp": 7,
                        "max_temp": 35,
                        "target_temp_step": 1,
                        "fan_modes": [
                          "Auto",
                          "Silence",
                          "1",
                          "2",
                          "3",
                          "4",
                          "5"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "eco",
                          "boost"
                        ],
                        "current_temperature": 17.0,
                        "temperature": 23.0,
                        "fan_mode": "5",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "Kl\u00edma",
                        "supported_features": 409,
                        "icon": "mdi:air-conditioner"
                      },
                      "last_changed": "2025-01-09T00:18:32.911957+00:00",
                      "last_reported": "2025-01-09T00:38:42.051358+00:00",
                      "last_updated": "2025-01-09T00:38:42.051358+00:00",
                      "context": {
                        "id": "01JH47ZJM3AVS7M8RY9J6HXH0F",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of climate.ac"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-09T00:38:42.054734+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "id": "ac_mode",
            "initial_state": true,
            "alias": "AC mode",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.ac",
                  "climate.t_study",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_bedroom",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ]
              }
            ],
            "condition": "{{ trigger.from_state.state != trigger.to_state.state and trigger.to_state.state in ['heat', 'cool', 'heat_cool', 'fan_only'] }}",
            "action": [
              {
                "repeat": {
                  "for_each": [
                    "climate.ac",
                    "climate.t_study",
                    "climate.t_childa",
                    "climate.t_childb",
                    "climate.t_bedroom",
                    "climate.t_kitchen",
                    "climate.t_livingroom"
                  ],
                  "sequence": [
                    {
                      "if": [
                        {
                          "condition": "template",
                          "value_template": "{{ states(repeat.item) not in ['off', trigger.to_state.state] }}"
                        }
                      ],
                      "then": [
                        {
                          "data": {
                            "level": "info",
                            "message": "Sync {{ repeat.item }}: {{ states(repeat.item) }} -> {{ trigger.to_state.state }} by {{ trigger.entity_id }}: {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}!\n"
                          },
                          "action": "system_log.write"
                        },
                        {
                          "data": {
                            "entity_id": "{{ repeat.item }}",
                            "hvac_mode": "{{ trigger.to_state.state }}"
                          },
                          "action": "climate.set_hvac_mode"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH47ZJM6M2TANZ1A9AFEPFZV",
            "parent_id": "01JH47ZJM3AVS7M8RY9J6HXH0F",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "a7b6d3e3886d48c63026eafb44aab0ff",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:38:42.054546+00:00",
            "finish": "2025-01-09T00:38:42.055043+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.ac"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "06fecf87711c79f71c916386251880f1",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:39:42.717253+00:00",
            "finish": "2025-01-09T00:39:42.717890+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_study",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:39:42.717375+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_mode",
                    "state": "on",
                    "attributes": {
                      "id": "ac_mode",
                      "last_triggered": "2025-01-09T00:18:32.981708+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma m\u00f3d kapcsol\u00f3k \u00f6sszek\u00f6t\u00e9se",
                      "icon": "mdi:vector-link"
                    },
                    "last_changed": "2025-01-09T00:04:43.601810+00:00",
                    "last_reported": "2025-01-09T00:18:33.048399+00:00",
                    "last_updated": "2025-01-09T00:18:33.048399+00:00",
                    "context": {
                      "id": "01JH46TNY0CW04QYKSMNDJS6AN",
                      "parent_id": "01JH46TNWNNG2JTKZBN8R5NSF2",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_study",
                    "from_state": {
                      "entity_id": "climate.t_study",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "cool",
                          "heat",
                          "heat_cool",
                          "dry",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 1.0,
                        "fan_modes": [
                          "auto",
                          "low",
                          "middle",
                          "high"
                        ],
                        "current_temperature": 19.2,
                        "temperature": 21.0,
                        "fan_mode": "auto",
                        "hvac_action": "heat",
                        "raw_state": true,
                        "icon": "",
                        "friendly_name": "Dolgoz\u00f3",
                        "supported_features": 393
                      },
                      "last_changed": "2025-01-09T00:18:31.849510+00:00",
                      "last_reported": "2025-01-09T00:34:09.876021+00:00",
                      "last_updated": "2025-01-09T00:34:09.876021+00:00",
                      "context": {
                        "id": "01JH47Q8TMZHMK7TQB4C1AJV0N",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_study",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "cool",
                          "heat",
                          "heat_cool",
                          "dry",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 1.0,
                        "fan_modes": [
                          "auto",
                          "low",
                          "middle",
                          "high"
                        ],
                        "current_temperature": 19.5,
                        "temperature": 21.0,
                        "fan_mode": "auto",
                        "hvac_action": "heat",
                        "raw_state": true,
                        "icon": "",
                        "friendly_name": "Dolgoz\u00f3",
                        "supported_features": 393
                      },
                      "last_changed": "2025-01-09T00:18:31.849510+00:00",
                      "last_reported": "2025-01-09T00:39:42.714391+00:00",
                      "last_updated": "2025-01-09T00:39:42.714391+00:00",
                      "context": {
                        "id": "01JH481DVT2CQ7A9S66JFVTJP9",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of climate.t_study"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-09T00:39:42.717458+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "id": "ac_mode",
            "initial_state": true,
            "alias": "AC mode",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.ac",
                  "climate.t_study",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_bedroom",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ]
              }
            ],
            "condition": "{{ trigger.from_state.state != trigger.to_state.state and trigger.to_state.state in ['heat', 'cool', 'heat_cool', 'fan_only'] }}",
            "action": [
              {
                "repeat": {
                  "for_each": [
                    "climate.ac",
                    "climate.t_study",
                    "climate.t_childa",
                    "climate.t_childb",
                    "climate.t_bedroom",
                    "climate.t_kitchen",
                    "climate.t_livingroom"
                  ],
                  "sequence": [
                    {
                      "if": [
                        {
                          "condition": "template",
                          "value_template": "{{ states(repeat.item) not in ['off', trigger.to_state.state] }}"
                        }
                      ],
                      "then": [
                        {
                          "data": {
                            "level": "info",
                            "message": "Sync {{ repeat.item }}: {{ states(repeat.item) }} -> {{ trigger.to_state.state }} by {{ trigger.entity_id }}: {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}!\n"
                          },
                          "action": "system_log.write"
                        },
                        {
                          "data": {
                            "entity_id": "{{ repeat.item }}",
                            "hvac_mode": "{{ trigger.to_state.state }}"
                          },
                          "action": "climate.set_hvac_mode"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH481DVX13WSXX06GRYJZ4TB",
            "parent_id": "01JH481DVT2CQ7A9S66JFVTJP9",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "06fecf87711c79f71c916386251880f1",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:39:42.717253+00:00",
            "finish": "2025-01-09T00:39:42.717890+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_study"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "8580d41a78e384b70021340f55e9fc98",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:41:48.602958+00:00",
            "finish": "2025-01-09T00:41:48.603446+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_livingroom",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:41:48.603049+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_mode",
                    "state": "on",
                    "attributes": {
                      "id": "ac_mode",
                      "last_triggered": "2025-01-09T00:18:32.981708+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Kl\u00edma m\u00f3d kapcsol\u00f3k \u00f6sszek\u00f6t\u00e9se",
                      "icon": "mdi:vector-link"
                    },
                    "last_changed": "2025-01-09T00:04:43.601810+00:00",
                    "last_reported": "2025-01-09T00:18:33.048399+00:00",
                    "last_updated": "2025-01-09T00:18:33.048399+00:00",
                    "context": {
                      "id": "01JH46TNY0CW04QYKSMNDJS6AN",
                      "parent_id": "01JH46TNWNNG2JTKZBN8R5NSF2",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_livingroom",
                    "from_state": {
                      "entity_id": "climate.t_livingroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 21.5,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "Nappali",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-09T00:18:32.989833+00:00",
                      "last_reported": "2025-01-09T00:31:16.887913+00:00",
                      "last_updated": "2025-01-09T00:31:16.887913+00:00",
                      "context": {
                        "id": "01JH47HZWQRAZ1XTE73RKJ3XN3",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_livingroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 22.0,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "idle",
                        "preset_mode": "none",
                        "friendly_name": "Nappali",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-09T00:18:32.989833+00:00",
                      "last_reported": "2025-01-09T00:41:48.602257+00:00",
                      "last_updated": "2025-01-09T00:41:48.602257+00:00",
                      "context": {
                        "id": "01JH4858ST3RCXRHCAC1GGWVZG",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of climate.t_livingroom"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-09T00:41:48.603115+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "id": "ac_mode",
            "initial_state": true,
            "alias": "AC mode",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.ac",
                  "climate.t_study",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_bedroom",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ]
              }
            ],
            "condition": "{{ trigger.from_state.state != trigger.to_state.state and trigger.to_state.state in ['heat', 'cool', 'heat_cool', 'fan_only'] }}",
            "action": [
              {
                "repeat": {
                  "for_each": [
                    "climate.ac",
                    "climate.t_study",
                    "climate.t_childa",
                    "climate.t_childb",
                    "climate.t_bedroom",
                    "climate.t_kitchen",
                    "climate.t_livingroom"
                  ],
                  "sequence": [
                    {
                      "if": [
                        {
                          "condition": "template",
                          "value_template": "{{ states(repeat.item) not in ['off', trigger.to_state.state] }}"
                        }
                      ],
                      "then": [
                        {
                          "data": {
                            "level": "info",
                            "message": "Sync {{ repeat.item }}: {{ states(repeat.item) }} -> {{ trigger.to_state.state }} by {{ trigger.entity_id }}: {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}!\n"
                          },
                          "action": "system_log.write"
                        },
                        {
                          "data": {
                            "entity_id": "{{ repeat.item }}",
                            "hvac_mode": "{{ trigger.to_state.state }}"
                          },
                          "action": "climate.set_hvac_mode"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH4858STXM2SGV4FW4R3ZM44",
            "parent_id": "01JH4858ST3RCXRHCAC1GGWVZG",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "8580d41a78e384b70021340f55e9fc98",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2025-01-09T00:41:48.602958+00:00",
            "finish": "2025-01-09T00:41:48.603446+00:00"
          },
          "domain": "automation",
          "item_id": "ac_mode",
          "trigger": "state of climate.t_livingroom"
        }
      }
    ],
    "automation.ac_thermostat_relay": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "5aeba94f70beb5a917bed7e8125a58c5",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:18:31.862025+00:00",
            "finish": "2025-01-09T00:18:31.865675+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_study",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:18:31.862141+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay",
                      "last_triggered": "2025-01-09T00:18:18.251125+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (esem\u00e9ny)",
                      "icon": "mdi:thermostat-box-auto"
                    },
                    "last_changed": "2025-01-09T00:04:43.603106+00:00",
                    "last_reported": "2025-01-09T00:18:18.254168+00:00",
                    "last_updated": "2025-01-09T00:18:18.254168+00:00",
                    "context": {
                      "id": "01JH46T7GAFF882JRS3DEQ50EP",
                      "parent_id": "01JH46T7FE96CV962637MAZ4C4",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_study",
                    "from_state": {
                      "entity_id": "climate.t_study",
                      "state": "cool",
                      "attributes": {
                        "hvac_modes": [
                          "cool",
                          "heat",
                          "heat_cool",
                          "dry",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 1.0,
                        "fan_modes": [
                          "auto",
                          "low",
                          "middle",
                          "high"
                        ],
                        "current_temperature": 18.0,
                        "temperature": 21.0,
                        "fan_mode": "auto",
                        "hvac_action": "cooling",
                        "raw_state": true,
                        "icon": "",
                        "friendly_name": "Dolgoz\u00f3",
                        "supported_features": 393
                      },
                      "last_changed": "2025-01-09T00:18:18.222737+00:00",
                      "last_reported": "2025-01-09T00:18:18.222737+00:00",
                      "last_updated": "2025-01-09T00:18:18.222737+00:00",
                      "context": {
                        "id": "01JH46T7FE96CV962637MAZ4C4",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_study",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "cool",
                          "heat",
                          "heat_cool",
                          "dry",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 1.0,
                        "fan_modes": [
                          "auto",
                          "low",
                          "middle",
                          "high"
                        ],
                        "current_temperature": 18.0,
                        "temperature": 21.0,
                        "fan_mode": "auto",
                        "hvac_action": "heat",
                        "raw_state": true,
                        "icon": "",
                        "friendly_name": "Dolgoz\u00f3",
                        "supported_features": 393
                      },
                      "last_changed": "2025-01-09T00:18:31.849510+00:00",
                      "last_reported": "2025-01-09T00:18:31.849510+00:00",
                      "last_updated": "2025-01-09T00:18:31.849510+00:00",
                      "context": {
                        "id": "01JH46TMS90MJR1AGH32ESSCJ1",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": "hvac_action",
                    "description": "state of climate.t_study"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-09T00:18:31.862677+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "8d4c481e97a4b4293486b81433f1626f"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH46TMSNRRAY0YG4S4HTR2GS",
                    "parent_id": "01JH46TMS90MJR1AGH32ESSCJ1",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_study",
                      "switch_entity_id": "switch.ac_relay_study"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay",
            "alias": "ac_thermostat_relay",
            "initial_state": true,
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.t_study",
                  "climate.t_bedroom",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ],
                "attribute": "hvac_action"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "{{ trigger.entity_id }}",
                  "switch_entity_id": "switch.ac_relay_{{ trigger.entity_id|regex_findall_index(find='\\.(?:t|ac)_(.*)', index=0, ignorecase=False) }}"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH46TMSNRRAY0YG4S4HTR2GS",
            "parent_id": "01JH46TMS90MJR1AGH32ESSCJ1",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "5aeba94f70beb5a917bed7e8125a58c5",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:18:31.862025+00:00",
            "finish": "2025-01-09T00:18:31.865675+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_study"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "d1da29fdd3257bc548d7a1c374edad68",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:18:33.025730+00:00",
            "finish": "2025-01-09T00:18:33.028501+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_kitchen",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:18:33.025826+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay",
                      "last_triggered": "2025-01-09T00:18:31.862297+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (esem\u00e9ny)",
                      "icon": "mdi:thermostat-box-auto"
                    },
                    "last_changed": "2025-01-09T00:04:43.603106+00:00",
                    "last_reported": "2025-01-09T00:18:31.865505+00:00",
                    "last_updated": "2025-01-09T00:18:31.865505+00:00",
                    "context": {
                      "id": "01JH46TMSNRRAY0YG4S4HTR2GS",
                      "parent_id": "01JH46TMS90MJR1AGH32ESSCJ1",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_kitchen",
                    "from_state": {
                      "entity_id": "climate.t_kitchen",
                      "state": "cool",
                      "attributes": {
                        "hvac_modes": [
                          "cool",
                          "heat",
                          "heat_cool",
                          "dry",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 1.0,
                        "fan_modes": [
                          "auto",
                          "low",
                          "middle",
                          "high"
                        ],
                        "current_temperature": 21.2,
                        "temperature": 22.0,
                        "fan_mode": "middle",
                        "hvac_action": "cooling",
                        "raw_state": true,
                        "icon": "",
                        "friendly_name": "Konyha",
                        "supported_features": 393
                      },
                      "last_changed": "2025-01-09T00:18:18.221941+00:00",
                      "last_reported": "2025-01-09T00:18:18.221941+00:00",
                      "last_updated": "2025-01-09T00:18:18.221941+00:00",
                      "context": {
                        "id": "01JH46T7FDA6ZTWQC5HTBVPF3K",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_kitchen",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "cool",
                          "heat",
                          "heat_cool",
                          "dry",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 1.0,
                        "fan_modes": [
                          "auto",
                          "low",
                          "middle",
                          "high"
                        ],
                        "current_temperature": 21.2,
                        "temperature": 22.0,
                        "fan_mode": "middle",
                        "hvac_action": "heat",
                        "raw_state": true,
                        "icon": "",
                        "friendly_name": "Konyha",
                        "supported_features": 393
                      },
                      "last_changed": "2025-01-09T00:18:33.024493+00:00",
                      "last_reported": "2025-01-09T00:18:33.024493+00:00",
                      "last_updated": "2025-01-09T00:18:33.024493+00:00",
                      "context": {
                        "id": "01JH46TNWNNG2JTKZBN8R5NSF2",
                        "parent_id": "01JH46TMSC9TYAB8R7R194YTWP",
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": "hvac_action",
                    "description": "state of climate.t_kitchen"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-09T00:18:33.026209+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "2aacf0cbbb1f997be189ad7860ad9181"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH46TNY1NN3K8BSD45TS8BYK",
                    "parent_id": "01JH46TNWNNG2JTKZBN8R5NSF2",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_kitchen",
                      "switch_entity_id": "switch.ac_relay_kitchen"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay",
            "alias": "ac_thermostat_relay",
            "initial_state": true,
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.t_study",
                  "climate.t_bedroom",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ],
                "attribute": "hvac_action"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "{{ trigger.entity_id }}",
                  "switch_entity_id": "switch.ac_relay_{{ trigger.entity_id|regex_findall_index(find='\\.(?:t|ac)_(.*)', index=0, ignorecase=False) }}"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH46TNY1NN3K8BSD45TS8BYK",
            "parent_id": "01JH46TNWNNG2JTKZBN8R5NSF2",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "d1da29fdd3257bc548d7a1c374edad68",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:18:33.025730+00:00",
            "finish": "2025-01-09T00:18:33.028501+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_kitchen"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "741522ddfa84f6e1130c2eac28b0917b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:19:52.152052+00:00",
            "finish": "2025-01-09T00:19:52.176510+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_bedroom",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:19:52.152120+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay",
                      "last_triggered": "2025-01-09T00:18:33.025895+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (esem\u00e9ny)",
                      "icon": "mdi:thermostat-box-auto"
                    },
                    "last_changed": "2025-01-09T00:04:43.603106+00:00",
                    "last_reported": "2025-01-09T00:18:33.028402+00:00",
                    "last_updated": "2025-01-09T00:18:33.028402+00:00",
                    "context": {
                      "id": "01JH46TNY1NN3K8BSD45TS8BYK",
                      "parent_id": "01JH46TNWNNG2JTKZBN8R5NSF2",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_bedroom",
                    "from_state": {
                      "entity_id": "climate.t_bedroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 22.5,
                        "temperature": 23.0,
                        "fan_mode": "low",
                        "hvac_action": "idle",
                        "preset_mode": "none",
                        "friendly_name": "H\u00e1l\u00f3",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-09T00:18:32.980844+00:00",
                      "last_reported": "2025-01-09T00:19:45.313505+00:00",
                      "last_updated": "2025-01-09T00:19:45.313505+00:00",
                      "context": {
                        "id": "01JH46WWD2BRB03PQN093S67TS",
                        "parent_id": null,
                        "user_id": "5a0a633ef7644660a34bd271371786aa"
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_bedroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 22.5,
                        "temperature": 23.5,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "H\u00e1l\u00f3",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-09T00:18:32.980844+00:00",
                      "last_reported": "2025-01-09T00:19:52.147658+00:00",
                      "last_updated": "2025-01-09T00:19:52.147658+00:00",
                      "context": {
                        "id": "01JH46X0V6WCQB48XJHPNSGFN1",
                        "parent_id": null,
                        "user_id": "5a0a633ef7644660a34bd271371786aa"
                      }
                    },
                    "for": null,
                    "attribute": "hvac_action",
                    "description": "state of climate.t_bedroom"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-09T00:19:52.152662+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "19e849e9325b543778afa24060615363"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH46X36RNZR80B7XSE85S6Y2",
                    "parent_id": "01JH46X0V6WCQB48XJHPNSGFN1",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_bedroom",
                      "switch_entity_id": "switch.ac_relay_bedroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay",
            "alias": "ac_thermostat_relay",
            "initial_state": true,
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.t_study",
                  "climate.t_bedroom",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ],
                "attribute": "hvac_action"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "{{ trigger.entity_id }}",
                  "switch_entity_id": "switch.ac_relay_{{ trigger.entity_id|regex_findall_index(find='\\.(?:t|ac)_(.*)', index=0, ignorecase=False) }}"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH46X36RNZR80B7XSE85S6Y2",
            "parent_id": "01JH46X0V6WCQB48XJHPNSGFN1",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "741522ddfa84f6e1130c2eac28b0917b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:19:52.152052+00:00",
            "finish": "2025-01-09T00:19:52.176510+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_bedroom"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "6266372909b40288ef9449b3f292c7dc",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:20:49.309286+00:00",
            "finish": "2025-01-09T00:20:49.341067+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_livingroom",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:20:49.309365+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay",
                      "last_triggered": "2025-01-09T00:19:52.152246+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (esem\u00e9ny)",
                      "icon": "mdi:thermostat-box-auto"
                    },
                    "last_changed": "2025-01-09T00:04:43.603106+00:00",
                    "last_reported": "2025-01-09T00:19:52.174757+00:00",
                    "last_updated": "2025-01-09T00:19:52.174757+00:00",
                    "context": {
                      "id": "01JH46X36RNZR80B7XSE85S6Y2",
                      "parent_id": "01JH46X0V6WCQB48XJHPNSGFN1",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_livingroom",
                    "from_state": {
                      "entity_id": "climate.t_livingroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 20.5,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "idle",
                        "preset_mode": "none",
                        "friendly_name": "Nappali",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-09T00:18:32.989833+00:00",
                      "last_reported": "2025-01-09T00:18:32.989833+00:00",
                      "last_updated": "2025-01-09T00:18:32.989833+00:00",
                      "context": {
                        "id": "01JH46TMSC9TYAB8R7R194YTWP",
                        "parent_id": "01JH46TMS90MJR1AGH32ESSCJ1",
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_livingroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 21.0,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "Nappali",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-09T00:18:32.989833+00:00",
                      "last_reported": "2025-01-09T00:20:49.307760+00:00",
                      "last_updated": "2025-01-09T00:20:49.307760+00:00",
                      "context": {
                        "id": "01JH46YV0VFE23EJG317G3H9F6",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": "hvac_action",
                    "description": "state of climate.t_livingroom"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-09T00:20:49.309862+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "53a927bdfe032651758f1a6a1ac5e068"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH46YV0XZ1BBKPHCZHQN6HS5",
                    "parent_id": "01JH46YV0VFE23EJG317G3H9F6",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_livingroom",
                      "switch_entity_id": "switch.ac_relay_livingroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay",
            "alias": "ac_thermostat_relay",
            "initial_state": true,
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.t_study",
                  "climate.t_bedroom",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ],
                "attribute": "hvac_action"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "{{ trigger.entity_id }}",
                  "switch_entity_id": "switch.ac_relay_{{ trigger.entity_id|regex_findall_index(find='\\.(?:t|ac)_(.*)', index=0, ignorecase=False) }}"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH46YV0XZ1BBKPHCZHQN6HS5",
            "parent_id": "01JH46YV0VFE23EJG317G3H9F6",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "6266372909b40288ef9449b3f292c7dc",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:20:49.309286+00:00",
            "finish": "2025-01-09T00:20:49.341067+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_livingroom"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "be7579633f2e4b8584d9ab920bea81ac",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:41:48.603566+00:00",
            "finish": "2025-01-09T00:41:48.630414+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_livingroom",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-09T00:41:48.603652+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.ac_thermostat_relay",
                    "state": "on",
                    "attributes": {
                      "id": "ac_thermostat_relay",
                      "last_triggered": "2025-01-09T00:20:49.309545+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Szelepvez\u00e9rl\u00e9s (esem\u00e9ny)",
                      "icon": "mdi:thermostat-box-auto"
                    },
                    "last_changed": "2025-01-09T00:04:43.603106+00:00",
                    "last_reported": "2025-01-09T00:20:49.339583+00:00",
                    "last_updated": "2025-01-09T00:20:49.339583+00:00",
                    "context": {
                      "id": "01JH46YV0XZ1BBKPHCZHQN6HS5",
                      "parent_id": "01JH46YV0VFE23EJG317G3H9F6",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "climate.t_livingroom",
                    "from_state": {
                      "entity_id": "climate.t_livingroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 21.5,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "heating",
                        "preset_mode": "none",
                        "friendly_name": "Nappali",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-09T00:18:32.989833+00:00",
                      "last_reported": "2025-01-09T00:31:16.887913+00:00",
                      "last_updated": "2025-01-09T00:31:16.887913+00:00",
                      "context": {
                        "id": "01JH47HZWQRAZ1XTE73RKJ3XN3",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "climate.t_livingroom",
                      "state": "heat",
                      "attributes": {
                        "hvac_modes": [
                          "heat",
                          "cool",
                          "fan_only",
                          "off"
                        ],
                        "min_temp": 21,
                        "max_temp": 27,
                        "target_temp_step": 0.5,
                        "fan_modes": [
                          "auto",
                          "low",
                          "medium",
                          "high"
                        ],
                        "preset_modes": [
                          "none",
                          "away",
                          "scheduler"
                        ],
                        "current_temperature": 22.0,
                        "temperature": 22.0,
                        "fan_mode": "low",
                        "hvac_action": "idle",
                        "preset_mode": "none",
                        "friendly_name": "Nappali",
                        "supported_features": 409
                      },
                      "last_changed": "2025-01-09T00:18:32.989833+00:00",
                      "last_reported": "2025-01-09T00:41:48.602257+00:00",
                      "last_updated": "2025-01-09T00:41:48.602257+00:00",
                      "context": {
                        "id": "01JH4858ST3RCXRHCAC1GGWVZG",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": "hvac_action",
                    "description": "state of climate.t_livingroom"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-09T00:41:48.604054+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_switch_by_climate",
                  "run_id": "d24de5c0bf43be093756fea3f32ea056"
                },
                "changed_variables": {
                  "context": {
                    "id": "01JH4858SVKFQ2XS0ET6X07FWF",
                    "parent_id": "01JH4858ST3RCXRHCAC1GGWVZG",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_switch_by_climate",
                    "service_data": {
                      "climate_entity_id": "climate.t_livingroom",
                      "switch_entity_id": "switch.ac_relay_livingroom"
                    },
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "ac_thermostat_relay",
            "alias": "ac_thermostat_relay",
            "initial_state": true,
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "climate.t_study",
                  "climate.t_bedroom",
                  "climate.t_childa",
                  "climate.t_childb",
                  "climate.t_kitchen",
                  "climate.t_livingroom"
                ],
                "attribute": "hvac_action"
              }
            ],
            "action": [
              {
                "data_template": {
                  "climate_entity_id": "{{ trigger.entity_id }}",
                  "switch_entity_id": "switch.ac_relay_{{ trigger.entity_id|regex_findall_index(find='\\.(?:t|ac)_(.*)', index=0, ignorecase=False) }}"
                },
                "action": "script.turn_switch_by_climate"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01JH4858SVKFQ2XS0ET6X07FWF",
            "parent_id": "01JH4858ST3RCXRHCAC1GGWVZG",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "be7579633f2e4b8584d9ab920bea81ac",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-09T00:41:48.603566+00:00",
            "finish": "2025-01-09T00:41:48.630414+00:00"
          },
          "domain": "automation",
          "item_id": "ac_thermostat_relay",
          "trigger": "state of climate.t_livingroom"
        }
      }
    ],
    "automation.1732910862841": [
      {
        "extended_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "19498c727185b6ae82f1f544f115be44",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:33:04.158336+00:00",
            "finish": "2025-01-08T22:33:06.379435+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:33:04.158849+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.terrace_motion_light",
                    "state": "on",
                    "attributes": {
                      "id": "1732910862841",
                      "last_triggered": "2025-01-08T19:37:40.859385+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "Terrace Motion Light"
                    },
                    "last_changed": "2025-01-08T22:31:01.508515+00:00",
                    "last_reported": "2025-01-08T22:31:01.508515+00:00",
                    "last_updated": "2025-01-08T22:31:01.508515+00:00",
                    "context": {
                      "id": "01JH40NSM42VJ55YEJNJ839NE3",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.pir_terrace",
                    "from_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "off",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T22:30:56.695438+00:00",
                      "last_reported": "2025-01-08T22:30:56.695438+00:00",
                      "last_updated": "2025-01-08T22:30:56.695438+00:00",
                      "context": {
                        "id": "01JH40NMXQX54T4FFK1NFJ3210",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "on",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T22:33:04.157706+00:00",
                      "last_reported": "2025-01-08T22:33:04.157706+00:00",
                      "last_updated": "2025-01-08T22:33:04.157706+00:00",
                      "context": {
                        "id": "01JH40SHCXRD0NRKBW7P52DVW8",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.pir_terrace"
                  },
                  "target_entity": "switch.apb_q16",
                  "illuminance_currently": null,
                  "illuminance_cutoff": null,
                  "blocker_entity": null,
                  "time_limit_before": null,
                  "time_limit_after": null,
                  "no_motion_wait": "2",
                  "entity_domain": "switch",
                  "turn_off_blocker_entity": null,
                  "target_off_entity": null,
                  "sun_condition": "Below horizon"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:33:04.158982+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "switch.apb_q16"
                  ]
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-08T22:33:04.159395+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/2": [
              {
                "path": "condition/2",
                "timestamp": "2025-01-08T22:33:04.159583+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/3": [
              {
                "path": "condition/3",
                "timestamp": "2025-01-08T22:33:04.159964+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "sun.sun"
                  ]
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:33:04.160671+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH40SHCY7VYC6E7PN92BEXW2",
                    "parent_id": "01JH40SHCXRD0NRKBW7P52DVW8",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-08T22:33:04.165001+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:33:04.157706+00:00",
                        "last_reported": "2025-01-08T22:33:04.157706+00:00",
                        "last_updated": "2025-01-08T22:33:04.157706+00:00",
                        "context": {
                          "id": "01JH40SHCXRD0NRKBW7P52DVW8",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:33:06.359843+00:00",
                        "last_reported": "2025-01-08T22:33:06.359843+00:00",
                        "last_updated": "2025-01-08T22:33:06.359843+00:00",
                        "context": {
                          "id": "01JH40SKHQ76BCXCCJWEQK67H7",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                },
                "result": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:33:04.157706+00:00",
                        "last_reported": "2025-01-08T22:33:04.157706+00:00",
                        "last_updated": "2025-01-08T22:33:04.157706+00:00",
                        "context": {
                          "id": "01JH40SHCXRD0NRKBW7P52DVW8",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:33:06.359843+00:00",
                        "last_reported": "2025-01-08T22:33:06.359843+00:00",
                        "last_updated": "2025-01-08T22:33:06.359843+00:00",
                        "context": {
                          "id": "01JH40SKHQ76BCXCCJWEQK67H7",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-08T22:33:06.363909+00:00",
                "result": {
                  "choice": 2
                }
              }
            ],
            "action/2/choose/0": [
              {
                "path": "action/2/choose/0",
                "timestamp": "2025-01-08T22:33:06.364748+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/0/conditions/0": [
              {
                "path": "action/2/choose/0/conditions/0",
                "timestamp": "2025-01-08T22:33:06.364834+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/1": [
              {
                "path": "action/2/choose/1",
                "timestamp": "2025-01-08T22:33:06.365310+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/1/conditions/0": [
              {
                "path": "action/2/choose/1/conditions/0",
                "timestamp": "2025-01-08T22:33:06.365384+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2": [
              {
                "path": "action/2/choose/2",
                "timestamp": "2025-01-08T22:33:06.365666+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/2/choose/2/conditions/0": [
              {
                "path": "action/2/choose/2/conditions/0",
                "timestamp": "2025-01-08T22:33:06.365728+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/0": [
              {
                "path": "action/2/choose/2/sequence/0",
                "timestamp": "2025-01-08T22:33:06.366386+00:00",
                "result": {
                  "delay": 0.0,
                  "done": true
                }
              }
            ],
            "action/2/choose/2/sequence/1": [
              {
                "path": "action/2/choose/2/sequence/1",
                "timestamp": "2025-01-08T22:33:06.367214+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/2": [
              {
                "path": "action/2/choose/2/sequence/2",
                "timestamp": "2025-01-08T22:33:06.367598+00:00",
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "target_entity": "switch.apb_q16",
              "illuminance_currently": null,
              "illuminance_cutoff": null,
              "blocker_entity": null,
              "time_limit_before": null,
              "time_limit_after": null,
              "no_motion_wait": "2",
              "entity_domain": "{{ states[target_entity].domain }}",
              "turn_off_blocker_entity": null,
              "target_off_entity": null,
              "sun_condition": "Below horizon"
            },
            "triggers": {
              "platform": "state",
              "entity_id": "binary_sensor.pir_terrace",
              "to": "on"
            },
            "conditions": [
              {
                "condition": "template",
                "alias": "Check for illuminance conditions",
                "value_template": "{% set illuminance_defined = illuminance_currently != none and illuminance_cutoff != none  %} {% set illuminance_defined_and_low = (illuminance_defined and (states(illuminance_currently) | int(0) < states(illuminance_cutoff) | int(0)))  %}\n{% set target_entity_domain_supports_on_state_check = entity_domain != 'scene' and entity_domain != 'script' %} {% set target_entity_is_scene = entity_domain == 'scene' %} {% set scene_target_entities = state_attr(target_entity, 'entity_id') %} {% set singular_scene_entity_is_on = scene_target_entities is not none and scene_target_entities | count == 1 and scene_target_entities | first == 'on' %} {{  ( target_entity_domain_supports_on_state_check and states(target_entity) == 'on') or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and not illuminance_defined) or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and not illuminance_defined) or ( target_entity_is_scene and singular_scene_entity_is_on) }}\n"
              },
              {
                "condition": "template",
                "alias": "Check for blocker entity",
                "value_template": "{{ (blocker_entity == none) or (states(blocker_entity) == 'off') }}"
              },
              {
                "condition": "template",
                "alias": "Check for time limits",
                "value_template": "{% set current_time = now().strftime(\"%H:%M\")  %}\n{% if time_limit_before == none and time_limit_after == none %} true {% endif %}\n{% if time_limit_before != none and time_limit_after == none %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {{ current_time_is_before_limit }} {% elif time_limit_before == none and time_limit_after != none %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {{ current_time_is_after_limit }} {% endif %}\n{% if time_limit_before != none and time_limit_after != none %} {% set before_limit_is_tomorrow = states(time_limit_before) < states(time_limit_after)  %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {% set time_window_spans_midnight = states(time_limit_after) > states(time_limit_before)  %}\n  {% if time_window_spans_midnight != none and time_window_spans_midnight and before_limit_is_tomorrow %}\n  {{ current_time_is_after_limit or current_time_is_before_limit }}\n  {% elif time_window_spans_midnight != none and not time_window_spans_midnight %}\n  {{ current_time_is_before_limit and current_time_is_after_limit }}\n  {% endif %}\n{% endif %}\n"
              },
              {
                "condition": "template",
                "alias": "Check for sun state",
                "value_template": "{# Prevent breaking when no sun condition is set in existing automations #} {% if not sun_condition is defined %} {% set sun_condition = 'Always'   %} {% endif %} {# Get current sun state #} {% set current_sun_condition = states['sun.sun'].state  %}\n{# Checks for current sun state #} {% set sun_state_is_below_horizon = current_sun_condition == 'below_horizon' %} {% set sun_state_is_above_horizon = current_sun_condition == 'above_horizon' %}\n{# Check to see if a condition for sunstate is set by user #} {% set no_sun_condition = sun_condition is defined and sun_condition == 'Always' %} {# Check to see if the user wants automation to trigger below horizon #} {% set sun_condition_is_below_horizon = sun_condition == 'Below horizon' %} {# Check to see if the user wants automation to trigger above horizon #} {% set sun_condition_is_above_horizon = sun_condition == 'Above horizon' %}\n{# Checks to see if sunstate matches up with users condition #} {% set sun_condition_below_horizon_match = sun_state_is_below_horizon and sun_condition_is_below_horizon %} {% set sun_condition_above_horizon_match = sun_state_is_above_horizon and sun_condition_is_above_horizon %} {% set sun_condition_matching = sun_condition_below_horizon_match or sun_condition_above_horizon_match or no_sun_condition %} {{ sun_condition_matching }}\n{# Debug values: (uncomment to check in template dev tool) ## Set at top of template: {% set sun_condition = 'Above horizon'  %} Current sun condition: {{current_sun_condition}} Sun state is below horizon: {{ sun_state_is_below_horizon }} Sun state is above horizon: {{ sun_state_is_above_horizon }} Sun condition is set to always: {{ sun_condition_always }} Sun condition is below horizon: {{ sun_condition_is_below_horizon }} Sun condition is above horizon: {{ sun_condition_is_above_horizon }} Sun condition is below horizon match: {{ sun_condition_below_horizon_match }} Sun condition is above horizon match: {{ sun_condition_above_horizon_match }} Sun condition is a match: {{ sun_condition_matching }} #}\n"
              }
            ],
            "actions": [
              {
                "entity_id": "switch.apb_q16",
                "action": "homeassistant.turn_on"
              },
              {
                "wait_for_trigger": {
                  "platform": "state",
                  "entity_id": "binary_sensor.pir_terrace",
                  "from": "on",
                  "to": "off"
                }
              },
              {
                "choose": [
                  {
                    "alias": "Motion wait not defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait not defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  }
                ]
              }
            ],
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": "",
            "use_blueprint": {
              "path": "gist.githubusercontent.com/motion_illuminance_activated_entity.yaml",
              "input": {
                "motion_sensor": "binary_sensor.pir_terrace",
                "target_entity": "switch.apb_q16",
                "sunstate_condition": "Below horizon",
                "no_motion_wait": "2"
              }
            }
          },
          "context": {
            "id": "01JH40SHCY7VYC6E7PN92BEXW2",
            "parent_id": "01JH40SHCXRD0NRKBW7P52DVW8",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "19498c727185b6ae82f1f544f115be44",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:33:04.158336+00:00",
            "finish": "2025-01-08T22:33:06.379435+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "f72395018670ed9bdc3816089a860cc1",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:33:16.741624+00:00",
            "finish": "2025-01-08T22:33:19.250425+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:33:16.742222+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.terrace_motion_light",
                    "state": "on",
                    "attributes": {
                      "id": "1732910862841",
                      "last_triggered": "2025-01-08T22:33:04.160298+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "Terrace Motion Light"
                    },
                    "last_changed": "2025-01-08T22:31:01.508515+00:00",
                    "last_reported": "2025-01-08T22:33:06.378128+00:00",
                    "last_updated": "2025-01-08T22:33:06.378128+00:00",
                    "context": {
                      "id": "01JH40SHCY7VYC6E7PN92BEXW2",
                      "parent_id": "01JH40SHCXRD0NRKBW7P52DVW8",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.pir_terrace",
                    "from_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "off",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T22:33:06.359843+00:00",
                      "last_reported": "2025-01-08T22:33:06.359843+00:00",
                      "last_updated": "2025-01-08T22:33:06.359843+00:00",
                      "context": {
                        "id": "01JH40SKHQ76BCXCCJWEQK67H7",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "on",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T22:33:16.741133+00:00",
                      "last_reported": "2025-01-08T22:33:16.741133+00:00",
                      "last_updated": "2025-01-08T22:33:16.741133+00:00",
                      "context": {
                        "id": "01JH40SXP54SQFTP0EB4YKCNSK",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.pir_terrace"
                  },
                  "target_entity": "switch.apb_q16",
                  "illuminance_currently": null,
                  "illuminance_cutoff": null,
                  "blocker_entity": null,
                  "time_limit_before": null,
                  "time_limit_after": null,
                  "no_motion_wait": "2",
                  "entity_domain": "switch",
                  "turn_off_blocker_entity": null,
                  "target_off_entity": null,
                  "sun_condition": "Below horizon"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:33:16.742306+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "switch.apb_q16"
                  ]
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-08T22:33:16.742769+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/2": [
              {
                "path": "condition/2",
                "timestamp": "2025-01-08T22:33:16.743075+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/3": [
              {
                "path": "condition/3",
                "timestamp": "2025-01-08T22:33:16.743510+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "sun.sun"
                  ]
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:33:16.744326+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH40SXP5SVW7ES587J095FMZ",
                    "parent_id": "01JH40SXP54SQFTP0EB4YKCNSK",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-08T22:33:16.749556+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:33:16.741133+00:00",
                        "last_reported": "2025-01-08T22:33:16.741133+00:00",
                        "last_updated": "2025-01-08T22:33:16.741133+00:00",
                        "context": {
                          "id": "01JH40SXP54SQFTP0EB4YKCNSK",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:33:19.240620+00:00",
                        "last_reported": "2025-01-08T22:33:19.240620+00:00",
                        "last_updated": "2025-01-08T22:33:19.240620+00:00",
                        "context": {
                          "id": "01JH40T0488MASGRV479VTY1KF",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                },
                "result": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:33:16.741133+00:00",
                        "last_reported": "2025-01-08T22:33:16.741133+00:00",
                        "last_updated": "2025-01-08T22:33:16.741133+00:00",
                        "context": {
                          "id": "01JH40SXP54SQFTP0EB4YKCNSK",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:33:19.240620+00:00",
                        "last_reported": "2025-01-08T22:33:19.240620+00:00",
                        "last_updated": "2025-01-08T22:33:19.240620+00:00",
                        "context": {
                          "id": "01JH40T0488MASGRV479VTY1KF",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-08T22:33:19.242739+00:00",
                "result": {
                  "choice": 2
                }
              }
            ],
            "action/2/choose/0": [
              {
                "path": "action/2/choose/0",
                "timestamp": "2025-01-08T22:33:19.242906+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/0/conditions/0": [
              {
                "path": "action/2/choose/0/conditions/0",
                "timestamp": "2025-01-08T22:33:19.242980+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/1": [
              {
                "path": "action/2/choose/1",
                "timestamp": "2025-01-08T22:33:19.243346+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/1/conditions/0": [
              {
                "path": "action/2/choose/1/conditions/0",
                "timestamp": "2025-01-08T22:33:19.243488+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2": [
              {
                "path": "action/2/choose/2",
                "timestamp": "2025-01-08T22:33:19.243763+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/2/choose/2/conditions/0": [
              {
                "path": "action/2/choose/2/conditions/0",
                "timestamp": "2025-01-08T22:33:19.243831+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/0": [
              {
                "path": "action/2/choose/2/sequence/0",
                "timestamp": "2025-01-08T22:33:19.244421+00:00",
                "result": {
                  "delay": 0.0,
                  "done": true
                }
              }
            ],
            "action/2/choose/2/sequence/1": [
              {
                "path": "action/2/choose/2/sequence/1",
                "timestamp": "2025-01-08T22:33:19.245338+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/2": [
              {
                "path": "action/2/choose/2/sequence/2",
                "timestamp": "2025-01-08T22:33:19.245852+00:00",
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "target_entity": "switch.apb_q16",
              "illuminance_currently": null,
              "illuminance_cutoff": null,
              "blocker_entity": null,
              "time_limit_before": null,
              "time_limit_after": null,
              "no_motion_wait": "2",
              "entity_domain": "{{ states[target_entity].domain }}",
              "turn_off_blocker_entity": null,
              "target_off_entity": null,
              "sun_condition": "Below horizon"
            },
            "triggers": {
              "platform": "state",
              "entity_id": "binary_sensor.pir_terrace",
              "to": "on"
            },
            "conditions": [
              {
                "condition": "template",
                "alias": "Check for illuminance conditions",
                "value_template": "{% set illuminance_defined = illuminance_currently != none and illuminance_cutoff != none  %} {% set illuminance_defined_and_low = (illuminance_defined and (states(illuminance_currently) | int(0) < states(illuminance_cutoff) | int(0)))  %}\n{% set target_entity_domain_supports_on_state_check = entity_domain != 'scene' and entity_domain != 'script' %} {% set target_entity_is_scene = entity_domain == 'scene' %} {% set scene_target_entities = state_attr(target_entity, 'entity_id') %} {% set singular_scene_entity_is_on = scene_target_entities is not none and scene_target_entities | count == 1 and scene_target_entities | first == 'on' %} {{  ( target_entity_domain_supports_on_state_check and states(target_entity) == 'on') or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and not illuminance_defined) or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and not illuminance_defined) or ( target_entity_is_scene and singular_scene_entity_is_on) }}\n"
              },
              {
                "condition": "template",
                "alias": "Check for blocker entity",
                "value_template": "{{ (blocker_entity == none) or (states(blocker_entity) == 'off') }}"
              },
              {
                "condition": "template",
                "alias": "Check for time limits",
                "value_template": "{% set current_time = now().strftime(\"%H:%M\")  %}\n{% if time_limit_before == none and time_limit_after == none %} true {% endif %}\n{% if time_limit_before != none and time_limit_after == none %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {{ current_time_is_before_limit }} {% elif time_limit_before == none and time_limit_after != none %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {{ current_time_is_after_limit }} {% endif %}\n{% if time_limit_before != none and time_limit_after != none %} {% set before_limit_is_tomorrow = states(time_limit_before) < states(time_limit_after)  %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {% set time_window_spans_midnight = states(time_limit_after) > states(time_limit_before)  %}\n  {% if time_window_spans_midnight != none and time_window_spans_midnight and before_limit_is_tomorrow %}\n  {{ current_time_is_after_limit or current_time_is_before_limit }}\n  {% elif time_window_spans_midnight != none and not time_window_spans_midnight %}\n  {{ current_time_is_before_limit and current_time_is_after_limit }}\n  {% endif %}\n{% endif %}\n"
              },
              {
                "condition": "template",
                "alias": "Check for sun state",
                "value_template": "{# Prevent breaking when no sun condition is set in existing automations #} {% if not sun_condition is defined %} {% set sun_condition = 'Always'   %} {% endif %} {# Get current sun state #} {% set current_sun_condition = states['sun.sun'].state  %}\n{# Checks for current sun state #} {% set sun_state_is_below_horizon = current_sun_condition == 'below_horizon' %} {% set sun_state_is_above_horizon = current_sun_condition == 'above_horizon' %}\n{# Check to see if a condition for sunstate is set by user #} {% set no_sun_condition = sun_condition is defined and sun_condition == 'Always' %} {# Check to see if the user wants automation to trigger below horizon #} {% set sun_condition_is_below_horizon = sun_condition == 'Below horizon' %} {# Check to see if the user wants automation to trigger above horizon #} {% set sun_condition_is_above_horizon = sun_condition == 'Above horizon' %}\n{# Checks to see if sunstate matches up with users condition #} {% set sun_condition_below_horizon_match = sun_state_is_below_horizon and sun_condition_is_below_horizon %} {% set sun_condition_above_horizon_match = sun_state_is_above_horizon and sun_condition_is_above_horizon %} {% set sun_condition_matching = sun_condition_below_horizon_match or sun_condition_above_horizon_match or no_sun_condition %} {{ sun_condition_matching }}\n{# Debug values: (uncomment to check in template dev tool) ## Set at top of template: {% set sun_condition = 'Above horizon'  %} Current sun condition: {{current_sun_condition}} Sun state is below horizon: {{ sun_state_is_below_horizon }} Sun state is above horizon: {{ sun_state_is_above_horizon }} Sun condition is set to always: {{ sun_condition_always }} Sun condition is below horizon: {{ sun_condition_is_below_horizon }} Sun condition is above horizon: {{ sun_condition_is_above_horizon }} Sun condition is below horizon match: {{ sun_condition_below_horizon_match }} Sun condition is above horizon match: {{ sun_condition_above_horizon_match }} Sun condition is a match: {{ sun_condition_matching }} #}\n"
              }
            ],
            "actions": [
              {
                "entity_id": "switch.apb_q16",
                "action": "homeassistant.turn_on"
              },
              {
                "wait_for_trigger": {
                  "platform": "state",
                  "entity_id": "binary_sensor.pir_terrace",
                  "from": "on",
                  "to": "off"
                }
              },
              {
                "choose": [
                  {
                    "alias": "Motion wait not defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait not defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  }
                ]
              }
            ],
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": "",
            "use_blueprint": {
              "path": "gist.githubusercontent.com/motion_illuminance_activated_entity.yaml",
              "input": {
                "motion_sensor": "binary_sensor.pir_terrace",
                "target_entity": "switch.apb_q16",
                "sunstate_condition": "Below horizon",
                "no_motion_wait": "2"
              }
            }
          },
          "context": {
            "id": "01JH40SXP5SVW7ES587J095FMZ",
            "parent_id": "01JH40SXP54SQFTP0EB4YKCNSK",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "f72395018670ed9bdc3816089a860cc1",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:33:16.741624+00:00",
            "finish": "2025-01-08T22:33:19.250425+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "21097e3d1d1f0cbea0cdab508775c423",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:33:44.124304+00:00",
            "finish": "2025-01-08T22:33:46.531308+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:33:44.124714+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.terrace_motion_light",
                    "state": "on",
                    "attributes": {
                      "id": "1732910862841",
                      "last_triggered": "2025-01-08T22:33:16.743911+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "Terrace Motion Light"
                    },
                    "last_changed": "2025-01-08T22:31:01.508515+00:00",
                    "last_reported": "2025-01-08T22:33:19.249546+00:00",
                    "last_updated": "2025-01-08T22:33:19.249546+00:00",
                    "context": {
                      "id": "01JH40SXP5SVW7ES587J095FMZ",
                      "parent_id": "01JH40SXP54SQFTP0EB4YKCNSK",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.pir_terrace",
                    "from_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "off",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T22:33:19.240620+00:00",
                      "last_reported": "2025-01-08T22:33:19.240620+00:00",
                      "last_updated": "2025-01-08T22:33:19.240620+00:00",
                      "context": {
                        "id": "01JH40T0488MASGRV479VTY1KF",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "on",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T22:33:44.122858+00:00",
                      "last_reported": "2025-01-08T22:33:44.122858+00:00",
                      "last_updated": "2025-01-08T22:33:44.122858+00:00",
                      "context": {
                        "id": "01JH40TRDT3V1D2HE5BA3WSF0M",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.pir_terrace"
                  },
                  "target_entity": "switch.apb_q16",
                  "illuminance_currently": null,
                  "illuminance_cutoff": null,
                  "blocker_entity": null,
                  "time_limit_before": null,
                  "time_limit_after": null,
                  "no_motion_wait": "2",
                  "entity_domain": "switch",
                  "turn_off_blocker_entity": null,
                  "target_off_entity": null,
                  "sun_condition": "Below horizon"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:33:44.124805+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "switch.apb_q16"
                  ]
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-08T22:33:44.125122+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/2": [
              {
                "path": "condition/2",
                "timestamp": "2025-01-08T22:33:44.125286+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/3": [
              {
                "path": "condition/3",
                "timestamp": "2025-01-08T22:33:44.125565+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "sun.sun"
                  ]
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:33:44.126152+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH40TRDWPASYCC8VF9TSWW19",
                    "parent_id": "01JH40TRDT3V1D2HE5BA3WSF0M",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-08T22:33:44.131922+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:33:44.122858+00:00",
                        "last_reported": "2025-01-08T22:33:44.122858+00:00",
                        "last_updated": "2025-01-08T22:33:44.122858+00:00",
                        "context": {
                          "id": "01JH40TRDT3V1D2HE5BA3WSF0M",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:33:46.521474+00:00",
                        "last_reported": "2025-01-08T22:33:46.521474+00:00",
                        "last_updated": "2025-01-08T22:33:46.521474+00:00",
                        "context": {
                          "id": "01JH40TTRSES3JXN0W42PK9R5Q",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                },
                "result": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:33:44.122858+00:00",
                        "last_reported": "2025-01-08T22:33:44.122858+00:00",
                        "last_updated": "2025-01-08T22:33:44.122858+00:00",
                        "context": {
                          "id": "01JH40TRDT3V1D2HE5BA3WSF0M",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:33:46.521474+00:00",
                        "last_reported": "2025-01-08T22:33:46.521474+00:00",
                        "last_updated": "2025-01-08T22:33:46.521474+00:00",
                        "context": {
                          "id": "01JH40TTRSES3JXN0W42PK9R5Q",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-08T22:33:46.523535+00:00",
                "result": {
                  "choice": 2
                }
              }
            ],
            "action/2/choose/0": [
              {
                "path": "action/2/choose/0",
                "timestamp": "2025-01-08T22:33:46.523691+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/0/conditions/0": [
              {
                "path": "action/2/choose/0/conditions/0",
                "timestamp": "2025-01-08T22:33:46.523767+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/1": [
              {
                "path": "action/2/choose/1",
                "timestamp": "2025-01-08T22:33:46.524095+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/1/conditions/0": [
              {
                "path": "action/2/choose/1/conditions/0",
                "timestamp": "2025-01-08T22:33:46.524257+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2": [
              {
                "path": "action/2/choose/2",
                "timestamp": "2025-01-08T22:33:46.524523+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/2/choose/2/conditions/0": [
              {
                "path": "action/2/choose/2/conditions/0",
                "timestamp": "2025-01-08T22:33:46.524590+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/0": [
              {
                "path": "action/2/choose/2/sequence/0",
                "timestamp": "2025-01-08T22:33:46.525160+00:00",
                "result": {
                  "delay": 0.0,
                  "done": true
                }
              }
            ],
            "action/2/choose/2/sequence/1": [
              {
                "path": "action/2/choose/2/sequence/1",
                "timestamp": "2025-01-08T22:33:46.526141+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/2": [
              {
                "path": "action/2/choose/2/sequence/2",
                "timestamp": "2025-01-08T22:33:46.526660+00:00",
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "target_entity": "switch.apb_q16",
              "illuminance_currently": null,
              "illuminance_cutoff": null,
              "blocker_entity": null,
              "time_limit_before": null,
              "time_limit_after": null,
              "no_motion_wait": "2",
              "entity_domain": "{{ states[target_entity].domain }}",
              "turn_off_blocker_entity": null,
              "target_off_entity": null,
              "sun_condition": "Below horizon"
            },
            "triggers": {
              "platform": "state",
              "entity_id": "binary_sensor.pir_terrace",
              "to": "on"
            },
            "conditions": [
              {
                "condition": "template",
                "alias": "Check for illuminance conditions",
                "value_template": "{% set illuminance_defined = illuminance_currently != none and illuminance_cutoff != none  %} {% set illuminance_defined_and_low = (illuminance_defined and (states(illuminance_currently) | int(0) < states(illuminance_cutoff) | int(0)))  %}\n{% set target_entity_domain_supports_on_state_check = entity_domain != 'scene' and entity_domain != 'script' %} {% set target_entity_is_scene = entity_domain == 'scene' %} {% set scene_target_entities = state_attr(target_entity, 'entity_id') %} {% set singular_scene_entity_is_on = scene_target_entities is not none and scene_target_entities | count == 1 and scene_target_entities | first == 'on' %} {{  ( target_entity_domain_supports_on_state_check and states(target_entity) == 'on') or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and not illuminance_defined) or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and not illuminance_defined) or ( target_entity_is_scene and singular_scene_entity_is_on) }}\n"
              },
              {
                "condition": "template",
                "alias": "Check for blocker entity",
                "value_template": "{{ (blocker_entity == none) or (states(blocker_entity) == 'off') }}"
              },
              {
                "condition": "template",
                "alias": "Check for time limits",
                "value_template": "{% set current_time = now().strftime(\"%H:%M\")  %}\n{% if time_limit_before == none and time_limit_after == none %} true {% endif %}\n{% if time_limit_before != none and time_limit_after == none %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {{ current_time_is_before_limit }} {% elif time_limit_before == none and time_limit_after != none %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {{ current_time_is_after_limit }} {% endif %}\n{% if time_limit_before != none and time_limit_after != none %} {% set before_limit_is_tomorrow = states(time_limit_before) < states(time_limit_after)  %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {% set time_window_spans_midnight = states(time_limit_after) > states(time_limit_before)  %}\n  {% if time_window_spans_midnight != none and time_window_spans_midnight and before_limit_is_tomorrow %}\n  {{ current_time_is_after_limit or current_time_is_before_limit }}\n  {% elif time_window_spans_midnight != none and not time_window_spans_midnight %}\n  {{ current_time_is_before_limit and current_time_is_after_limit }}\n  {% endif %}\n{% endif %}\n"
              },
              {
                "condition": "template",
                "alias": "Check for sun state",
                "value_template": "{# Prevent breaking when no sun condition is set in existing automations #} {% if not sun_condition is defined %} {% set sun_condition = 'Always'   %} {% endif %} {# Get current sun state #} {% set current_sun_condition = states['sun.sun'].state  %}\n{# Checks for current sun state #} {% set sun_state_is_below_horizon = current_sun_condition == 'below_horizon' %} {% set sun_state_is_above_horizon = current_sun_condition == 'above_horizon' %}\n{# Check to see if a condition for sunstate is set by user #} {% set no_sun_condition = sun_condition is defined and sun_condition == 'Always' %} {# Check to see if the user wants automation to trigger below horizon #} {% set sun_condition_is_below_horizon = sun_condition == 'Below horizon' %} {# Check to see if the user wants automation to trigger above horizon #} {% set sun_condition_is_above_horizon = sun_condition == 'Above horizon' %}\n{# Checks to see if sunstate matches up with users condition #} {% set sun_condition_below_horizon_match = sun_state_is_below_horizon and sun_condition_is_below_horizon %} {% set sun_condition_above_horizon_match = sun_state_is_above_horizon and sun_condition_is_above_horizon %} {% set sun_condition_matching = sun_condition_below_horizon_match or sun_condition_above_horizon_match or no_sun_condition %} {{ sun_condition_matching }}\n{# Debug values: (uncomment to check in template dev tool) ## Set at top of template: {% set sun_condition = 'Above horizon'  %} Current sun condition: {{current_sun_condition}} Sun state is below horizon: {{ sun_state_is_below_horizon }} Sun state is above horizon: {{ sun_state_is_above_horizon }} Sun condition is set to always: {{ sun_condition_always }} Sun condition is below horizon: {{ sun_condition_is_below_horizon }} Sun condition is above horizon: {{ sun_condition_is_above_horizon }} Sun condition is below horizon match: {{ sun_condition_below_horizon_match }} Sun condition is above horizon match: {{ sun_condition_above_horizon_match }} Sun condition is a match: {{ sun_condition_matching }} #}\n"
              }
            ],
            "actions": [
              {
                "entity_id": "switch.apb_q16",
                "action": "homeassistant.turn_on"
              },
              {
                "wait_for_trigger": {
                  "platform": "state",
                  "entity_id": "binary_sensor.pir_terrace",
                  "from": "on",
                  "to": "off"
                }
              },
              {
                "choose": [
                  {
                    "alias": "Motion wait not defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait not defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  }
                ]
              }
            ],
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": "",
            "use_blueprint": {
              "path": "gist.githubusercontent.com/motion_illuminance_activated_entity.yaml",
              "input": {
                "motion_sensor": "binary_sensor.pir_terrace",
                "target_entity": "switch.apb_q16",
                "sunstate_condition": "Below horizon",
                "no_motion_wait": "2"
              }
            }
          },
          "context": {
            "id": "01JH40TRDWPASYCC8VF9TSWW19",
            "parent_id": "01JH40TRDT3V1D2HE5BA3WSF0M",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "21097e3d1d1f0cbea0cdab508775c423",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:33:44.124304+00:00",
            "finish": "2025-01-08T22:33:46.531308+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "07faa5f97f246aafccdbaa336468855b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:35:36.152025+00:00",
            "finish": "2025-01-08T22:35:38.499480+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2025-01-08T22:35:36.152525+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.terrace_motion_light",
                    "state": "on",
                    "attributes": {
                      "id": "1732910862841",
                      "last_triggered": "2025-01-08T22:33:44.125870+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "Terrace Motion Light"
                    },
                    "last_changed": "2025-01-08T22:31:01.508515+00:00",
                    "last_reported": "2025-01-08T22:33:46.530482+00:00",
                    "last_updated": "2025-01-08T22:33:46.530482+00:00",
                    "context": {
                      "id": "01JH40TRDWPASYCC8VF9TSWW19",
                      "parent_id": "01JH40TRDT3V1D2HE5BA3WSF0M",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.pir_terrace",
                    "from_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "off",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T22:33:46.521474+00:00",
                      "last_reported": "2025-01-08T22:33:46.521474+00:00",
                      "last_updated": "2025-01-08T22:33:46.521474+00:00",
                      "context": {
                        "id": "01JH40TTRSES3JXN0W42PK9R5Q",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.pir_terrace",
                      "state": "on",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "Terasz PIR"
                      },
                      "last_changed": "2025-01-08T22:35:36.151497+00:00",
                      "last_reported": "2025-01-08T22:35:36.151497+00:00",
                      "last_updated": "2025-01-08T22:35:36.151497+00:00",
                      "context": {
                        "id": "01JH40Y5TQSYRGWBT648BQE16R",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.pir_terrace"
                  },
                  "target_entity": "switch.apb_q16",
                  "illuminance_currently": null,
                  "illuminance_cutoff": null,
                  "blocker_entity": null,
                  "time_limit_before": null,
                  "time_limit_after": null,
                  "no_motion_wait": "2",
                  "entity_domain": "switch",
                  "turn_off_blocker_entity": null,
                  "target_off_entity": null,
                  "sun_condition": "Below horizon"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2025-01-08T22:35:36.152592+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "switch.apb_q16"
                  ]
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2025-01-08T22:35:36.152980+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/2": [
              {
                "path": "condition/2",
                "timestamp": "2025-01-08T22:35:36.153126+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/3": [
              {
                "path": "condition/3",
                "timestamp": "2025-01-08T22:35:36.153716+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "sun.sun"
                  ]
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2025-01-08T22:35:36.154436+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01JH40Y5TQY3JDDYQ3JSGPH8WH",
                    "parent_id": "01JH40Y5TQSYRGWBT648BQE16R",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2025-01-08T22:35:36.162044+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:35:36.151497+00:00",
                        "last_reported": "2025-01-08T22:35:36.151497+00:00",
                        "last_updated": "2025-01-08T22:35:36.151497+00:00",
                        "context": {
                          "id": "01JH40Y5TQSYRGWBT648BQE16R",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:35:38.492490+00:00",
                        "last_reported": "2025-01-08T22:35:38.492490+00:00",
                        "last_updated": "2025-01-08T22:35:38.492490+00:00",
                        "context": {
                          "id": "01JH40Y83WZTRJHMVE2QFXWAQT",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                },
                "result": {
                  "wait": {
                    "remaining": null,
                    "completed": true,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.pir_terrace",
                      "from_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "on",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:35:36.151497+00:00",
                        "last_reported": "2025-01-08T22:35:36.151497+00:00",
                        "last_updated": "2025-01-08T22:35:36.151497+00:00",
                        "context": {
                          "id": "01JH40Y5TQSYRGWBT648BQE16R",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.pir_terrace",
                        "state": "off",
                        "attributes": {
                          "device_class": "motion",
                          "friendly_name": "Terasz PIR"
                        },
                        "last_changed": "2025-01-08T22:35:38.492490+00:00",
                        "last_reported": "2025-01-08T22:35:38.492490+00:00",
                        "last_updated": "2025-01-08T22:35:38.492490+00:00",
                        "context": {
                          "id": "01JH40Y83WZTRJHMVE2QFXWAQT",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.pir_terrace"
                    }
                  }
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2025-01-08T22:35:38.493380+00:00",
                "result": {
                  "choice": 2
                }
              }
            ],
            "action/2/choose/0": [
              {
                "path": "action/2/choose/0",
                "timestamp": "2025-01-08T22:35:38.493501+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/0/conditions/0": [
              {
                "path": "action/2/choose/0/conditions/0",
                "timestamp": "2025-01-08T22:35:38.493548+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/1": [
              {
                "path": "action/2/choose/1",
                "timestamp": "2025-01-08T22:35:38.493776+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/2/choose/1/conditions/0": [
              {
                "path": "action/2/choose/1/conditions/0",
                "timestamp": "2025-01-08T22:35:38.493821+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2": [
              {
                "path": "action/2/choose/2",
                "timestamp": "2025-01-08T22:35:38.493977+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/2/choose/2/conditions/0": [
              {
                "path": "action/2/choose/2/conditions/0",
                "timestamp": "2025-01-08T22:35:38.494016+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/0": [
              {
                "path": "action/2/choose/2/sequence/0",
                "timestamp": "2025-01-08T22:35:38.494479+00:00",
                "result": {
                  "delay": 0.0,
                  "done": true
                }
              }
            ],
            "action/2/choose/2/sequence/1": [
              {
                "path": "action/2/choose/2/sequence/1",
                "timestamp": "2025-01-08T22:35:38.495148+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/2/choose/2/sequence/2": [
              {
                "path": "action/2/choose/2/sequence/2",
                "timestamp": "2025-01-08T22:35:38.495570+00:00",
                "result": {
                  "params": {
                    "domain": "homeassistant",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.apb_q16"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "target_entity": "switch.apb_q16",
              "illuminance_currently": null,
              "illuminance_cutoff": null,
              "blocker_entity": null,
              "time_limit_before": null,
              "time_limit_after": null,
              "no_motion_wait": "2",
              "entity_domain": "{{ states[target_entity].domain }}",
              "turn_off_blocker_entity": null,
              "target_off_entity": null,
              "sun_condition": "Below horizon"
            },
            "triggers": {
              "platform": "state",
              "entity_id": "binary_sensor.pir_terrace",
              "to": "on"
            },
            "conditions": [
              {
                "condition": "template",
                "alias": "Check for illuminance conditions",
                "value_template": "{% set illuminance_defined = illuminance_currently != none and illuminance_cutoff != none  %} {% set illuminance_defined_and_low = (illuminance_defined and (states(illuminance_currently) | int(0) < states(illuminance_cutoff) | int(0)))  %}\n{% set target_entity_domain_supports_on_state_check = entity_domain != 'scene' and entity_domain != 'script' %} {% set target_entity_is_scene = entity_domain == 'scene' %} {% set scene_target_entities = state_attr(target_entity, 'entity_id') %} {% set singular_scene_entity_is_on = scene_target_entities is not none and scene_target_entities | count == 1 and scene_target_entities | first == 'on' %} {{  ( target_entity_domain_supports_on_state_check and states(target_entity) == 'on') or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and not illuminance_defined) or ( target_entity_domain_supports_on_state_check and states(target_entity) == 'off' and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and illuminance_defined_and_low) or ( not target_entity_domain_supports_on_state_check and not illuminance_defined) or ( target_entity_is_scene and singular_scene_entity_is_on) }}\n"
              },
              {
                "condition": "template",
                "alias": "Check for blocker entity",
                "value_template": "{{ (blocker_entity == none) or (states(blocker_entity) == 'off') }}"
              },
              {
                "condition": "template",
                "alias": "Check for time limits",
                "value_template": "{% set current_time = now().strftime(\"%H:%M\")  %}\n{% if time_limit_before == none and time_limit_after == none %} true {% endif %}\n{% if time_limit_before != none and time_limit_after == none %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {{ current_time_is_before_limit }} {% elif time_limit_before == none and time_limit_after != none %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {{ current_time_is_after_limit }} {% endif %}\n{% if time_limit_before != none and time_limit_after != none %} {% set before_limit_is_tomorrow = states(time_limit_before) < states(time_limit_after)  %} {% set current_time_is_before_limit = current_time < states(time_limit_before)  %} {% set current_time_is_after_limit = current_time > states(time_limit_after)  %} {% set time_window_spans_midnight = states(time_limit_after) > states(time_limit_before)  %}\n  {% if time_window_spans_midnight != none and time_window_spans_midnight and before_limit_is_tomorrow %}\n  {{ current_time_is_after_limit or current_time_is_before_limit }}\n  {% elif time_window_spans_midnight != none and not time_window_spans_midnight %}\n  {{ current_time_is_before_limit and current_time_is_after_limit }}\n  {% endif %}\n{% endif %}\n"
              },
              {
                "condition": "template",
                "alias": "Check for sun state",
                "value_template": "{# Prevent breaking when no sun condition is set in existing automations #} {% if not sun_condition is defined %} {% set sun_condition = 'Always'   %} {% endif %} {# Get current sun state #} {% set current_sun_condition = states['sun.sun'].state  %}\n{# Checks for current sun state #} {% set sun_state_is_below_horizon = current_sun_condition == 'below_horizon' %} {% set sun_state_is_above_horizon = current_sun_condition == 'above_horizon' %}\n{# Check to see if a condition for sunstate is set by user #} {% set no_sun_condition = sun_condition is defined and sun_condition == 'Always' %} {# Check to see if the user wants automation to trigger below horizon #} {% set sun_condition_is_below_horizon = sun_condition == 'Below horizon' %} {# Check to see if the user wants automation to trigger above horizon #} {% set sun_condition_is_above_horizon = sun_condition == 'Above horizon' %}\n{# Checks to see if sunstate matches up with users condition #} {% set sun_condition_below_horizon_match = sun_state_is_below_horizon and sun_condition_is_below_horizon %} {% set sun_condition_above_horizon_match = sun_state_is_above_horizon and sun_condition_is_above_horizon %} {% set sun_condition_matching = sun_condition_below_horizon_match or sun_condition_above_horizon_match or no_sun_condition %} {{ sun_condition_matching }}\n{# Debug values: (uncomment to check in template dev tool) ## Set at top of template: {% set sun_condition = 'Above horizon'  %} Current sun condition: {{current_sun_condition}} Sun state is below horizon: {{ sun_state_is_below_horizon }} Sun state is above horizon: {{ sun_state_is_above_horizon }} Sun condition is set to always: {{ sun_condition_always }} Sun condition is below horizon: {{ sun_condition_is_below_horizon }} Sun condition is above horizon: {{ sun_condition_is_above_horizon }} Sun condition is below horizon match: {{ sun_condition_below_horizon_match }} Sun condition is above horizon match: {{ sun_condition_above_horizon_match }} Sun condition is a match: {{ sun_condition_matching }} #}\n"
              }
            ],
            "actions": [
              {
                "entity_id": "switch.apb_q16",
                "action": "homeassistant.turn_on"
              },
              {
                "wait_for_trigger": {
                  "platform": "state",
                  "entity_id": "binary_sensor.pir_terrace",
                  "from": "on",
                  "to": "off"
                }
              },
              {
                "choose": [
                  {
                    "alias": "Motion wait not defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait not defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait == none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity not defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity == none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": "switch.apb_q16",
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  },
                  {
                    "alias": "Motion wait defined and target off entity defined",
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ no_motion_wait != none and target_off_entity != none }}"
                      }
                    ],
                    "sequence": [
                      {
                        "delay": {
                          "minutes": "{{ states(no_motion_wait) | int(0) }}"
                        }
                      },
                      {
                        "alias": "Check if blocker entity is defined and on",
                        "condition": "template",
                        "value_template": "{{ (turn_off_blocker_entity == none) or (states(turn_off_blocker_entity) == 'off') }}"
                      },
                      {
                        "entity_id": null,
                        "action": "homeassistant.turn_off"
                      }
                    ]
                  }
                ]
              }
            ],
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1732910862841",
            "alias": "Terrace Motion Light",
            "description": "",
            "use_blueprint": {
              "path": "gist.githubusercontent.com/motion_illuminance_activated_entity.yaml",
              "input": {
                "motion_sensor": "binary_sensor.pir_terrace",
                "target_entity": "switch.apb_q16",
                "sunstate_condition": "Below horizon",
                "no_motion_wait": "2"
              }
            }
          },
          "context": {
            "id": "01JH40Y5TQY3JDDYQ3JSGPH8WH",
            "parent_id": "01JH40Y5TQSYRGWBT648BQE16R",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/2/choose/2/sequence/2",
          "run_id": "07faa5f97f246aafccdbaa336468855b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2025-01-08T22:35:36.152025+00:00",
            "finish": "2025-01-08T22:35:38.499480+00:00"
          },
          "domain": "automation",
          "item_id": "1732910862841",
          "trigger": "state of binary_sensor.pir_terrace"
        }
      }
    ]
  }
}