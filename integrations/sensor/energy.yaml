  - platform: template
    sensors:
      # from energy meter pulse (see automation for saver/input_number updates)
#      energy_meter_kwh:
#        value_template: "{{ states('input_number.energy_meter_kwh')|float|round(4) }}"
#        unit_of_measurement: kWh
#      energy_meter_power:
#        unit_of_measurement: W
#        value_template: >-
#          {{ state_attr('saver.saver', 'variables')["energy_meter_power"]|int }}

      # from PZEM-004t v3
      energy_power:
        value_template: "{{ states('sensor.energy_power1')|default(0)|int + states('sensor.energy_power2')|int + states('sensor.energy_power3')|int }}"
        unit_of_measurement: W
      energy_kwh:
        value_template: "{{ (states('sensor.energy_energy1')|default(0)|float + states('sensor.energy_energy2')|float + states('sensor.energy_energy3')|float)|float|round(3) }}"
        unit_of_measurement: kWh

      # energy flow direction calculation
      # if solar energy production is higher than what goes to grid, then we push to grid, when lower (cloudy/night), we pull from grid
      grid_power:
        unit_of_measurement: W
        value_template: >-
          {% if states('sensor.solaredge_ac_power')|int > states('sensor.energy_power')|int %}
            {{ states('sensor.energy_power')|int }}
          {% else %}
            {{ -1 * states('sensor.energy_power')|int }}
          {% endif %}

      grid_kwh:
        unit_of_measurement: kWh
        value_template: "{{ states('sensor.solaredge_ac_energy_kwh')|float - states('sensor.energy_kwh')|float }}"
